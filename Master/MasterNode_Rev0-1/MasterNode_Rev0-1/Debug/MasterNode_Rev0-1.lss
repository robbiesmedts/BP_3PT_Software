
MasterNode_Rev0-1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005cf0  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00405cf0  00405cf0  00015cf0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  00405cf8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00007b2c  204009d0  004066c8  000209d0  2**3
                  ALLOC
  4 .stack        00002004  204084fc  0040e1f4  000209d0  2**0
                  ALLOC
  5 .heap         00000200  2040a500  004101f8  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   00026065  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00004a1c  00000000  00000000  00046abc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00009ace  00000000  00000000  0004b4d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000df0  00000000  00000000  00054fa6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000f20  00000000  00000000  00055d96  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000ebda  00000000  00000000  00056cb6  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00012256  00000000  00000000  00065890  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000a5020  00000000  00000000  00077ae6  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00002db4  00000000  00000000  0011cb08  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	00 a5 40 20 e1 20 40 00 dd 20 40 00 dd 20 40 00     ..@ . @.. @.. @.
  400010:	dd 20 40 00 dd 20 40 00 dd 20 40 00 00 00 00 00     . @.. @.. @.....
	...
  40002c:	dd 20 40 00 dd 20 40 00 00 00 00 00 dd 20 40 00     . @.. @...... @.
  40003c:	dd 20 40 00 dd 20 40 00 dd 20 40 00 dd 20 40 00     . @.. @.. @.. @.
  40004c:	dd 20 40 00 dd 20 40 00 dd 20 40 00 dd 20 40 00     . @.. @.. @.. @.
  40005c:	dd 20 40 00 dd 20 40 00 00 00 00 00 39 1f 40 00     . @.. @.....9.@.
  40006c:	4d 1f 40 00 61 1f 40 00 dd 20 40 00 dd 20 40 00     M.@.a.@.. @.. @.
  40007c:	dd 20 40 00 75 1f 40 00 89 1f 40 00 dd 20 40 00     . @.u.@...@.. @.
  40008c:	dd 20 40 00 dd 20 40 00 dd 20 40 00 dd 20 40 00     . @.. @.. @.. @.
  40009c:	dd 20 40 00 dd 20 40 00 dd 20 40 00 dd 20 40 00     . @.. @.. @.. @.
  4000ac:	dd 20 40 00 dd 20 40 00 dd 20 40 00 dd 20 40 00     . @.. @.. @.. @.
  4000bc:	dd 20 40 00 dd 20 40 00 dd 20 40 00 dd 20 40 00     . @.. @.. @.. @.
  4000cc:	dd 20 40 00 dd 20 40 00 dd 20 40 00 dd 20 40 00     . @.. @.. @.. @.
  4000dc:	e1 0b 40 00 dd 20 40 00 dd 20 40 00 dd 20 40 00     ..@.. @.. @.. @.
  4000ec:	dd 20 40 00 dd 20 40 00 dd 20 40 00 dd 20 40 00     . @.. @.. @.. @.
  4000fc:	dd 20 40 00 dd 20 40 00 dd 20 40 00 dd 20 40 00     . @.. @.. @.. @.
  40010c:	dd 20 40 00 dd 20 40 00 00 00 00 00 00 00 00 00     . @.. @.........
  40011c:	00 00 00 00 dd 20 40 00 dd 20 40 00 dd 20 40 00     ..... @.. @.. @.
  40012c:	dd 20 40 00 dd 20 40 00 dd 20 40 00 dd 20 40 00     . @.. @.. @.. @.
  40013c:	dd 20 40 00 dd 20 40 00 dd 20 40 00 dd 20 40 00     . @.. @.. @.. @.
  40014c:	dd 20 40 00 dd 20 40 00 dd 20 40 00 dd 20 40 00     . @.. @.. @.. @.
  40015c:	dd 20 40 00 dd 20 40 00 dd 20 40 00                 . @.. @.. @.

00400168 <__do_global_dtors_aux>:
  400168:	b510      	push	{r4, lr}
  40016a:	4c05      	ldr	r4, [pc, #20]	; (400180 <__do_global_dtors_aux+0x18>)
  40016c:	7823      	ldrb	r3, [r4, #0]
  40016e:	b933      	cbnz	r3, 40017e <__do_global_dtors_aux+0x16>
  400170:	4b04      	ldr	r3, [pc, #16]	; (400184 <__do_global_dtors_aux+0x1c>)
  400172:	b113      	cbz	r3, 40017a <__do_global_dtors_aux+0x12>
  400174:	4804      	ldr	r0, [pc, #16]	; (400188 <__do_global_dtors_aux+0x20>)
  400176:	f3af 8000 	nop.w
  40017a:	2301      	movs	r3, #1
  40017c:	7023      	strb	r3, [r4, #0]
  40017e:	bd10      	pop	{r4, pc}
  400180:	204009d0 	.word	0x204009d0
  400184:	00000000 	.word	0x00000000
  400188:	00405cf8 	.word	0x00405cf8

0040018c <frame_dummy>:
  40018c:	4b0c      	ldr	r3, [pc, #48]	; (4001c0 <frame_dummy+0x34>)
  40018e:	b143      	cbz	r3, 4001a2 <frame_dummy+0x16>
  400190:	480c      	ldr	r0, [pc, #48]	; (4001c4 <frame_dummy+0x38>)
  400192:	490d      	ldr	r1, [pc, #52]	; (4001c8 <frame_dummy+0x3c>)
  400194:	b510      	push	{r4, lr}
  400196:	f3af 8000 	nop.w
  40019a:	480c      	ldr	r0, [pc, #48]	; (4001cc <frame_dummy+0x40>)
  40019c:	6803      	ldr	r3, [r0, #0]
  40019e:	b923      	cbnz	r3, 4001aa <frame_dummy+0x1e>
  4001a0:	bd10      	pop	{r4, pc}
  4001a2:	480a      	ldr	r0, [pc, #40]	; (4001cc <frame_dummy+0x40>)
  4001a4:	6803      	ldr	r3, [r0, #0]
  4001a6:	b933      	cbnz	r3, 4001b6 <frame_dummy+0x2a>
  4001a8:	4770      	bx	lr
  4001aa:	4b09      	ldr	r3, [pc, #36]	; (4001d0 <frame_dummy+0x44>)
  4001ac:	2b00      	cmp	r3, #0
  4001ae:	d0f7      	beq.n	4001a0 <frame_dummy+0x14>
  4001b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4001b4:	4718      	bx	r3
  4001b6:	4b06      	ldr	r3, [pc, #24]	; (4001d0 <frame_dummy+0x44>)
  4001b8:	2b00      	cmp	r3, #0
  4001ba:	d0f5      	beq.n	4001a8 <frame_dummy+0x1c>
  4001bc:	4718      	bx	r3
  4001be:	bf00      	nop
  4001c0:	00000000 	.word	0x00000000
  4001c4:	00405cf8 	.word	0x00405cf8
  4001c8:	204009d4 	.word	0x204009d4
  4001cc:	00405cf8 	.word	0x00405cf8
  4001d0:	00000000 	.word	0x00000000

004001d4 <_read>:
  4001d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001d8:	b980      	cbnz	r0, 4001fc <_read+0x28>
  4001da:	460c      	mov	r4, r1
  4001dc:	4690      	mov	r8, r2
  4001de:	2a00      	cmp	r2, #0
  4001e0:	dd0f      	ble.n	400202 <_read+0x2e>
  4001e2:	188f      	adds	r7, r1, r2
  4001e4:	4e08      	ldr	r6, [pc, #32]	; (400208 <_read+0x34>)
  4001e6:	4d09      	ldr	r5, [pc, #36]	; (40020c <_read+0x38>)
  4001e8:	6830      	ldr	r0, [r6, #0]
  4001ea:	4621      	mov	r1, r4
  4001ec:	682b      	ldr	r3, [r5, #0]
  4001ee:	4798      	blx	r3
  4001f0:	3401      	adds	r4, #1
  4001f2:	42bc      	cmp	r4, r7
  4001f4:	d1f8      	bne.n	4001e8 <_read+0x14>
  4001f6:	4640      	mov	r0, r8
  4001f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001fc:	f04f 38ff 	mov.w	r8, #4294967295
  400200:	e7f9      	b.n	4001f6 <_read+0x22>
  400202:	4680      	mov	r8, r0
  400204:	e7f7      	b.n	4001f6 <_read+0x22>
  400206:	bf00      	nop
  400208:	204082e8 	.word	0x204082e8
  40020c:	204072d0 	.word	0x204072d0

00400210 <circ_inc>:
#endif

/** Increment head or tail */
static void circ_inc(uint16_t *headortail, uint32_t size)
{
        (*headortail)++;
  400210:	8803      	ldrh	r3, [r0, #0]
  400212:	3301      	adds	r3, #1
  400214:	b29b      	uxth	r3, r3
        if((*headortail) >= size) {
            (*headortail) = 0;
  400216:	428b      	cmp	r3, r1
  400218:	bf28      	it	cs
  40021a:	2300      	movcs	r3, #0
  40021c:	8003      	strh	r3, [r0, #0]
  40021e:	4770      	bx	lr

00400220 <gmac_reset_tx_mem>:
 *
 * \param p_dev Pointer to GMAC driver instance.
 *
 */
static void gmac_reset_tx_mem(gmac_device_t* p_dev, gmac_quelist_t queue_idx)
{
  400220:	b5f0      	push	{r4, r5, r6, r7, lr}
	Gmac *p_hw = p_dev->p_hw;
  400222:	f8d0 e000 	ldr.w	lr, [r0]
	uint8_t *p_tx_buff = p_dev->gmac_queue_list[queue_idx].p_tx_buffer;
  400226:	eb01 0381 	add.w	r3, r1, r1, lsl #2
  40022a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
  40022e:	685a      	ldr	r2, [r3, #4]
	gmac_tx_descriptor_t *p_td = p_dev->gmac_queue_list[queue_idx].p_tx_dscr;
  400230:	691e      	ldr	r6, [r3, #16]
static inline void gmac_enable_transmit(Gmac* p_gmac, uint8_t uc_enable)
{
	if (uc_enable) {
		p_gmac->GMAC_NCR |= GMAC_NCR_TXEN;
	} else {
		p_gmac->GMAC_NCR &= ~GMAC_NCR_TXEN;
  400232:	f8de 4000 	ldr.w	r4, [lr]
  400236:	f024 0408 	bic.w	r4, r4, #8
  40023a:	f8ce 4000 	str.w	r4, [lr]

	/* Disable TX */
	gmac_enable_transmit(p_hw, 0);

	/* Set up the TX descriptors */
	CIRC_CLEAR(p_dev->gmac_queue_list[queue_idx].us_tx_head, p_dev->gmac_queue_list[queue_idx].us_tx_tail);
  40023e:	2400      	movs	r4, #0
  400240:	851c      	strh	r4, [r3, #40]	; 0x28
  400242:	84dc      	strh	r4, [r3, #38]	; 0x26
	for (ul_index = 0; ul_index < p_dev->gmac_queue_list[queue_idx].us_tx_list_size; ul_index++) {
  400244:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
  400246:	b1fb      	cbz	r3, 400288 <gmac_reset_tx_mem+0x68>
  400248:	4634      	mov	r4, r6
  40024a:	2300      	movs	r3, #0
		ul_address = (uint32_t) (&(p_tx_buff[ul_index * GMAC_TX_UNITSIZE]));
		p_td[ul_index].addr = ul_address;
		p_td[ul_index].status.val = GMAC_TXD_USED;
  40024c:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	for (ul_index = 0; ul_index < p_dev->gmac_queue_list[queue_idx].us_tx_list_size; ul_index++) {
  400250:	eb01 0581 	add.w	r5, r1, r1, lsl #2
  400254:	eb00 00c5 	add.w	r0, r0, r5, lsl #3
		p_td[ul_index].addr = ul_address;
  400258:	f846 2033 	str.w	r2, [r6, r3, lsl #3]
		p_td[ul_index].status.val = GMAC_TXD_USED;
  40025c:	6067      	str	r7, [r4, #4]
	for (ul_index = 0; ul_index < p_dev->gmac_queue_list[queue_idx].us_tx_list_size; ul_index++) {
  40025e:	3301      	adds	r3, #1
  400260:	8c85      	ldrh	r5, [r0, #36]	; 0x24
  400262:	f202 52ee 	addw	r2, r2, #1518	; 0x5ee
  400266:	3408      	adds	r4, #8
  400268:	429d      	cmp	r5, r3
  40026a:	d8f5      	bhi.n	400258 <gmac_reset_tx_mem+0x38>
	}
	p_td[p_dev->gmac_queue_list[queue_idx].us_tx_list_size - 1].status.val =
  40026c:	eb06 05c5 	add.w	r5, r6, r5, lsl #3
  400270:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
  400274:	f845 3c04 	str.w	r3, [r5, #-4]
			GMAC_TXD_USED | GMAC_TXD_WRAP;

	/* Set transmit buffer queue */
	if(queue_idx == GMAC_QUE_0) {
  400278:	b141      	cbz	r1, 40028c <gmac_reset_tx_mem+0x6c>
 * \param p_gmac   Pointer to the GMAC instance.
 * \param queue_idx   Index of queue, start from 1
 */
static inline void gmac_set_tx_priority_queue(Gmac* p_gmac, uint32_t ul_addr, gmac_quelist_t queue_idx)
{
    p_gmac->GMAC_TBQBAPQ[queue_idx - 1] = GMAC_TBQB_ADDR_Msk & ul_addr;
  40027a:	f026 0603 	bic.w	r6, r6, #3
  40027e:	f201 110f 	addw	r1, r1, #271	; 0x10f
  400282:	f84e 6021 	str.w	r6, [lr, r1, lsl #2]
  400286:	bdf0      	pop	{r4, r5, r6, r7, pc}
	for (ul_index = 0; ul_index < p_dev->gmac_queue_list[queue_idx].us_tx_list_size; ul_index++) {
  400288:	2500      	movs	r5, #0
  40028a:	e7ef      	b.n	40026c <gmac_reset_tx_mem+0x4c>
	p_gmac->GMAC_TBQB = GMAC_TBQB_ADDR_Msk & ul_addr;
  40028c:	f026 0603 	bic.w	r6, r6, #3
  400290:	f8ce 601c 	str.w	r6, [lr, #28]
  400294:	bdf0      	pop	{r4, r5, r6, r7, pc}

00400296 <gmac_reset_rx_mem>:
 * \brief Disable receiver, reset registers and descriptor list.
 *
 * \param p_dev Pointer to GMAC Driver instance.
 */
static void gmac_reset_rx_mem(gmac_device_t* p_dev, gmac_quelist_t queue_idx)
{
  400296:	b5f0      	push	{r4, r5, r6, r7, lr}
	Gmac *p_hw = p_dev->p_hw;
  400298:	f8d0 e000 	ldr.w	lr, [r0]
	uint8_t *p_rx_buff = p_dev->gmac_queue_list[queue_idx].p_rx_buffer;
  40029c:	eb01 0381 	add.w	r3, r1, r1, lsl #2
  4002a0:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
  4002a4:	689a      	ldr	r2, [r3, #8]
	gmac_rx_descriptor_t *pRd = p_dev->gmac_queue_list[queue_idx].p_rx_dscr;
  4002a6:	68de      	ldr	r6, [r3, #12]
		p_gmac->GMAC_NCR &= ~GMAC_NCR_RXEN;
  4002a8:	f8de 4000 	ldr.w	r4, [lr]
  4002ac:	f024 0404 	bic.w	r4, r4, #4
  4002b0:	f8ce 4000 	str.w	r4, [lr]

	/* Disable RX */
	gmac_enable_receive(p_hw, 0);

	/* Set up the RX descriptors */
	p_dev->gmac_queue_list[queue_idx].us_rx_idx = 0;
  4002b4:	2400      	movs	r4, #0
  4002b6:	845c      	strh	r4, [r3, #34]	; 0x22
	for (ul_index = 0; ul_index < p_dev->gmac_queue_list[queue_idx].us_rx_list_size; ul_index++) {
  4002b8:	8c1b      	ldrh	r3, [r3, #32]
  4002ba:	b313      	cbz	r3, 400302 <gmac_reset_rx_mem+0x6c>
  4002bc:	4634      	mov	r4, r6
  4002be:	2300      	movs	r3, #0
		ul_address = (uint32_t) (&(p_rx_buff[ul_index * GMAC_RX_UNITSIZE]));
		pRd[ul_index].addr.val = ul_address & GMAC_RXD_ADDR_MASK;
		pRd[ul_index].status.val = 0;
  4002c0:	461f      	mov	r7, r3
	for (ul_index = 0; ul_index < p_dev->gmac_queue_list[queue_idx].us_rx_list_size; ul_index++) {
  4002c2:	eb01 0581 	add.w	r5, r1, r1, lsl #2
  4002c6:	eb00 00c5 	add.w	r0, r0, r5, lsl #3
		pRd[ul_index].addr.val = ul_address & GMAC_RXD_ADDR_MASK;
  4002ca:	f022 0503 	bic.w	r5, r2, #3
  4002ce:	f846 5033 	str.w	r5, [r6, r3, lsl #3]
		pRd[ul_index].status.val = 0;
  4002d2:	6067      	str	r7, [r4, #4]
	for (ul_index = 0; ul_index < p_dev->gmac_queue_list[queue_idx].us_rx_list_size; ul_index++) {
  4002d4:	3301      	adds	r3, #1
  4002d6:	8c05      	ldrh	r5, [r0, #32]
  4002d8:	3280      	adds	r2, #128	; 0x80
  4002da:	3408      	adds	r4, #8
  4002dc:	429d      	cmp	r5, r3
  4002de:	d8f4      	bhi.n	4002ca <gmac_reset_rx_mem+0x34>
	}
	pRd[p_dev->gmac_queue_list[queue_idx].us_rx_list_size - 1].addr.val |= GMAC_RXD_WRAP;
  4002e0:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
  4002e4:	442b      	add	r3, r5
  4002e6:	f856 2033 	ldr.w	r2, [r6, r3, lsl #3]
  4002ea:	f042 0202 	orr.w	r2, r2, #2
  4002ee:	f846 2033 	str.w	r2, [r6, r3, lsl #3]

	/* Set receive buffer queue */
	if(queue_idx == GMAC_QUE_0) {
  4002f2:	b141      	cbz	r1, 400306 <gmac_reset_rx_mem+0x70>
 * \param p_gmac   Pointer to the GMAC instance.
 * \param queue_idx   Index of queue, start from 1
 */
static inline void gmac_set_rx_priority_queue(Gmac* p_gmac, uint32_t ul_addr, gmac_quelist_t queue_idx)
{
    p_gmac->GMAC_RBQBAPQ[queue_idx - 1] = GMAC_RBQB_ADDR_Msk & ul_addr;
  4002f4:	f026 0603 	bic.w	r6, r6, #3
  4002f8:	f201 111f 	addw	r1, r1, #287	; 0x11f
  4002fc:	f84e 6021 	str.w	r6, [lr, r1, lsl #2]
  400300:	bdf0      	pop	{r4, r5, r6, r7, pc}
	for (ul_index = 0; ul_index < p_dev->gmac_queue_list[queue_idx].us_rx_list_size; ul_index++) {
  400302:	2500      	movs	r5, #0
  400304:	e7ec      	b.n	4002e0 <gmac_reset_rx_mem+0x4a>
	p_gmac->GMAC_RBQB = GMAC_RBQB_ADDR_Msk & ul_addr;
  400306:	f026 0603 	bic.w	r6, r6, #3
  40030a:	f8ce 6018 	str.w	r6, [lr, #24]
  40030e:	bdf0      	pop	{r4, r5, r6, r7, pc}

00400310 <gmac_dev_init>:
 * \param p_gmac_dev Pointer to the GMAC device instance.
 * \param p_opt GMAC configure options.
 */
void gmac_dev_init(Gmac* p_gmac, gmac_device_t* p_gmac_dev,
		gmac_options_t* p_opt)
{
  400310:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  400312:	4604      	mov	r4, r0
  400314:	460e      	mov	r6, r1
  400316:	4615      	mov	r5, r2
	p_gmac->GMAC_NCR = ul_ncr;
  400318:	2300      	movs	r3, #0
  40031a:	6003      	str	r3, [r0, #0]
	p_gmac->GMAC_IDR = ul_source;
  40031c:	f04f 33ff 	mov.w	r3, #4294967295
  400320:	62c3      	str	r3, [r0, #44]	; 0x2c
	p_gmac->GMAC_NCR |= GMAC_NCR_CLRSTAT;
  400322:	6803      	ldr	r3, [r0, #0]
  400324:	f043 0320 	orr.w	r3, r3, #32
  400328:	6003      	str	r3, [r0, #0]
	p_gmac->GMAC_RSR = ul_status;
  40032a:	230f      	movs	r3, #15
  40032c:	6203      	str	r3, [r0, #32]
	p_gmac->GMAC_TSR = ul_status;
  40032e:	f240 133f 	movw	r3, #319	; 0x13f
  400332:	6143      	str	r3, [r0, #20]
	return p_gmac->GMAC_NCFGR;
  400334:	6842      	ldr	r2, [r0, #4]
	gmac_clear_tx_status(p_gmac, GMAC_TSR_UBR | GMAC_TSR_COL | GMAC_TSR_RLE
            | GMAC_TSR_TXGO | GMAC_TSR_TFC | GMAC_TSR_TXCOMP | GMAC_TSR_HRESP );

	/* Enable the copy of data into the buffers
	   ignore broadcasts, and not copy FCS. */
	gmac_set_config(p_gmac, gmac_get_config(p_gmac) |
  400336:	4b45      	ldr	r3, [pc, #276]	; (40044c <gmac_dev_init+0x13c>)
  400338:	4313      	orrs	r3, r2
	p_gmac->GMAC_NCFGR = ul_cfg;
  40033a:	6043      	str	r3, [r0, #4]
	if (uc_enable) {
  40033c:	782b      	ldrb	r3, [r5, #0]
  40033e:	2b00      	cmp	r3, #0
  400340:	d079      	beq.n	400436 <gmac_dev_init+0x126>
		p_gmac->GMAC_NCFGR |= GMAC_NCFGR_CAF;
  400342:	6843      	ldr	r3, [r0, #4]
  400344:	f043 0310 	orr.w	r3, r3, #16
  400348:	6043      	str	r3, [r0, #4]
	if (uc_enable) {
  40034a:	786b      	ldrb	r3, [r5, #1]
  40034c:	2b00      	cmp	r3, #0
  40034e:	d177      	bne.n	400440 <gmac_dev_init+0x130>
		p_gmac->GMAC_NCFGR &= ~GMAC_NCFGR_NBC;
  400350:	6863      	ldr	r3, [r4, #4]
  400352:	f023 0320 	bic.w	r3, r3, #32
  400356:	6063      	str	r3, [r4, #4]
	return p_gmac->GMAC_ISRPQ[queue_idx - 1];
  400358:	f8d4 3400 	ldr.w	r3, [r4, #1024]	; 0x400
  40035c:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
  400360:	f8d4 3408 	ldr.w	r3, [r4, #1032]	; 0x408
  400364:	f8d4 340c 	ldr.w	r3, [r4, #1036]	; 0x40c
  400368:	f8d4 3410 	ldr.w	r3, [r4, #1040]	; 0x410
	gs_tx_desc_null.addr = (uint32_t)0xFFFFFFFF;
  40036c:	4b38      	ldr	r3, [pc, #224]	; (400450 <gmac_dev_init+0x140>)
  40036e:	f04f 32ff 	mov.w	r2, #4294967295
  400372:	601a      	str	r2, [r3, #0]
	gs_tx_desc_null.status.val = GMAC_TXD_WRAP | GMAC_TXD_USED;
  400374:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
  400378:	605a      	str	r2, [r3, #4]
    p_gmac->GMAC_TBQBAPQ[queue_idx - 1] = GMAC_TBQB_ADDR_Msk & ul_addr;
  40037a:	f023 0303 	bic.w	r3, r3, #3
  40037e:	f8c4 3440 	str.w	r3, [r4, #1088]	; 0x440
  400382:	f8c4 3444 	str.w	r3, [r4, #1092]	; 0x444
  400386:	f8c4 3448 	str.w	r3, [r4, #1096]	; 0x448
  40038a:	f8c4 344c 	str.w	r3, [r4, #1100]	; 0x44c
  40038e:	f8c4 3450 	str.w	r3, [r4, #1104]	; 0x450
	gs_rx_desc_null.addr.val |= GMAC_RXD_WRAP;
  400392:	4b30      	ldr	r3, [pc, #192]	; (400454 <gmac_dev_init+0x144>)
  400394:	f06f 0201 	mvn.w	r2, #1
  400398:	601a      	str	r2, [r3, #0]
	gs_rx_desc_null.status.val = 0;
  40039a:	2700      	movs	r7, #0
  40039c:	605f      	str	r7, [r3, #4]
    p_gmac->GMAC_RBQBAPQ[queue_idx - 1] = GMAC_RBQB_ADDR_Msk & ul_addr;
  40039e:	f023 0303 	bic.w	r3, r3, #3
  4003a2:	f8c4 3480 	str.w	r3, [r4, #1152]	; 0x480
  4003a6:	f8c4 3484 	str.w	r3, [r4, #1156]	; 0x484
  4003aa:	f8c4 3488 	str.w	r3, [r4, #1160]	; 0x488
  4003ae:	f8c4 348c 	str.w	r3, [r4, #1164]	; 0x48c
  4003b2:	f8c4 3490 	str.w	r3, [r4, #1168]	; 0x490
	return p_gmac->GMAC_ISR;
  4003b6:	6a63      	ldr	r3, [r4, #36]	; 0x24
	if (((uint32_t) p_dev_mm->p_rx_buffer & 0x7)
  4003b8:	4b27      	ldr	r3, [pc, #156]	; (400458 <gmac_dev_init+0x148>)
			(uint8_t *) ((uint32_t) p_dev_mm->p_rx_buffer & 0xFFFFFFF8);
  4003ba:	f023 0307 	bic.w	r3, r3, #7
	p_gmac_queue->p_rx_buffer =
  4003be:	60b3      	str	r3, [r6, #8]
			(gmac_rx_descriptor_t *) ((uint32_t) p_dev_mm->p_rx_dscr
  4003c0:	4b26      	ldr	r3, [pc, #152]	; (40045c <gmac_dev_init+0x14c>)
			& 0xFFFFFFF8);
  4003c2:	f023 0307 	bic.w	r3, r3, #7
	p_gmac_queue->p_rx_dscr =
  4003c6:	60f3      	str	r3, [r6, #12]
	p_gmac_queue->us_rx_list_size = p_dev_mm->us_rx_size;
  4003c8:	2210      	movs	r2, #16
  4003ca:	8432      	strh	r2, [r6, #32]
	if (((uint32_t) p_dev_mm->p_tx_buffer & 0x7)
  4003cc:	4b24      	ldr	r3, [pc, #144]	; (400460 <gmac_dev_init+0x150>)
			(uint8_t *) ((uint32_t) p_dev_mm->p_tx_buffer & 0xFFFFFFF8);
  4003ce:	f023 0307 	bic.w	r3, r3, #7
	p_gmac_queue->p_tx_buffer =
  4003d2:	6073      	str	r3, [r6, #4]
			(gmac_tx_descriptor_t *) ((uint32_t) p_dev_mm->p_tx_dscr
  4003d4:	4b23      	ldr	r3, [pc, #140]	; (400464 <gmac_dev_init+0x154>)
			& 0xFFFFFFF8);
  4003d6:	f023 0307 	bic.w	r3, r3, #7
	p_gmac_queue->p_tx_dscr =
  4003da:	6133      	str	r3, [r6, #16]
	p_gmac_queue->us_tx_list_size = p_dev_mm->us_tx_size;
  4003dc:	84b2      	strh	r2, [r6, #36]	; 0x24
	p_gmac_queue->func_tx_cb_list = p_tx_cb;
  4003de:	4b22      	ldr	r3, [pc, #136]	; (400468 <gmac_dev_init+0x158>)
  4003e0:	61f3      	str	r3, [r6, #28]
	gmac_reset_rx_mem(p_gmac_dev, queue_idx);
  4003e2:	4639      	mov	r1, r7
  4003e4:	4630      	mov	r0, r6
  4003e6:	4b21      	ldr	r3, [pc, #132]	; (40046c <gmac_dev_init+0x15c>)
  4003e8:	4798      	blx	r3
	gmac_reset_tx_mem(p_gmac_dev, queue_idx);
  4003ea:	4639      	mov	r1, r7
  4003ec:	4630      	mov	r0, r6
  4003ee:	4b20      	ldr	r3, [pc, #128]	; (400470 <gmac_dev_init+0x160>)
  4003f0:	4798      	blx	r3
		p_gmac->GMAC_NCR |= GMAC_NCR_TXEN;
  4003f2:	6823      	ldr	r3, [r4, #0]
  4003f4:	f043 0308 	orr.w	r3, r3, #8
  4003f8:	6023      	str	r3, [r4, #0]
		p_gmac->GMAC_NCR |= GMAC_NCR_RXEN;
  4003fa:	6823      	ldr	r3, [r4, #0]
  4003fc:	f043 0304 	orr.w	r3, r3, #4
  400400:	6023      	str	r3, [r4, #0]
		p_gmac->GMAC_NCR |= GMAC_NCR_WESTAT;
  400402:	6823      	ldr	r3, [r4, #0]
  400404:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  400408:	6023      	str	r3, [r4, #0]
	p_gmac->GMAC_IER = ul_source;
  40040a:	f643 43f6 	movw	r3, #15606	; 0x3cf6
  40040e:	62a3      	str	r3, [r4, #40]	; 0x28
	p_gmac->GMAC_SA[uc_index].GMAC_SAB = (p_mac_addr[3] << 24)
  400410:	796a      	ldrb	r2, [r5, #5]
			| (p_mac_addr[2] << 16)
  400412:	792b      	ldrb	r3, [r5, #4]
  400414:	041b      	lsls	r3, r3, #16
  400416:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
			| (p_mac_addr[0]);
  40041a:	78aa      	ldrb	r2, [r5, #2]
  40041c:	4313      	orrs	r3, r2
			| (p_mac_addr[1] << 8)
  40041e:	78ea      	ldrb	r2, [r5, #3]
			| (p_mac_addr[0]);
  400420:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	p_gmac->GMAC_SA[uc_index].GMAC_SAB = (p_mac_addr[3] << 24)
  400424:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
	p_gmac->GMAC_SA[uc_index].GMAC_SAT = (p_mac_addr[5] << 8)
  400428:	79ea      	ldrb	r2, [r5, #7]
			| (p_mac_addr[4]);
  40042a:	79ab      	ldrb	r3, [r5, #6]
  40042c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	p_gmac->GMAC_SA[uc_index].GMAC_SAT = (p_mac_addr[5] << 8)
  400430:	f8c4 308c 	str.w	r3, [r4, #140]	; 0x8c
  400434:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		p_gmac->GMAC_NCFGR &= ~GMAC_NCFGR_CAF;
  400436:	6843      	ldr	r3, [r0, #4]
  400438:	f023 0310 	bic.w	r3, r3, #16
  40043c:	6043      	str	r3, [r0, #4]
  40043e:	e784      	b.n	40034a <gmac_dev_init+0x3a>
		p_gmac->GMAC_NCFGR |= GMAC_NCFGR_NBC;
  400440:	6863      	ldr	r3, [r4, #4]
  400442:	f043 0320 	orr.w	r3, r3, #32
  400446:	6063      	str	r3, [r4, #4]
  400448:	e786      	b.n	400358 <gmac_dev_init+0x48>
  40044a:	bf00      	nop
  40044c:	00022102 	.word	0x00022102
  400450:	20400b38 	.word	0x20400b38
  400454:	20400a70 	.word	0x20400a70
  400458:	20400b40 	.word	0x20400b40
  40045c:	204009f0 	.word	0x204009f0
  400460:	20401340 	.word	0x20401340
  400464:	20400ab8 	.word	0x20400ab8
  400468:	20400a78 	.word	0x20400a78
  40046c:	00400297 	.word	0x00400297
  400470:	00400221 	.word	0x00400221

00400474 <gmac_dev_read>:
 *
 * \return GMAC_OK if receiving frame successfully, otherwise failed.
 */
uint32_t gmac_dev_read(gmac_device_t* p_gmac_dev, gmac_quelist_t queue_idx, uint8_t* p_frame,
		uint32_t ul_frame_size, uint32_t* p_rcv_size)
{
  400474:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400478:	b087      	sub	sp, #28
	uint16_t us_buffer_length;
	uint32_t tmp_ul_frame_size = 0;
	uint8_t *p_tmp_frame = 0;

	gmac_queue_t* p_gmac_queue = &p_gmac_dev->gmac_queue_list[queue_idx];
  40047a:	9102      	str	r1, [sp, #8]
	uint16_t us_tmp_idx = p_gmac_queue->us_rx_idx;
  40047c:	eb01 0481 	add.w	r4, r1, r1, lsl #2
  400480:	eb00 04c4 	add.w	r4, r0, r4, lsl #3
  400484:	8c66      	ldrh	r6, [r4, #34]	; 0x22
  400486:	f8ad 6016 	strh.w	r6, [sp, #22]
	gmac_rx_descriptor_t *p_rx_td =
			&p_gmac_queue->p_rx_dscr[p_gmac_queue->us_rx_idx];
	int8_t c_is_frame = 0;

	if (p_frame == NULL)
  40048a:	2a00      	cmp	r2, #0
  40048c:	f000 80cb 	beq.w	400626 <gmac_dev_read+0x1b2>
  400490:	468e      	mov	lr, r1
  400492:	4615      	mov	r5, r2
	gmac_rx_descriptor_t *p_rx_td =
  400494:	68e2      	ldr	r2, [r4, #12]
  400496:	eb02 04c6 	add.w	r4, r2, r6, lsl #3
		return GMAC_PARAM;

	/* Set the default return value */
	*p_rcv_size = 0;
  40049a:	f04f 0c00 	mov.w	ip, #0
  40049e:	9f10      	ldr	r7, [sp, #64]	; 0x40
  4004a0:	f8c7 c000 	str.w	ip, [r7]

	/* Process received RX descriptor */
	while ((p_rx_td->addr.val & GMAC_RXD_OWNERSHIP) == GMAC_RXD_OWNERSHIP) {
  4004a4:	f852 2036 	ldr.w	r2, [r2, r6, lsl #3]
  4004a8:	f012 0f01 	tst.w	r2, #1
  4004ac:	f000 80bd 	beq.w	40062a <gmac_dev_read+0x1b6>
  4004b0:	9501      	str	r5, [sp, #4]
  4004b2:	469b      	mov	fp, r3
  4004b4:	9103      	str	r1, [sp, #12]
  4004b6:	4605      	mov	r5, r0
			/* Skip previous fragment */
			while (us_tmp_idx != p_gmac_queue->us_rx_idx) {
				p_rx_td = &p_gmac_queue->p_rx_dscr[p_gmac_queue->us_rx_idx];
				p_rx_td->addr.val &= ~(GMAC_RXD_OWNERSHIP);

				circ_inc(&p_gmac_queue->us_rx_idx, p_gmac_queue->us_rx_list_size);
  4004b8:	eb01 0381 	add.w	r3, r1, r1, lsl #2
  4004bc:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
  4004c0:	3322      	adds	r3, #34	; 0x22
  4004c2:	9300      	str	r3, [sp, #0]
  4004c4:	46e0      	mov	r8, ip
  4004c6:	46e1      	mov	r9, ip
  4004c8:	4667      	mov	r7, ip
		circ_inc(&us_tmp_idx, p_gmac_queue->us_rx_list_size);

		/* Copy data in the frame buffer */
		if (c_is_frame) {
			/* A complete turn has been made but no EOF found */
			if (us_tmp_idx == p_gmac_queue->us_rx_idx) {
  4004ca:	eb01 0681 	add.w	r6, r1, r1, lsl #2
  4004ce:	00f6      	lsls	r6, r6, #3
  4004d0:	e01c      	b.n	40050c <gmac_dev_read+0x98>
		circ_inc(&us_tmp_idx, p_gmac_queue->us_rx_list_size);
  4004d2:	19ab      	adds	r3, r5, r6
  4004d4:	8c19      	ldrh	r1, [r3, #32]
  4004d6:	f10d 0016 	add.w	r0, sp, #22
  4004da:	4b55      	ldr	r3, [pc, #340]	; (400630 <gmac_dev_read+0x1bc>)
  4004dc:	4798      	blx	r3
		if (c_is_frame) {
  4004de:	f1b8 0f00 	cmp.w	r8, #0
  4004e2:	d13a      	bne.n	40055a <gmac_dev_read+0xe6>
				return GMAC_OK;
			}
		}
		/* SOF has not been detected, skip the fragment */
		else {
			p_rx_td->addr.val &= ~(GMAC_RXD_OWNERSHIP);
  4004e4:	6823      	ldr	r3, [r4, #0]
  4004e6:	f023 0301 	bic.w	r3, r3, #1
  4004ea:	6023      	str	r3, [r4, #0]
			p_gmac_queue->us_rx_idx = us_tmp_idx;
  4004ec:	19ab      	adds	r3, r5, r6
  4004ee:	f8bd 2016 	ldrh.w	r2, [sp, #22]
  4004f2:	845a      	strh	r2, [r3, #34]	; 0x22
		}

		/* Process the next buffer */
		p_rx_td = &p_gmac_queue->p_rx_dscr[us_tmp_idx];
  4004f4:	19ab      	adds	r3, r5, r6
  4004f6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
  4004fa:	68db      	ldr	r3, [r3, #12]
  4004fc:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
	while ((p_rx_td->addr.val & GMAC_RXD_OWNERSHIP) == GMAC_RXD_OWNERSHIP) {
  400500:	f853 3032 	ldr.w	r3, [r3, r2, lsl #3]
  400504:	f013 0f01 	tst.w	r3, #1
  400508:	f000 8089 	beq.w	40061e <gmac_dev_read+0x1aa>
		if ((p_rx_td->status.val & GMAC_RXD_SOF) == GMAC_RXD_SOF) {
  40050c:	6863      	ldr	r3, [r4, #4]
  40050e:	f413 4f80 	tst.w	r3, #16384	; 0x4000
  400512:	d0de      	beq.n	4004d2 <gmac_dev_read+0x5e>
			while (us_tmp_idx != p_gmac_queue->us_rx_idx) {
  400514:	19ab      	adds	r3, r5, r6
  400516:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
  400518:	f8bd 2016 	ldrh.w	r2, [sp, #22]
  40051c:	429a      	cmp	r2, r3
  40051e:	d013      	beq.n	400548 <gmac_dev_read+0xd4>
				p_rx_td = &p_gmac_queue->p_rx_dscr[p_gmac_queue->us_rx_idx];
  400520:	19af      	adds	r7, r5, r6
				circ_inc(&p_gmac_queue->us_rx_idx, p_gmac_queue->us_rx_list_size);
  400522:	f8df 810c 	ldr.w	r8, [pc, #268]	; 400630 <gmac_dev_read+0x1bc>
				p_rx_td = &p_gmac_queue->p_rx_dscr[p_gmac_queue->us_rx_idx];
  400526:	68fa      	ldr	r2, [r7, #12]
  400528:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
				p_rx_td->addr.val &= ~(GMAC_RXD_OWNERSHIP);
  40052c:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
  400530:	f021 0101 	bic.w	r1, r1, #1
  400534:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				circ_inc(&p_gmac_queue->us_rx_idx, p_gmac_queue->us_rx_list_size);
  400538:	8c39      	ldrh	r1, [r7, #32]
  40053a:	9800      	ldr	r0, [sp, #0]
  40053c:	47c0      	blx	r8
			while (us_tmp_idx != p_gmac_queue->us_rx_idx) {
  40053e:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
  400540:	f8bd 2016 	ldrh.w	r2, [sp, #22]
  400544:	429a      	cmp	r2, r3
  400546:	d1ee      	bne.n	400526 <gmac_dev_read+0xb2>
		circ_inc(&us_tmp_idx, p_gmac_queue->us_rx_list_size);
  400548:	19ab      	adds	r3, r5, r6
  40054a:	8c19      	ldrh	r1, [r3, #32]
  40054c:	f10d 0016 	add.w	r0, sp, #22
  400550:	4b37      	ldr	r3, [pc, #220]	; (400630 <gmac_dev_read+0x1bc>)
  400552:	4798      	blx	r3
  400554:	f8dd 9004 	ldr.w	r9, [sp, #4]
  400558:	2700      	movs	r7, #0
			if (us_tmp_idx == p_gmac_queue->us_rx_idx) {
  40055a:	f8bd a016 	ldrh.w	sl, [sp, #22]
  40055e:	19ab      	adds	r3, r5, r6
  400560:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
  400562:	4553      	cmp	r3, sl
  400564:	d008      	beq.n	400578 <gmac_dev_read+0x104>
			if ((tmp_ul_frame_size + us_buffer_length) > ul_frame_size) {
  400566:	f107 0380 	add.w	r3, r7, #128	; 0x80
  40056a:	455b      	cmp	r3, fp
  40056c:	d91d      	bls.n	4005aa <gmac_dev_read+0x136>
				us_buffer_length = ul_frame_size - tmp_ul_frame_size;
  40056e:	ebab 0807 	sub.w	r8, fp, r7
  400572:	fa1f f888 	uxth.w	r8, r8
  400576:	e01a      	b.n	4005ae <gmac_dev_read+0x13a>
					p_rx_td = &p_gmac_queue->p_rx_dscr[p_gmac_queue->us_rx_idx];
  400578:	9b02      	ldr	r3, [sp, #8]
  40057a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  40057e:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
					circ_inc(&p_gmac_queue->us_rx_idx, p_gmac_queue->us_rx_list_size);
  400582:	4c2b      	ldr	r4, [pc, #172]	; (400630 <gmac_dev_read+0x1bc>)
  400584:	9e00      	ldr	r6, [sp, #0]
					p_rx_td = &p_gmac_queue->p_rx_dscr[p_gmac_queue->us_rx_idx];
  400586:	8c69      	ldrh	r1, [r5, #34]	; 0x22
  400588:	68ea      	ldr	r2, [r5, #12]
					p_rx_td->addr.val &= ~(GMAC_RXD_OWNERSHIP);
  40058a:	f852 3031 	ldr.w	r3, [r2, r1, lsl #3]
  40058e:	f023 0301 	bic.w	r3, r3, #1
  400592:	f842 3031 	str.w	r3, [r2, r1, lsl #3]
					circ_inc(&p_gmac_queue->us_rx_idx, p_gmac_queue->us_rx_list_size);
  400596:	8c29      	ldrh	r1, [r5, #32]
  400598:	4630      	mov	r0, r6
  40059a:	47a0      	blx	r4
				} while (us_tmp_idx != p_gmac_queue->us_rx_idx);
  40059c:	8c6a      	ldrh	r2, [r5, #34]	; 0x22
  40059e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
  4005a2:	429a      	cmp	r2, r3
  4005a4:	d1ef      	bne.n	400586 <gmac_dev_read+0x112>
				return GMAC_RX_ERROR;
  4005a6:	2003      	movs	r0, #3
  4005a8:	e03a      	b.n	400620 <gmac_dev_read+0x1ac>
			us_buffer_length = GMAC_RX_UNITSIZE;
  4005aa:	f04f 0880 	mov.w	r8, #128	; 0x80
					(void *)(p_rx_td->addr.val & GMAC_RXD_ADDR_MASK),
  4005ae:	6821      	ldr	r1, [r4, #0]
			memcpy(p_tmp_frame,
  4005b0:	4642      	mov	r2, r8
  4005b2:	f021 0103 	bic.w	r1, r1, #3
  4005b6:	4648      	mov	r0, r9
  4005b8:	4b1e      	ldr	r3, [pc, #120]	; (400634 <gmac_dev_read+0x1c0>)
  4005ba:	4798      	blx	r3
			p_tmp_frame += us_buffer_length;
  4005bc:	44c1      	add	r9, r8
			tmp_ul_frame_size += us_buffer_length;
  4005be:	4447      	add	r7, r8
			if ((p_rx_td->status.val & GMAC_RXD_EOF) == GMAC_RXD_EOF) {
  4005c0:	6863      	ldr	r3, [r4, #4]
  4005c2:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  4005c6:	d102      	bne.n	4005ce <gmac_dev_read+0x15a>
  4005c8:	f04f 0801 	mov.w	r8, #1
  4005cc:	e792      	b.n	4004f4 <gmac_dev_read+0x80>
				*p_rcv_size = (p_rx_td->status.val & GMAC_RXD_LEN_MASK);
  4005ce:	f3c3 030b 	ubfx	r3, r3, #0, #12
  4005d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
  4005d4:	6013      	str	r3, [r2, #0]
				while (p_gmac_queue->us_rx_idx != us_tmp_idx) {
  4005d6:	9b03      	ldr	r3, [sp, #12]
  4005d8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  4005dc:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
  4005e0:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
  4005e2:	459a      	cmp	sl, r3
  4005e4:	d014      	beq.n	400610 <gmac_dev_read+0x19c>
					p_rx_td = &p_gmac_queue->p_rx_dscr[p_gmac_queue->us_rx_idx];
  4005e6:	9a02      	ldr	r2, [sp, #8]
  4005e8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  4005ec:	eb05 05c2 	add.w	r5, r5, r2, lsl #3
					circ_inc(&p_gmac_queue->us_rx_idx, p_gmac_queue->us_rx_list_size);
  4005f0:	4c0f      	ldr	r4, [pc, #60]	; (400630 <gmac_dev_read+0x1bc>)
					p_rx_td = &p_gmac_queue->p_rx_dscr[p_gmac_queue->us_rx_idx];
  4005f2:	68e9      	ldr	r1, [r5, #12]
					p_rx_td->addr.val &= ~(GMAC_RXD_OWNERSHIP);
  4005f4:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
  4005f8:	f022 0201 	bic.w	r2, r2, #1
  4005fc:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
					circ_inc(&p_gmac_queue->us_rx_idx, p_gmac_queue->us_rx_list_size);
  400600:	8c29      	ldrh	r1, [r5, #32]
  400602:	9800      	ldr	r0, [sp, #0]
  400604:	47a0      	blx	r4
				while (p_gmac_queue->us_rx_idx != us_tmp_idx) {
  400606:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
  400608:	f8bd 2016 	ldrh.w	r2, [sp, #22]
  40060c:	429a      	cmp	r2, r3
  40060e:	d1f0      	bne.n	4005f2 <gmac_dev_read+0x17e>
				if (tmp_ul_frame_size < *p_rcv_size) {
  400610:	9b10      	ldr	r3, [sp, #64]	; 0x40
  400612:	6818      	ldr	r0, [r3, #0]
				return GMAC_OK;
  400614:	4287      	cmp	r7, r0
  400616:	bf34      	ite	cc
  400618:	2005      	movcc	r0, #5
  40061a:	2000      	movcs	r0, #0
  40061c:	e000      	b.n	400620 <gmac_dev_read+0x1ac>
	}

	return GMAC_RX_NO_DATA;
  40061e:	2004      	movs	r0, #4
}
  400620:	b007      	add	sp, #28
  400622:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		return GMAC_PARAM;
  400626:	2006      	movs	r0, #6
  400628:	e7fa      	b.n	400620 <gmac_dev_read+0x1ac>
	return GMAC_RX_NO_DATA;
  40062a:	2004      	movs	r0, #4
  40062c:	e7f8      	b.n	400620 <gmac_dev_read+0x1ac>
  40062e:	bf00      	nop
  400630:	00400211 	.word	0x00400211
  400634:	00402b91 	.word	0x00402b91

00400638 <gmac_handler>:
 * \brief GMAC Interrupt handler.
 *
 * \param p_gmac_dev   Pointer to GMAC device instance.
 */
void gmac_handler(gmac_device_t* p_gmac_dev, gmac_quelist_t queue_idx)
{
  400638:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40063c:	b085      	sub	sp, #20
  40063e:	4607      	mov	r7, r0
  400640:	460d      	mov	r5, r1
	Gmac *p_hw = p_gmac_dev->p_hw;
  400642:	6806      	ldr	r6, [r0, #0]
	uint32_t ul_tx_status_flag;
#ifdef FREERTOS_USED
	portBASE_TYPE xHigherPriorityTaskWoken = pdFALSE;
#endif

	gmac_queue_t* p_gmac_queue = &p_gmac_dev->gmac_queue_list[queue_idx];
  400644:	460c      	mov	r4, r1

	if(queue_idx == GMAC_QUE_0) {
  400646:	2900      	cmp	r1, #0
  400648:	d153      	bne.n	4006f2 <gmac_handler+0xba>
	return p_gmac->GMAC_ISR;
  40064a:	6a73      	ldr	r3, [r6, #36]	; 0x24
		ul_isr = gmac_get_interrupt_status(p_hw);
  40064c:	9303      	str	r3, [sp, #12]
	return p_gmac->GMAC_RSR;
  40064e:	6a33      	ldr	r3, [r6, #32]
	} else {
		ul_isr = gmac_get_priority_interrupt_status(p_hw, queue_idx);
	}
	ul_rsr = gmac_get_rx_status(p_hw);
  400650:	9302      	str	r3, [sp, #8]
	return p_gmac->GMAC_TSR;
  400652:	6973      	ldr	r3, [r6, #20]
	ul_tsr = gmac_get_tx_status(p_hw);
  400654:	9301      	str	r3, [sp, #4]
	return p_gmac->GMAC_IMR;
  400656:	6b31      	ldr	r1, [r6, #48]	; 0x30

	ul_isr &= ~(gmac_get_interrupt_mask(p_hw) | 0xF8030300);
  400658:	9b03      	ldr	r3, [sp, #12]
  40065a:	4a49      	ldr	r2, [pc, #292]	; (400780 <gmac_handler+0x148>)
  40065c:	430a      	orrs	r2, r1
  40065e:	ea23 0302 	bic.w	r3, r3, r2
  400662:	9303      	str	r3, [sp, #12]

	/* RX packet */
	if ((ul_isr & GMAC_ISR_RCOMP) || (ul_rsr & GMAC_RSR_REC)) {
  400664:	9b03      	ldr	r3, [sp, #12]
  400666:	f013 0f02 	tst.w	r3, #2
  40066a:	d103      	bne.n	400674 <gmac_handler+0x3c>
  40066c:	9b02      	ldr	r3, [sp, #8]
  40066e:	f013 0f02 	tst.w	r3, #2
  400672:	d014      	beq.n	40069e <gmac_handler+0x66>
		ul_rx_status_flag = GMAC_RSR_REC;

		/* Check OVR */
		if (ul_rsr & GMAC_RSR_RXOVR) {
  400674:	9b02      	ldr	r3, [sp, #8]
  400676:	f003 0304 	and.w	r3, r3, #4
			ul_rx_status_flag |= GMAC_RSR_RXOVR;
  40067a:	2b00      	cmp	r3, #0
  40067c:	bf0c      	ite	eq
  40067e:	2002      	moveq	r0, #2
  400680:	2006      	movne	r0, #6
		}
		/* Check BNA */
		if (ul_rsr & GMAC_RSR_BNA) {
  400682:	9b02      	ldr	r3, [sp, #8]
  400684:	f013 0f01 	tst.w	r3, #1
			ul_rx_status_flag |= GMAC_RSR_BNA;
  400688:	bf18      	it	ne
  40068a:	f040 0001 	orrne.w	r0, r0, #1
	p_gmac->GMAC_RSR = ul_status;
  40068e:	6230      	str	r0, [r6, #32]
		}
		/* Clear status */
		gmac_clear_rx_status(p_hw, ul_rx_status_flag);

		/* Invoke callbacks */
		if (p_gmac_queue->func_rx_cb) {
  400690:	eb05 0385 	add.w	r3, r5, r5, lsl #2
  400694:	eb07 03c3 	add.w	r3, r7, r3, lsl #3
  400698:	695b      	ldr	r3, [r3, #20]
  40069a:	b103      	cbz	r3, 40069e <gmac_handler+0x66>
			p_gmac_queue->func_rx_cb(ul_rx_status_flag);
  40069c:	4798      	blx	r3
		}
	}

	/* TX packet */
	if ((ul_isr & GMAC_ISR_TCOMP) || (ul_tsr & GMAC_TSR_TXCOMP)) {
  40069e:	9b03      	ldr	r3, [sp, #12]
  4006a0:	f013 0f80 	tst.w	r3, #128	; 0x80
  4006a4:	d103      	bne.n	4006ae <gmac_handler+0x76>
  4006a6:	9b01      	ldr	r3, [sp, #4]
  4006a8:	f013 0f20 	tst.w	r3, #32
  4006ac:	d065      	beq.n	40077a <gmac_handler+0x142>
		ul_tx_status_flag = GMAC_TSR_TXCOMP;

		/* Check RLE */
		if (ul_tsr & GMAC_TSR_RLE) {
  4006ae:	9b01      	ldr	r3, [sp, #4]
  4006b0:	f013 0f04 	tst.w	r3, #4
  4006b4:	d123      	bne.n	4006fe <gmac_handler+0xc6>
		ul_tx_status_flag = GMAC_TSR_TXCOMP;
  4006b6:	f04f 0920 	mov.w	r9, #32
			p_tx_cb = &p_gmac_queue->func_tx_cb_list[p_gmac_queue->us_tx_tail];
			gmac_reset_tx_mem(p_gmac_dev, queue_idx);
			gmac_enable_transmit(p_hw, 1);
		}
		/* Check COL */
		if (ul_tsr & GMAC_TSR_COL) {
  4006ba:	9b01      	ldr	r3, [sp, #4]
  4006bc:	f013 0f02 	tst.w	r3, #2
			ul_tx_status_flag |= GMAC_TSR_COL;
  4006c0:	bf18      	it	ne
  4006c2:	f049 0902 	orrne.w	r9, r9, #2
	p_gmac->GMAC_TSR = ul_status;
  4006c6:	f8c6 9014 	str.w	r9, [r6, #20]
		}

		/* Clear status */
		gmac_clear_tx_status(p_hw, ul_tx_status_flag);

		if (!CIRC_EMPTY(p_gmac_queue->us_tx_head, p_gmac_queue->us_tx_tail)) {
  4006ca:	eb05 0385 	add.w	r3, r5, r5, lsl #2
  4006ce:	eb07 03c3 	add.w	r3, r7, r3, lsl #3
  4006d2:	8cda      	ldrh	r2, [r3, #38]	; 0x26
  4006d4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
  4006d6:	429a      	cmp	r2, r3
  4006d8:	d037      	beq.n	40074a <gmac_handler+0x112>
				/* Notify upper layer that a packet has been sent */
				if (*p_tx_cb) {
					(*p_tx_cb) (ul_tx_status_flag);
				}

				circ_inc(&p_gmac_queue->us_tx_tail, p_gmac_queue->us_tx_list_size);
  4006da:	1c6e      	adds	r6, r5, #1
  4006dc:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  4006e0:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
				p_tx_td = &p_gmac_queue->p_tx_dscr[p_gmac_queue->us_tx_tail];
  4006e4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4006e8:	eb07 04c4 	add.w	r4, r7, r4, lsl #3
				circ_inc(&p_gmac_queue->us_tx_tail, p_gmac_queue->us_tx_list_size);
  4006ec:	f8df 8098 	ldr.w	r8, [pc, #152]	; 400788 <gmac_handler+0x150>
  4006f0:	e01c      	b.n	40072c <gmac_handler+0xf4>
	return p_gmac->GMAC_ISRPQ[queue_idx - 1];
  4006f2:	f101 03ff 	add.w	r3, r1, #255	; 0xff
  4006f6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
		ul_isr = gmac_get_priority_interrupt_status(p_hw, queue_idx);
  4006fa:	9303      	str	r3, [sp, #12]
  4006fc:	e7a7      	b.n	40064e <gmac_handler+0x16>
			gmac_reset_tx_mem(p_gmac_dev, queue_idx);
  4006fe:	4629      	mov	r1, r5
  400700:	4638      	mov	r0, r7
  400702:	4b20      	ldr	r3, [pc, #128]	; (400784 <gmac_handler+0x14c>)
  400704:	4798      	blx	r3
		p_gmac->GMAC_NCR |= GMAC_NCR_TXEN;
  400706:	6833      	ldr	r3, [r6, #0]
  400708:	f043 0308 	orr.w	r3, r3, #8
  40070c:	6033      	str	r3, [r6, #0]
			ul_tx_status_flag = GMAC_TSR_RLE;
  40070e:	f04f 0904 	mov.w	r9, #4
  400712:	e7d2      	b.n	4006ba <gmac_handler+0x82>
				circ_inc(&p_gmac_queue->us_tx_tail, p_gmac_queue->us_tx_list_size);
  400714:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
  400716:	4630      	mov	r0, r6
  400718:	47c0      	blx	r8
			} while (CIRC_CNT(p_gmac_queue->us_tx_head, p_gmac_queue->us_tx_tail,
  40071a:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
  40071c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
  40071e:	1a9b      	subs	r3, r3, r2
  400720:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
  400722:	fb93 f2f1 	sdiv	r2, r3, r1
  400726:	fb01 3312 	mls	r3, r1, r2, r3
  40072a:	b173      	cbz	r3, 40074a <gmac_handler+0x112>
				p_tx_td = &p_gmac_queue->p_tx_dscr[p_gmac_queue->us_tx_tail];
  40072c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
				p_tx_cb = &p_gmac_queue->func_tx_cb_list[p_gmac_queue->us_tx_tail];
  40072e:	69e1      	ldr	r1, [r4, #28]
				if ((p_tx_td->status.val & GMAC_TXD_USED) == 0) {
  400730:	6923      	ldr	r3, [r4, #16]
  400732:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  400736:	685b      	ldr	r3, [r3, #4]
  400738:	2b00      	cmp	r3, #0
  40073a:	da06      	bge.n	40074a <gmac_handler+0x112>
				if (*p_tx_cb) {
  40073c:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
  400740:	2b00      	cmp	r3, #0
  400742:	d0e7      	beq.n	400714 <gmac_handler+0xdc>
					(*p_tx_cb) (ul_tx_status_flag);
  400744:	4648      	mov	r0, r9
  400746:	4798      	blx	r3
  400748:	e7e4      	b.n	400714 <gmac_handler+0xdc>
							p_gmac_queue->us_tx_list_size));
		}

		/* If a wakeup has been scheduled, notify upper layer that it can
		   send other packets, and the sending will be successful. */
		if ((CIRC_SPACE(p_gmac_queue->us_tx_head, p_gmac_queue->us_tx_tail,
  40074a:	eb05 0385 	add.w	r3, r5, r5, lsl #2
  40074e:	eb07 03c3 	add.w	r3, r7, r3, lsl #3
  400752:	8d1a      	ldrh	r2, [r3, #40]	; 0x28
  400754:	8cd9      	ldrh	r1, [r3, #38]	; 0x26
  400756:	3101      	adds	r1, #1
  400758:	1a52      	subs	r2, r2, r1
  40075a:	8c98      	ldrh	r0, [r3, #36]	; 0x24
  40075c:	fb92 f1f0 	sdiv	r1, r2, r0
  400760:	fb00 2211 	mls	r2, r0, r1, r2
				p_gmac_queue->us_tx_list_size) >= p_gmac_queue->uc_wakeup_threshold)
  400764:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
		if ((CIRC_SPACE(p_gmac_queue->us_tx_head, p_gmac_queue->us_tx_tail,
  400768:	429a      	cmp	r2, r3
  40076a:	db06      	blt.n	40077a <gmac_handler+0x142>
				&& p_gmac_queue->func_wakeup_cb) {
  40076c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  400770:	eb07 05c5 	add.w	r5, r7, r5, lsl #3
  400774:	69ab      	ldr	r3, [r5, #24]
  400776:	b103      	cbz	r3, 40077a <gmac_handler+0x142>
			p_gmac_queue->func_wakeup_cb();
  400778:	4798      	blx	r3
		/* the complete IP stack. */
		xSemaphoreGiveFromISR(netif_notification_semaphore,
				&xHigherPriorityTaskWoken);
		portEND_SWITCHING_ISR(xHigherPriorityTaskWoken);
#endif
}
  40077a:	b005      	add	sp, #20
  40077c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400780:	f8030300 	.word	0xf8030300
  400784:	00400221 	.word	0x00400221
  400788:	00400211 	.word	0x00400211

0040078c <spi_enable_clock>:
  40078c:	b508      	push	{r3, lr}
  40078e:	4b07      	ldr	r3, [pc, #28]	; (4007ac <spi_enable_clock+0x20>)
  400790:	4298      	cmp	r0, r3
  400792:	d003      	beq.n	40079c <spi_enable_clock+0x10>
  400794:	4b06      	ldr	r3, [pc, #24]	; (4007b0 <spi_enable_clock+0x24>)
  400796:	4298      	cmp	r0, r3
  400798:	d004      	beq.n	4007a4 <spi_enable_clock+0x18>
  40079a:	bd08      	pop	{r3, pc}
  40079c:	2015      	movs	r0, #21
  40079e:	4b05      	ldr	r3, [pc, #20]	; (4007b4 <spi_enable_clock+0x28>)
  4007a0:	4798      	blx	r3
  4007a2:	bd08      	pop	{r3, pc}
  4007a4:	202a      	movs	r0, #42	; 0x2a
  4007a6:	4b03      	ldr	r3, [pc, #12]	; (4007b4 <spi_enable_clock+0x28>)
  4007a8:	4798      	blx	r3
  4007aa:	e7f6      	b.n	40079a <spi_enable_clock+0xe>
  4007ac:	40008000 	.word	0x40008000
  4007b0:	40058000 	.word	0x40058000
  4007b4:	004020bd 	.word	0x004020bd

004007b8 <spi_set_peripheral_chip_select_value>:
  4007b8:	6843      	ldr	r3, [r0, #4]
  4007ba:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4007be:	6043      	str	r3, [r0, #4]
  4007c0:	6843      	ldr	r3, [r0, #4]
  4007c2:	0409      	lsls	r1, r1, #16
  4007c4:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4007c8:	4319      	orrs	r1, r3
  4007ca:	6041      	str	r1, [r0, #4]
  4007cc:	4770      	bx	lr

004007ce <spi_set_delay_between_chip_select>:
  4007ce:	6843      	ldr	r3, [r0, #4]
  4007d0:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  4007d4:	6043      	str	r3, [r0, #4]
  4007d6:	6843      	ldr	r3, [r0, #4]
  4007d8:	ea43 6101 	orr.w	r1, r3, r1, lsl #24
  4007dc:	6041      	str	r1, [r0, #4]
  4007de:	4770      	bx	lr

004007e0 <spi_read>:
  4007e0:	b410      	push	{r4}
  4007e2:	f643 2399 	movw	r3, #15001	; 0x3a99
  4007e6:	6904      	ldr	r4, [r0, #16]
  4007e8:	f014 0f01 	tst.w	r4, #1
  4007ec:	d103      	bne.n	4007f6 <spi_read+0x16>
  4007ee:	3b01      	subs	r3, #1
  4007f0:	d1f9      	bne.n	4007e6 <spi_read+0x6>
  4007f2:	2001      	movs	r0, #1
  4007f4:	e009      	b.n	40080a <spi_read+0x2a>
  4007f6:	6883      	ldr	r3, [r0, #8]
  4007f8:	6840      	ldr	r0, [r0, #4]
  4007fa:	f010 0f02 	tst.w	r0, #2
  4007fe:	d002      	beq.n	400806 <spi_read+0x26>
  400800:	f3c3 4003 	ubfx	r0, r3, #16, #4
  400804:	7010      	strb	r0, [r2, #0]
  400806:	800b      	strh	r3, [r1, #0]
  400808:	2000      	movs	r0, #0
  40080a:	f85d 4b04 	ldr.w	r4, [sp], #4
  40080e:	4770      	bx	lr

00400810 <spi_write>:
  400810:	b430      	push	{r4, r5}
  400812:	f643 2499 	movw	r4, #15001	; 0x3a99
  400816:	6905      	ldr	r5, [r0, #16]
  400818:	f015 0f02 	tst.w	r5, #2
  40081c:	d103      	bne.n	400826 <spi_write+0x16>
  40081e:	3c01      	subs	r4, #1
  400820:	d1f9      	bne.n	400816 <spi_write+0x6>
  400822:	2001      	movs	r0, #1
  400824:	e00c      	b.n	400840 <spi_write+0x30>
  400826:	6844      	ldr	r4, [r0, #4]
  400828:	f014 0f02 	tst.w	r4, #2
  40082c:	d006      	beq.n	40083c <spi_write+0x2c>
  40082e:	0412      	lsls	r2, r2, #16
  400830:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  400834:	4311      	orrs	r1, r2
  400836:	b10b      	cbz	r3, 40083c <spi_write+0x2c>
  400838:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
  40083c:	60c1      	str	r1, [r0, #12]
  40083e:	2000      	movs	r0, #0
  400840:	bc30      	pop	{r4, r5}
  400842:	4770      	bx	lr

00400844 <spi_set_clock_polarity>:
  400844:	b932      	cbnz	r2, 400854 <spi_set_clock_polarity+0x10>
  400846:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  40084a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40084c:	f023 0301 	bic.w	r3, r3, #1
  400850:	6303      	str	r3, [r0, #48]	; 0x30
  400852:	4770      	bx	lr
  400854:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  400858:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40085a:	f043 0301 	orr.w	r3, r3, #1
  40085e:	6303      	str	r3, [r0, #48]	; 0x30
  400860:	4770      	bx	lr

00400862 <spi_set_clock_phase>:
  400862:	b932      	cbnz	r2, 400872 <spi_set_clock_phase+0x10>
  400864:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  400868:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40086a:	f023 0302 	bic.w	r3, r3, #2
  40086e:	6303      	str	r3, [r0, #48]	; 0x30
  400870:	4770      	bx	lr
  400872:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  400876:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400878:	f043 0302 	orr.w	r3, r3, #2
  40087c:	6303      	str	r3, [r0, #48]	; 0x30
  40087e:	4770      	bx	lr

00400880 <spi_configure_cs_behavior>:
  400880:	2a04      	cmp	r2, #4
  400882:	d003      	beq.n	40088c <spi_configure_cs_behavior+0xc>
  400884:	b16a      	cbz	r2, 4008a2 <spi_configure_cs_behavior+0x22>
  400886:	2a08      	cmp	r2, #8
  400888:	d016      	beq.n	4008b8 <spi_configure_cs_behavior+0x38>
  40088a:	4770      	bx	lr
  40088c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  400890:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400892:	f023 0308 	bic.w	r3, r3, #8
  400896:	6303      	str	r3, [r0, #48]	; 0x30
  400898:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40089a:	f043 0304 	orr.w	r3, r3, #4
  40089e:	6303      	str	r3, [r0, #48]	; 0x30
  4008a0:	4770      	bx	lr
  4008a2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  4008a6:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4008a8:	f023 0308 	bic.w	r3, r3, #8
  4008ac:	6303      	str	r3, [r0, #48]	; 0x30
  4008ae:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4008b0:	f023 0304 	bic.w	r3, r3, #4
  4008b4:	6303      	str	r3, [r0, #48]	; 0x30
  4008b6:	4770      	bx	lr
  4008b8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  4008bc:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4008be:	f043 0308 	orr.w	r3, r3, #8
  4008c2:	6303      	str	r3, [r0, #48]	; 0x30
  4008c4:	e7e1      	b.n	40088a <spi_configure_cs_behavior+0xa>

004008c6 <spi_set_bits_per_transfer>:
  4008c6:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  4008ca:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4008cc:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  4008d0:	630b      	str	r3, [r1, #48]	; 0x30
  4008d2:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4008d4:	431a      	orrs	r2, r3
  4008d6:	630a      	str	r2, [r1, #48]	; 0x30
  4008d8:	4770      	bx	lr

004008da <spi_set_baudrate_div>:
  4008da:	b17a      	cbz	r2, 4008fc <spi_set_baudrate_div+0x22>
  4008dc:	b410      	push	{r4}
  4008de:	4614      	mov	r4, r2
  4008e0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  4008e4:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4008e6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4008ea:	630b      	str	r3, [r1, #48]	; 0x30
  4008ec:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4008ee:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4008f2:	630a      	str	r2, [r1, #48]	; 0x30
  4008f4:	2000      	movs	r0, #0
  4008f6:	f85d 4b04 	ldr.w	r4, [sp], #4
  4008fa:	4770      	bx	lr
  4008fc:	f04f 30ff 	mov.w	r0, #4294967295
  400900:	4770      	bx	lr

00400902 <spi_set_transfer_delay>:
  400902:	b410      	push	{r4}
  400904:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  400908:	6b08      	ldr	r0, [r1, #48]	; 0x30
  40090a:	b280      	uxth	r0, r0
  40090c:	6308      	str	r0, [r1, #48]	; 0x30
  40090e:	6b0c      	ldr	r4, [r1, #48]	; 0x30
  400910:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
  400914:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  400918:	630b      	str	r3, [r1, #48]	; 0x30
  40091a:	f85d 4b04 	ldr.w	r4, [sp], #4
  40091e:	4770      	bx	lr

00400920 <usart_set_async_baudrate>:
  400920:	b410      	push	{r4}
  400922:	010b      	lsls	r3, r1, #4
  400924:	4293      	cmp	r3, r2
  400926:	d914      	bls.n	400952 <usart_set_async_baudrate+0x32>
  400928:	00c9      	lsls	r1, r1, #3
  40092a:	084b      	lsrs	r3, r1, #1
  40092c:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  400930:	fbb2 f2f1 	udiv	r2, r2, r1
  400934:	08d3      	lsrs	r3, r2, #3
  400936:	1e5c      	subs	r4, r3, #1
  400938:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  40093c:	428c      	cmp	r4, r1
  40093e:	d901      	bls.n	400944 <usart_set_async_baudrate+0x24>
  400940:	2001      	movs	r0, #1
  400942:	e017      	b.n	400974 <usart_set_async_baudrate+0x54>
  400944:	6841      	ldr	r1, [r0, #4]
  400946:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  40094a:	6041      	str	r1, [r0, #4]
  40094c:	e00c      	b.n	400968 <usart_set_async_baudrate+0x48>
  40094e:	2001      	movs	r0, #1
  400950:	e010      	b.n	400974 <usart_set_async_baudrate+0x54>
  400952:	0859      	lsrs	r1, r3, #1
  400954:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  400958:	fbb2 f2f3 	udiv	r2, r2, r3
  40095c:	08d3      	lsrs	r3, r2, #3
  40095e:	1e5c      	subs	r4, r3, #1
  400960:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400964:	428c      	cmp	r4, r1
  400966:	d8f2      	bhi.n	40094e <usart_set_async_baudrate+0x2e>
  400968:	0412      	lsls	r2, r2, #16
  40096a:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  40096e:	431a      	orrs	r2, r3
  400970:	6202      	str	r2, [r0, #32]
  400972:	2000      	movs	r0, #0
  400974:	f85d 4b04 	ldr.w	r4, [sp], #4
  400978:	4770      	bx	lr
	...

0040097c <usart_reset>:
  40097c:	4b08      	ldr	r3, [pc, #32]	; (4009a0 <usart_reset+0x24>)
  40097e:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
  400982:	2300      	movs	r3, #0
  400984:	6043      	str	r3, [r0, #4]
  400986:	6243      	str	r3, [r0, #36]	; 0x24
  400988:	6283      	str	r3, [r0, #40]	; 0x28
  40098a:	2388      	movs	r3, #136	; 0x88
  40098c:	6003      	str	r3, [r0, #0]
  40098e:	2324      	movs	r3, #36	; 0x24
  400990:	6003      	str	r3, [r0, #0]
  400992:	f44f 7380 	mov.w	r3, #256	; 0x100
  400996:	6003      	str	r3, [r0, #0]
  400998:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  40099c:	6003      	str	r3, [r0, #0]
  40099e:	4770      	bx	lr
  4009a0:	55534100 	.word	0x55534100

004009a4 <usart_init_rs232>:
  4009a4:	b570      	push	{r4, r5, r6, lr}
  4009a6:	4605      	mov	r5, r0
  4009a8:	460c      	mov	r4, r1
  4009aa:	4616      	mov	r6, r2
  4009ac:	4b0f      	ldr	r3, [pc, #60]	; (4009ec <usart_init_rs232+0x48>)
  4009ae:	4798      	blx	r3
  4009b0:	2200      	movs	r2, #0
  4009b2:	4b0f      	ldr	r3, [pc, #60]	; (4009f0 <usart_init_rs232+0x4c>)
  4009b4:	601a      	str	r2, [r3, #0]
  4009b6:	b1a4      	cbz	r4, 4009e2 <usart_init_rs232+0x3e>
  4009b8:	4632      	mov	r2, r6
  4009ba:	6821      	ldr	r1, [r4, #0]
  4009bc:	4628      	mov	r0, r5
  4009be:	4b0d      	ldr	r3, [pc, #52]	; (4009f4 <usart_init_rs232+0x50>)
  4009c0:	4798      	blx	r3
  4009c2:	4602      	mov	r2, r0
  4009c4:	b978      	cbnz	r0, 4009e6 <usart_init_rs232+0x42>
  4009c6:	6863      	ldr	r3, [r4, #4]
  4009c8:	68a1      	ldr	r1, [r4, #8]
  4009ca:	430b      	orrs	r3, r1
  4009cc:	6921      	ldr	r1, [r4, #16]
  4009ce:	430b      	orrs	r3, r1
  4009d0:	68e1      	ldr	r1, [r4, #12]
  4009d2:	430b      	orrs	r3, r1
  4009d4:	4906      	ldr	r1, [pc, #24]	; (4009f0 <usart_init_rs232+0x4c>)
  4009d6:	600b      	str	r3, [r1, #0]
  4009d8:	6869      	ldr	r1, [r5, #4]
  4009da:	430b      	orrs	r3, r1
  4009dc:	606b      	str	r3, [r5, #4]
  4009de:	4610      	mov	r0, r2
  4009e0:	bd70      	pop	{r4, r5, r6, pc}
  4009e2:	2201      	movs	r2, #1
  4009e4:	e7fb      	b.n	4009de <usart_init_rs232+0x3a>
  4009e6:	2201      	movs	r2, #1
  4009e8:	e7f9      	b.n	4009de <usart_init_rs232+0x3a>
  4009ea:	bf00      	nop
  4009ec:	0040097d 	.word	0x0040097d
  4009f0:	20407220 	.word	0x20407220
  4009f4:	00400921 	.word	0x00400921

004009f8 <usart_enable_tx>:
  4009f8:	2340      	movs	r3, #64	; 0x40
  4009fa:	6003      	str	r3, [r0, #0]
  4009fc:	4770      	bx	lr

004009fe <usart_enable_rx>:
  4009fe:	2310      	movs	r3, #16
  400a00:	6003      	str	r3, [r0, #0]
  400a02:	4770      	bx	lr

00400a04 <usart_write>:
  400a04:	6943      	ldr	r3, [r0, #20]
  400a06:	f013 0f02 	tst.w	r3, #2
  400a0a:	d004      	beq.n	400a16 <usart_write+0x12>
  400a0c:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400a10:	61c1      	str	r1, [r0, #28]
  400a12:	2000      	movs	r0, #0
  400a14:	4770      	bx	lr
  400a16:	2001      	movs	r0, #1
  400a18:	4770      	bx	lr

00400a1a <usart_read>:
  400a1a:	6943      	ldr	r3, [r0, #20]
  400a1c:	f013 0f01 	tst.w	r3, #1
  400a20:	d005      	beq.n	400a2e <usart_read+0x14>
  400a22:	6983      	ldr	r3, [r0, #24]
  400a24:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400a28:	600b      	str	r3, [r1, #0]
  400a2a:	2000      	movs	r0, #0
  400a2c:	4770      	bx	lr
  400a2e:	2001      	movs	r0, #1
  400a30:	4770      	bx	lr
	...

00400a34 <read_dev_gmac>:

#include "GMAC_Artnet.h"
#include "softLib/Art-Net/Art-Net.h"

uint32_t read_dev_gmac(void)
{
  400a34:	b510      	push	{r4, lr}
  400a36:	b082      	sub	sp, #8
	return gmac_dev_read(&gs_gmac_dev, GMAC_QUE_0, (uint8_t *) gs_uc_eth_buffer_rx, sizeof(gs_uc_eth_buffer_rx), &ul_frm_size_rx);
  400a38:	4b05      	ldr	r3, [pc, #20]	; (400a50 <read_dev_gmac+0x1c>)
  400a3a:	9300      	str	r3, [sp, #0]
  400a3c:	f44f 63c0 	mov.w	r3, #1536	; 0x600
  400a40:	4a04      	ldr	r2, [pc, #16]	; (400a54 <read_dev_gmac+0x20>)
  400a42:	2100      	movs	r1, #0
  400a44:	4804      	ldr	r0, [pc, #16]	; (400a58 <read_dev_gmac+0x24>)
  400a46:	4c05      	ldr	r4, [pc, #20]	; (400a5c <read_dev_gmac+0x28>)
  400a48:	47a0      	blx	r4
}
  400a4a:	b002      	add	sp, #8
  400a4c:	bd10      	pop	{r4, pc}
  400a4e:	bf00      	nop
  400a50:	204082c8 	.word	0x204082c8
  400a54:	204075cc 	.word	0x204075cc
  400a58:	204074d4 	.word	0x204074d4
  400a5c:	00400475 	.word	0x00400475

00400a60 <at24mac_get_mac_address>:
	}
}

#ifdef ETH_SUPPORT_AT24MAC
void at24mac_get_mac_address(void)
{
  400a60:	b510      	push	{r4, lr}
  400a62:	b08c      	sub	sp, #48	; 0x30
	twihs_options_t opt;
	twihs_packet_t packet_mac_addr;
	uint8_t orginal_mac_addr[BOARD_AT24MAC_PAGE_SIZE];

	/* Enable TWI peripheral */
	pmc_enable_periph_clk(ID_TWIHS0);
  400a64:	2013      	movs	r0, #19
  400a66:	4b1a      	ldr	r3, [pc, #104]	; (400ad0 <at24mac_get_mac_address+0x70>)
  400a68:	4798      	blx	r3

	/* Init TWI peripheral */
	opt.master_clk = sysclk_get_cpu_hz();
  400a6a:	4b1a      	ldr	r3, [pc, #104]	; (400ad4 <at24mac_get_mac_address+0x74>)
  400a6c:	9309      	str	r3, [sp, #36]	; 0x24
	opt.speed = BOARD_AT24MAC_TWIHS_CLK;
  400a6e:	4b1a      	ldr	r3, [pc, #104]	; (400ad8 <at24mac_get_mac_address+0x78>)
  400a70:	930a      	str	r3, [sp, #40]	; 0x28
	twihs_master_init(BOARD_AT24MAC_TWIHS, &opt);
  400a72:	4c1a      	ldr	r4, [pc, #104]	; (400adc <at24mac_get_mac_address+0x7c>)
  400a74:	a909      	add	r1, sp, #36	; 0x24
  400a76:	4620      	mov	r0, r4
  400a78:	4b19      	ldr	r3, [pc, #100]	; (400ae0 <at24mac_get_mac_address+0x80>)
  400a7a:	4798      	blx	r3

	/* MAC address */
	packet_mac_addr.chip = BOARD_AT24MAC_ADDRESS;
  400a7c:	2357      	movs	r3, #87	; 0x57
  400a7e:	f88d 3020 	strb.w	r3, [sp, #32]
	packet_mac_addr.addr[0] = 0x9A;
  400a82:	239a      	movs	r3, #154	; 0x9a
  400a84:	f88d 3010 	strb.w	r3, [sp, #16]
	packet_mac_addr.addr_length = 1;
  400a88:	2301      	movs	r3, #1
  400a8a:	9305      	str	r3, [sp, #20]
	packet_mac_addr.buffer = orginal_mac_addr;
  400a8c:	f8cd d018 	str.w	sp, [sp, #24]
	packet_mac_addr.length = BOARD_AT24MAC_PAGE_SIZE;
  400a90:	2310      	movs	r3, #16
  400a92:	9307      	str	r3, [sp, #28]

	twihs_master_read(BOARD_AT24MAC_TWIHS, &packet_mac_addr);
  400a94:	eb0d 0103 	add.w	r1, sp, r3
  400a98:	4620      	mov	r0, r4
  400a9a:	4b12      	ldr	r3, [pc, #72]	; (400ae4 <at24mac_get_mac_address+0x84>)
  400a9c:	4798      	blx	r3

	if ((orginal_mac_addr[0] == 0xFC) && (orginal_mac_addr[1] == 0xC2)
  400a9e:	f89d 3000 	ldrb.w	r3, [sp]
  400aa2:	2bfc      	cmp	r3, #252	; 0xfc
  400aa4:	d001      	beq.n	400aaa <at24mac_get_mac_address+0x4a>
	&& (orginal_mac_addr[2] == 0x3D)) {
		for (uint8_t i = 0; i < 6; i++)
		gs_uc_mac_address[i] = orginal_mac_addr[i];
	}
}
  400aa6:	b00c      	add	sp, #48	; 0x30
  400aa8:	bd10      	pop	{r4, pc}
	if ((orginal_mac_addr[0] == 0xFC) && (orginal_mac_addr[1] == 0xC2)
  400aaa:	f89d 3001 	ldrb.w	r3, [sp, #1]
  400aae:	2bc2      	cmp	r3, #194	; 0xc2
  400ab0:	d1f9      	bne.n	400aa6 <at24mac_get_mac_address+0x46>
	&& (orginal_mac_addr[2] == 0x3D)) {
  400ab2:	f89d 3002 	ldrb.w	r3, [sp, #2]
  400ab6:	2b3d      	cmp	r3, #61	; 0x3d
  400ab8:	d1f5      	bne.n	400aa6 <at24mac_get_mac_address+0x46>
  400aba:	466b      	mov	r3, sp
  400abc:	4a0a      	ldr	r2, [pc, #40]	; (400ae8 <at24mac_get_mac_address+0x88>)
  400abe:	f10d 0006 	add.w	r0, sp, #6
		gs_uc_mac_address[i] = orginal_mac_addr[i];
  400ac2:	f813 1b01 	ldrb.w	r1, [r3], #1
  400ac6:	f802 1b01 	strb.w	r1, [r2], #1
		for (uint8_t i = 0; i < 6; i++)
  400aca:	4283      	cmp	r3, r0
  400acc:	d1f9      	bne.n	400ac2 <at24mac_get_mac_address+0x62>
  400ace:	e7ea      	b.n	400aa6 <at24mac_get_mac_address+0x46>
  400ad0:	004020bd 	.word	0x004020bd
  400ad4:	11e1a300 	.word	0x11e1a300
  400ad8:	00061a80 	.word	0x00061a80
  400adc:	40018000 	.word	0x40018000
  400ae0:	004019ed 	.word	0x004019ed
  400ae4:	00401a21 	.word	0x00401a21
  400ae8:	20400010 	.word	0x20400010

00400aec <init_gmac_ethernet>:
{
  400aec:	b538      	push	{r3, r4, r5, lr}
	at24mac_get_mac_address();
  400aee:	4b28      	ldr	r3, [pc, #160]	; (400b90 <init_gmac_ethernet+0xa4>)
  400af0:	4798      	blx	r3
	ul_delay = sysclk_get_cpu_hz() / 1000 / 3 * 400;
  400af2:	4a28      	ldr	r2, [pc, #160]	; (400b94 <init_gmac_ethernet+0xa8>)
  400af4:	4b28      	ldr	r3, [pc, #160]	; (400b98 <init_gmac_ethernet+0xac>)
  400af6:	601a      	str	r2, [r3, #0]
	while (ul_delay--);
  400af8:	461a      	mov	r2, r3
  400afa:	6813      	ldr	r3, [r2, #0]
  400afc:	1e59      	subs	r1, r3, #1
  400afe:	6011      	str	r1, [r2, #0]
  400b00:	2b00      	cmp	r3, #0
  400b02:	d1fa      	bne.n	400afa <init_gmac_ethernet+0xe>
	pmc_enable_periph_clk(ID_GMAC);
  400b04:	2027      	movs	r0, #39	; 0x27
  400b06:	4b25      	ldr	r3, [pc, #148]	; (400b9c <init_gmac_ethernet+0xb0>)
  400b08:	4798      	blx	r3
	gmac_option.uc_copy_all_frame = 0;
  400b0a:	4a25      	ldr	r2, [pc, #148]	; (400ba0 <init_gmac_ethernet+0xb4>)
  400b0c:	2500      	movs	r5, #0
  400b0e:	7015      	strb	r5, [r2, #0]
	gmac_option.uc_no_boardcast = 0;
  400b10:	7055      	strb	r5, [r2, #1]
	memcpy(gmac_option.uc_mac_addr, gs_uc_mac_address, sizeof(gs_uc_mac_address));
  400b12:	4b24      	ldr	r3, [pc, #144]	; (400ba4 <init_gmac_ethernet+0xb8>)
  400b14:	6818      	ldr	r0, [r3, #0]
  400b16:	f8c2 0002 	str.w	r0, [r2, #2]
  400b1a:	889b      	ldrh	r3, [r3, #4]
  400b1c:	80d3      	strh	r3, [r2, #6]
	gs_gmac_dev.p_hw = GMAC;
  400b1e:	4922      	ldr	r1, [pc, #136]	; (400ba8 <init_gmac_ethernet+0xbc>)
  400b20:	4c22      	ldr	r4, [pc, #136]	; (400bac <init_gmac_ethernet+0xc0>)
  400b22:	600c      	str	r4, [r1, #0]
	gmac_dev_init(GMAC, &gs_gmac_dev, &gmac_option);
  400b24:	4620      	mov	r0, r4
  400b26:	4b22      	ldr	r3, [pc, #136]	; (400bb0 <init_gmac_ethernet+0xc4>)
  400b28:	4798      	blx	r3
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400b2a:	2280      	movs	r2, #128	; 0x80
  400b2c:	4b21      	ldr	r3, [pc, #132]	; (400bb4 <init_gmac_ethernet+0xc8>)
  400b2e:	605a      	str	r2, [r3, #4]
	if (ethernet_phy_init(GMAC, BOARD_GMAC_PHY_ADDR, sysclk_get_cpu_hz())
  400b30:	4a21      	ldr	r2, [pc, #132]	; (400bb8 <init_gmac_ethernet+0xcc>)
  400b32:	4629      	mov	r1, r5
  400b34:	4620      	mov	r0, r4
  400b36:	4b21      	ldr	r3, [pc, #132]	; (400bbc <init_gmac_ethernet+0xd0>)
  400b38:	4798      	blx	r3
  400b3a:	b9c8      	cbnz	r0, 400b70 <init_gmac_ethernet+0x84>
	if (ethernet_phy_auto_negotiate(GMAC, BOARD_GMAC_PHY_ADDR) != GMAC_OK) {
  400b3c:	2100      	movs	r1, #0
  400b3e:	481b      	ldr	r0, [pc, #108]	; (400bac <init_gmac_ethernet+0xc0>)
  400b40:	4b1f      	ldr	r3, [pc, #124]	; (400bc0 <init_gmac_ethernet+0xd4>)
  400b42:	4798      	blx	r3
  400b44:	b9c8      	cbnz	r0, 400b7a <init_gmac_ethernet+0x8e>
	while (ethernet_phy_set_link(GMAC, BOARD_GMAC_PHY_ADDR, 1) != GMAC_OK) {
  400b46:	2201      	movs	r2, #1
  400b48:	2100      	movs	r1, #0
  400b4a:	4818      	ldr	r0, [pc, #96]	; (400bac <init_gmac_ethernet+0xc0>)
  400b4c:	4b1d      	ldr	r3, [pc, #116]	; (400bc4 <init_gmac_ethernet+0xd8>)
  400b4e:	4798      	blx	r3
  400b50:	b9c0      	cbnz	r0, 400b84 <init_gmac_ethernet+0x98>
		p_artAddr.IP[i] = gs_uc_ip_address[i];
  400b52:	4b1d      	ldr	r3, [pc, #116]	; (400bc8 <init_gmac_ethernet+0xdc>)
  400b54:	4a1d      	ldr	r2, [pc, #116]	; (400bcc <init_gmac_ethernet+0xe0>)
  400b56:	7811      	ldrb	r1, [r2, #0]
  400b58:	7019      	strb	r1, [r3, #0]
  400b5a:	7851      	ldrb	r1, [r2, #1]
  400b5c:	7059      	strb	r1, [r3, #1]
  400b5e:	7891      	ldrb	r1, [r2, #2]
  400b60:	7099      	strb	r1, [r3, #2]
  400b62:	78d2      	ldrb	r2, [r2, #3]
  400b64:	70da      	strb	r2, [r3, #3]
	p_artAddr.Port = 0x6391;
  400b66:	f246 3291 	movw	r2, #25489	; 0x6391
  400b6a:	809a      	strh	r2, [r3, #4]
	return 1;
  400b6c:	2001      	movs	r0, #1
}
  400b6e:	bd38      	pop	{r3, r4, r5, pc}
		puts("PHY Initialize ERROR!\r");
  400b70:	4817      	ldr	r0, [pc, #92]	; (400bd0 <init_gmac_ethernet+0xe4>)
  400b72:	4b18      	ldr	r3, [pc, #96]	; (400bd4 <init_gmac_ethernet+0xe8>)
  400b74:	4798      	blx	r3
		return 0;
  400b76:	4628      	mov	r0, r5
  400b78:	bd38      	pop	{r3, r4, r5, pc}
		puts("Auto Negotiate ERROR!\r");
  400b7a:	4817      	ldr	r0, [pc, #92]	; (400bd8 <init_gmac_ethernet+0xec>)
  400b7c:	4b15      	ldr	r3, [pc, #84]	; (400bd4 <init_gmac_ethernet+0xe8>)
  400b7e:	4798      	blx	r3
		return 0;
  400b80:	2000      	movs	r0, #0
  400b82:	bd38      	pop	{r3, r4, r5, pc}
		puts("Set link ERROR!\r");
  400b84:	4815      	ldr	r0, [pc, #84]	; (400bdc <init_gmac_ethernet+0xf0>)
  400b86:	4b13      	ldr	r3, [pc, #76]	; (400bd4 <init_gmac_ethernet+0xe8>)
  400b88:	4798      	blx	r3
		return 0;
  400b8a:	2000      	movs	r0, #0
  400b8c:	bd38      	pop	{r3, r4, r5, pc}
  400b8e:	bf00      	nop
  400b90:	00400a61 	.word	0x00400a61
  400b94:	02625a00 	.word	0x02625a00
  400b98:	204075c8 	.word	0x204075c8
  400b9c:	004020bd 	.word	0x004020bd
  400ba0:	20407bcc 	.word	0x20407bcc
  400ba4:	20400010 	.word	0x20400010
  400ba8:	204074d4 	.word	0x204074d4
  400bac:	40050000 	.word	0x40050000
  400bb0:	00400311 	.word	0x00400311
  400bb4:	e000e100 	.word	0xe000e100
  400bb8:	11e1a300 	.word	0x11e1a300
  400bbc:	004017d9 	.word	0x004017d9
  400bc0:	004015dd 	.word	0x004015dd
  400bc4:	004014e9 	.word	0x004014e9
  400bc8:	204082cc 	.word	0x204082cc
  400bcc:	2040000c 	.word	0x2040000c
  400bd0:	00405834 	.word	0x00405834
  400bd4:	00402dfd 	.word	0x00402dfd
  400bd8:	0040584c 	.word	0x0040584c
  400bdc:	00405864 	.word	0x00405864

00400be0 <GMAC_Handler>:

/**
 * \brief GMAC interrupt handler.
 */
void GMAC_Handler(void)
{
  400be0:	b508      	push	{r3, lr}
	gmac_handler(&gs_gmac_dev, GMAC_QUE_0);
  400be2:	2100      	movs	r1, #0
  400be4:	4801      	ldr	r0, [pc, #4]	; (400bec <GMAC_Handler+0xc>)
  400be6:	4b02      	ldr	r3, [pc, #8]	; (400bf0 <GMAC_Handler+0x10>)
  400be8:	4798      	blx	r3
  400bea:	bd08      	pop	{r3, pc}
  400bec:	204074d4 	.word	0x204074d4
  400bf0:	00400639 	.word	0x00400639

00400bf4 <print_address_register>:
{
	printf("STATUS\t\t = 0x%02x RX_DR=%x TX_DS=%x MAX_RT=%x RX_P_NO=%x TX_FULL=%x\r\n", status, (status & (1<<RX_DR)) ? 1 : 0, (status & (1<<TX_DS)) ? 1 : 0, (status & (1<<MAX_RT)) ? 1 : 0, (status & (1<<RX_P_NO)) ? 1 : 0, (status & (1<<TX_FULL)) ? 1 : 0);
}

static void print_address_register(const char* name, uint8_t reg, uint8_t qty)
{
  400bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400bf8:	b083      	sub	sp, #12
  400bfa:	af00      	add	r7, sp, #0
  400bfc:	460e      	mov	r6, r1
  400bfe:	4614      	mov	r4, r2
	printf("%s\t", name);
  400c00:	4601      	mov	r1, r0
  400c02:	4829      	ldr	r0, [pc, #164]	; (400ca8 <print_address_register+0xb4>)
  400c04:	4b29      	ldr	r3, [pc, #164]	; (400cac <print_address_register+0xb8>)
  400c06:	4798      	blx	r3
	while(qty--){
  400c08:	2c00      	cmp	r4, #0
  400c0a:	d045      	beq.n	400c98 <print_address_register+0xa4>
  400c0c:	4434      	add	r4, r6
  400c0e:	fa5f fa84 	uxtb.w	sl, r4
		uint8_t buffer[addr_width];
  400c12:	f8df b0a8 	ldr.w	fp, [pc, #168]	; 400cbc <print_address_register+0xc8>
	while(qty--){
  400c16:	f8c7 d004 	str.w	sp, [r7, #4]
		uint8_t buffer[addr_width];
  400c1a:	f89b 4000 	ldrb.w	r4, [fp]
  400c1e:	1de3      	adds	r3, r4, #7
  400c20:	f023 0307 	bic.w	r3, r3, #7
  400c24:	ebad 0d03 	sub.w	sp, sp, r3
  400c28:	466d      	mov	r5, sp
		read_register(reg++, buffer, sizeof(buffer));
  400c2a:	f106 0901 	add.w	r9, r6, #1
  400c2e:	fa5f f989 	uxtb.w	r9, r9
{
  400c32:	f8c7 d000 	str.w	sp, [r7]
	uint8_t status[len+1];
  400c36:	f104 0308 	add.w	r3, r4, #8
  400c3a:	f023 0307 	bic.w	r3, r3, #7
  400c3e:	ebad 0d03 	sub.w	sp, sp, r3
	status[0] = R_REGISTER | (REGISTER_MASK & reg);
  400c42:	f006 061f 	and.w	r6, r6, #31
  400c46:	f88d 6000 	strb.w	r6, [sp]
	spi_master_transfer(&status, sizeof(status));
  400c4a:	1c61      	adds	r1, r4, #1
  400c4c:	4668      	mov	r0, sp
  400c4e:	4b18      	ldr	r3, [pc, #96]	; (400cb0 <print_address_register+0xbc>)
  400c50:	4798      	blx	r3
	for (uint8_t i = 0; i< len; i++)
  400c52:	b15c      	cbz	r4, 400c6c <print_address_register+0x78>
  400c54:	f10d 0801 	add.w	r8, sp, #1
  400c58:	1e6b      	subs	r3, r5, #1
  400c5a:	1e61      	subs	r1, r4, #1
  400c5c:	fa55 f181 	uxtab	r1, r5, r1
		buf[i] = status[i+1];
  400c60:	f818 2b01 	ldrb.w	r2, [r8], #1
  400c64:	f803 2f01 	strb.w	r2, [r3, #1]!
	for (uint8_t i = 0; i< len; i++)
  400c68:	428b      	cmp	r3, r1
  400c6a:	d1f9      	bne.n	400c60 <print_address_register+0x6c>
  400c6c:	f8d7 d000 	ldr.w	sp, [r7]
		
		printf(" 0x");
  400c70:	4810      	ldr	r0, [pc, #64]	; (400cb4 <print_address_register+0xc0>)
  400c72:	4b0e      	ldr	r3, [pc, #56]	; (400cac <print_address_register+0xb8>)
  400c74:	4798      	blx	r3
		uint8_t* bufptr = buffer + sizeof(buffer);
		while(--bufptr >= buffer){
  400c76:	3c01      	subs	r4, #1
  400c78:	192c      	adds	r4, r5, r4
  400c7a:	d208      	bcs.n	400c8e <print_address_register+0x9a>
			printf("%02x", *bufptr);
  400c7c:	f8df 8040 	ldr.w	r8, [pc, #64]	; 400cc0 <print_address_register+0xcc>
  400c80:	4e0a      	ldr	r6, [pc, #40]	; (400cac <print_address_register+0xb8>)
  400c82:	f814 1901 	ldrb.w	r1, [r4], #-1
  400c86:	4640      	mov	r0, r8
  400c88:	47b0      	blx	r6
		while(--bufptr >= buffer){
  400c8a:	42a5      	cmp	r5, r4
  400c8c:	d9f9      	bls.n	400c82 <print_address_register+0x8e>
  400c8e:	f8d7 d004 	ldr.w	sp, [r7, #4]
		read_register(reg++, buffer, sizeof(buffer));
  400c92:	464e      	mov	r6, r9
	while(qty--){
  400c94:	45d1      	cmp	r9, sl
  400c96:	d1be      	bne.n	400c16 <print_address_register+0x22>
		}
	}
	printf("\r\n");
  400c98:	4807      	ldr	r0, [pc, #28]	; (400cb8 <print_address_register+0xc4>)
  400c9a:	4b04      	ldr	r3, [pc, #16]	; (400cac <print_address_register+0xb8>)
  400c9c:	4798      	blx	r3
}
  400c9e:	370c      	adds	r7, #12
  400ca0:	46bd      	mov	sp, r7
  400ca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400ca6:	bf00      	nop
  400ca8:	004059ac 	.word	0x004059ac
  400cac:	00402b09 	.word	0x00402b09
  400cb0:	00401439 	.word	0x00401439
  400cb4:	004059b0 	.word	0x004059b0
  400cb8:	00405980 	.word	0x00405980
  400cbc:	204082d4 	.word	0x204082d4
  400cc0:	004059b4 	.word	0x004059b4

00400cc4 <writeRegister>:
{
  400cc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  400cc6:	af00      	add	r7, sp, #0
	uint8_t p_buf[length+1];
  400cc8:	1c56      	adds	r6, r2, #1
  400cca:	f102 0308 	add.w	r3, r2, #8
  400cce:	f023 0307 	bic.w	r3, r3, #7
  400cd2:	ebad 0d03 	sub.w	sp, sp, r3
  400cd6:	466d      	mov	r5, sp
	p_buf[0] = (W_REGISTER | (REGISTER_MASK & reg));
  400cd8:	f000 001f 	and.w	r0, r0, #31
  400cdc:	f040 0020 	orr.w	r0, r0, #32
  400ce0:	f88d 0000 	strb.w	r0, [sp]
	for (uint8_t i = 0; i < length; i++)
  400ce4:	b152      	cbz	r2, 400cfc <writeRegister+0x38>
  400ce6:	1e4b      	subs	r3, r1, #1
  400ce8:	1c68      	adds	r0, r5, #1
  400cea:	3a01      	subs	r2, #1
  400cec:	fa51 f482 	uxtab	r4, r1, r2
		p_buf[i+1] = (*buf++);
  400cf0:	f813 2f01 	ldrb.w	r2, [r3, #1]!
  400cf4:	f800 2b01 	strb.w	r2, [r0], #1
	for (uint8_t i = 0; i < length; i++)
  400cf8:	42a3      	cmp	r3, r4
  400cfa:	d1f9      	bne.n	400cf0 <writeRegister+0x2c>
	spi_master_transfer(p_buf, sizeof(p_buf));
  400cfc:	4631      	mov	r1, r6
  400cfe:	4628      	mov	r0, r5
  400d00:	4b02      	ldr	r3, [pc, #8]	; (400d0c <writeRegister+0x48>)
  400d02:	4798      	blx	r3
}
  400d04:	7828      	ldrb	r0, [r5, #0]
  400d06:	46bd      	mov	sp, r7
  400d08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400d0a:	bf00      	nop
  400d0c:	00401439 	.word	0x00401439

00400d10 <nRF24_readRegister>:
{
  400d10:	b500      	push	{lr}
  400d12:	b083      	sub	sp, #12
	uint8_t cmd[2] = {R_REGISTER | (REGISTER_MASK & reg), 0xFF};
  400d14:	f000 001f 	and.w	r0, r0, #31
  400d18:	f88d 0004 	strb.w	r0, [sp, #4]
  400d1c:	23ff      	movs	r3, #255	; 0xff
  400d1e:	f88d 3005 	strb.w	r3, [sp, #5]
	spi_master_transfer(&cmd, sizeof(cmd));
  400d22:	2102      	movs	r1, #2
  400d24:	a801      	add	r0, sp, #4
  400d26:	4b03      	ldr	r3, [pc, #12]	; (400d34 <nRF24_readRegister+0x24>)
  400d28:	4798      	blx	r3
}
  400d2a:	f89d 0005 	ldrb.w	r0, [sp, #5]
  400d2e:	b003      	add	sp, #12
  400d30:	f85d fb04 	ldr.w	pc, [sp], #4
  400d34:	00401439 	.word	0x00401439

00400d38 <print_byte_register>:

static void print_byte_register(const char* name, uint8_t reg, uint8_t qty)
{
  400d38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400d3c:	460d      	mov	r5, r1
  400d3e:	4616      	mov	r6, r2
	printf("%s\t", name);
  400d40:	4601      	mov	r1, r0
  400d42:	480d      	ldr	r0, [pc, #52]	; (400d78 <print_byte_register+0x40>)
  400d44:	4b0d      	ldr	r3, [pc, #52]	; (400d7c <print_byte_register+0x44>)
  400d46:	4798      	blx	r3
	while (qty--)
  400d48:	b186      	cbz	r6, 400d6c <print_byte_register+0x34>
  400d4a:	442e      	add	r6, r5
  400d4c:	b2f6      	uxtb	r6, r6
	{
		printf(" 0x%02x", nRF24_readRegister(reg++));
  400d4e:	f8df 9034 	ldr.w	r9, [pc, #52]	; 400d84 <print_byte_register+0x4c>
  400d52:	f8df 8034 	ldr.w	r8, [pc, #52]	; 400d88 <print_byte_register+0x50>
  400d56:	4f09      	ldr	r7, [pc, #36]	; (400d7c <print_byte_register+0x44>)
  400d58:	1c6c      	adds	r4, r5, #1
  400d5a:	b2e4      	uxtb	r4, r4
  400d5c:	4628      	mov	r0, r5
  400d5e:	47c8      	blx	r9
  400d60:	4601      	mov	r1, r0
  400d62:	4640      	mov	r0, r8
  400d64:	47b8      	blx	r7
  400d66:	4625      	mov	r5, r4
	while (qty--)
  400d68:	42a6      	cmp	r6, r4
  400d6a:	d1f5      	bne.n	400d58 <print_byte_register+0x20>
	}
	printf("\r\n");
  400d6c:	4804      	ldr	r0, [pc, #16]	; (400d80 <print_byte_register+0x48>)
  400d6e:	4b03      	ldr	r3, [pc, #12]	; (400d7c <print_byte_register+0x44>)
  400d70:	4798      	blx	r3
  400d72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400d76:	bf00      	nop
  400d78:	004059ac 	.word	0x004059ac
  400d7c:	00402b09 	.word	0x00402b09
  400d80:	00405980 	.word	0x00405980
  400d84:	00400d11 	.word	0x00400d11
  400d88:	004059bc 	.word	0x004059bc

00400d8c <nRF24_writeRegister>:
{
  400d8c:	b500      	push	{lr}
  400d8e:	b083      	sub	sp, #12
	p_buf[0] = (W_REGISTER | (REGISTER_MASK & reg));
  400d90:	f000 001f 	and.w	r0, r0, #31
  400d94:	f040 0020 	orr.w	r0, r0, #32
  400d98:	f88d 0004 	strb.w	r0, [sp, #4]
	p_buf[1] = val;
  400d9c:	f88d 1005 	strb.w	r1, [sp, #5]
	spi_master_transfer(p_buf, sizeof(p_buf));
  400da0:	2102      	movs	r1, #2
  400da2:	a801      	add	r0, sp, #4
  400da4:	4b03      	ldr	r3, [pc, #12]	; (400db4 <nRF24_writeRegister+0x28>)
  400da6:	4798      	blx	r3
}
  400da8:	f89d 0004 	ldrb.w	r0, [sp, #4]
  400dac:	b003      	add	sp, #12
  400dae:	f85d fb04 	ldr.w	pc, [sp], #4
  400db2:	bf00      	nop
  400db4:	00401439 	.word	0x00401439

00400db8 <nRF24_FlushRx>:
{
  400db8:	b500      	push	{lr}
  400dba:	b083      	sub	sp, #12
	cmd = FLUSH_RX;
  400dbc:	a802      	add	r0, sp, #8
  400dbe:	23e2      	movs	r3, #226	; 0xe2
  400dc0:	f800 3d01 	strb.w	r3, [r0, #-1]!
	spi_master_transfer(&cmd, sizeof(cmd));
  400dc4:	2101      	movs	r1, #1
  400dc6:	4b03      	ldr	r3, [pc, #12]	; (400dd4 <nRF24_FlushRx+0x1c>)
  400dc8:	4798      	blx	r3
}
  400dca:	f89d 0007 	ldrb.w	r0, [sp, #7]
  400dce:	b003      	add	sp, #12
  400dd0:	f85d fb04 	ldr.w	pc, [sp], #4
  400dd4:	00401439 	.word	0x00401439

00400dd8 <nRF24_FlushTx>:
{
  400dd8:	b500      	push	{lr}
  400dda:	b083      	sub	sp, #12
	cmd = FLUSH_TX;
  400ddc:	a802      	add	r0, sp, #8
  400dde:	23e1      	movs	r3, #225	; 0xe1
  400de0:	f800 3d01 	strb.w	r3, [r0, #-1]!
	spi_master_transfer(&cmd, sizeof(cmd));
  400de4:	2101      	movs	r1, #1
  400de6:	4b03      	ldr	r3, [pc, #12]	; (400df4 <nRF24_FlushTx+0x1c>)
  400de8:	4798      	blx	r3
}
  400dea:	f89d 0007 	ldrb.w	r0, [sp, #7]
  400dee:	b003      	add	sp, #12
  400df0:	f85d fb04 	ldr.w	pc, [sp], #4
  400df4:	00401439 	.word	0x00401439

00400df8 <nRF24_getStatus>:
{
  400df8:	b500      	push	{lr}
  400dfa:	b083      	sub	sp, #12
	cmd = RF24_NOP;
  400dfc:	a802      	add	r0, sp, #8
  400dfe:	23ff      	movs	r3, #255	; 0xff
  400e00:	f800 3d01 	strb.w	r3, [r0, #-1]!
	spi_master_transfer(&cmd, sizeof(cmd));
  400e04:	2101      	movs	r1, #1
  400e06:	4b03      	ldr	r3, [pc, #12]	; (400e14 <nRF24_getStatus+0x1c>)
  400e08:	4798      	blx	r3
}
  400e0a:	f89d 0007 	ldrb.w	r0, [sp, #7]
  400e0e:	b003      	add	sp, #12
  400e10:	f85d fb04 	ldr.w	pc, [sp], #4
  400e14:	00401439 	.word	0x00401439

00400e18 <nRF24_setDataRate>:
{
  400e18:	b538      	push	{r3, r4, r5, lr}
  400e1a:	4605      	mov	r5, r0
	uint8_t setup = nRF24_readRegister(RF_SETUP);
  400e1c:	2006      	movs	r0, #6
  400e1e:	4b0c      	ldr	r3, [pc, #48]	; (400e50 <nRF24_setDataRate+0x38>)
  400e20:	4798      	blx	r3
	setup &= ~((1<<RF_DR));
  400e22:	f000 04f7 	and.w	r4, r0, #247	; 0xf7
	if (speed == RF24_2MBPS) {
  400e26:	2d01      	cmp	r5, #1
  400e28:	d00b      	beq.n	400e42 <nRF24_setDataRate+0x2a>
	nRF24_writeRegister(RF_SETUP, setup);
  400e2a:	4621      	mov	r1, r4
  400e2c:	2006      	movs	r0, #6
  400e2e:	4b09      	ldr	r3, [pc, #36]	; (400e54 <nRF24_setDataRate+0x3c>)
  400e30:	4798      	blx	r3
	if(nRF24_readRegister(RF_SETUP) == setup)
  400e32:	2006      	movs	r0, #6
  400e34:	4b06      	ldr	r3, [pc, #24]	; (400e50 <nRF24_setDataRate+0x38>)
  400e36:	4798      	blx	r3
}
  400e38:	4284      	cmp	r4, r0
  400e3a:	bf14      	ite	ne
  400e3c:	2000      	movne	r0, #0
  400e3e:	2001      	moveq	r0, #1
  400e40:	bd38      	pop	{r3, r4, r5, pc}
		setup |= (1<<RF_DR);
  400e42:	f044 0408 	orr.w	r4, r4, #8
		txDelay = 65;
  400e46:	2241      	movs	r2, #65	; 0x41
  400e48:	4b03      	ldr	r3, [pc, #12]	; (400e58 <nRF24_setDataRate+0x40>)
  400e4a:	601a      	str	r2, [r3, #0]
  400e4c:	e7ed      	b.n	400e2a <nRF24_setDataRate+0x12>
  400e4e:	bf00      	nop
  400e50:	00400d11 	.word	0x00400d11
  400e54:	00400d8d 	.word	0x00400d8d
  400e58:	204082e0 	.word	0x204082e0

00400e5c <getDataRate>:
{
  400e5c:	b508      	push	{r3, lr}
	uint8_t dr = nRF24_readRegister(RF_SETUP) & ((1<<RF_DR_LOW) | (1<<RF_DR_HIGH));
  400e5e:	2006      	movs	r0, #6
  400e60:	4b04      	ldr	r3, [pc, #16]	; (400e74 <getDataRate+0x18>)
  400e62:	4798      	blx	r3
	if (dr == (1<<RF_DR_HIGH)) {
  400e64:	f000 0028 	and.w	r0, r0, #40	; 0x28
}
  400e68:	2808      	cmp	r0, #8
  400e6a:	bf14      	ite	ne
  400e6c:	2000      	movne	r0, #0
  400e6e:	2001      	moveq	r0, #1
  400e70:	bd08      	pop	{r3, pc}
  400e72:	bf00      	nop
  400e74:	00400d11 	.word	0x00400d11

00400e78 <nRF24_setCRCLength>:
{
  400e78:	b510      	push	{r4, lr}
  400e7a:	4604      	mov	r4, r0
	uint8_t config = nRF24_readRegister(NRF_CONFIG) & ~((1<<CRCO) | (1<<EN_CRC));
  400e7c:	2000      	movs	r0, #0
  400e7e:	4b07      	ldr	r3, [pc, #28]	; (400e9c <nRF24_setCRCLength+0x24>)
  400e80:	4798      	blx	r3
  400e82:	f000 01f3 	and.w	r1, r0, #243	; 0xf3
	if (length == RF24_CRC_DISABLED){
  400e86:	b12c      	cbz	r4, 400e94 <nRF24_setCRCLength+0x1c>
	else if (length == RF24_CRC_8){
  400e88:	2c01      	cmp	r4, #1
		config |= (1<<EN_CRC);
  400e8a:	bf0c      	ite	eq
  400e8c:	f041 0108 	orreq.w	r1, r1, #8
		config |= (1<<CRCO);
  400e90:	f041 010c 	orrne.w	r1, r1, #12
	nRF24_writeRegister(NRF_CONFIG, config);
  400e94:	2000      	movs	r0, #0
  400e96:	4b02      	ldr	r3, [pc, #8]	; (400ea0 <nRF24_setCRCLength+0x28>)
  400e98:	4798      	blx	r3
  400e9a:	bd10      	pop	{r4, pc}
  400e9c:	00400d11 	.word	0x00400d11
  400ea0:	00400d8d 	.word	0x00400d8d

00400ea4 <getCRCLength>:
{
  400ea4:	b538      	push	{r3, r4, r5, lr}
	uint8_t config = nRF24_readRegister(NRF_CONFIG) & ((1<<CRCO) | (1<<EN_CRC));
  400ea6:	2000      	movs	r0, #0
  400ea8:	4d08      	ldr	r5, [pc, #32]	; (400ecc <getCRCLength+0x28>)
  400eaa:	47a8      	blx	r5
  400eac:	4604      	mov	r4, r0
	uint8_t AA = nRF24_readRegister(EN_AA);
  400eae:	2001      	movs	r0, #1
  400eb0:	47a8      	blx	r5
    if (config & (1<<EN_CRC) || AA) {
  400eb2:	f014 0f08 	tst.w	r4, #8
  400eb6:	d102      	bne.n	400ebe <getCRCLength+0x1a>
  400eb8:	b908      	cbnz	r0, 400ebe <getCRCLength+0x1a>
	rf24_crclength_e result = RF24_CRC_DISABLED;
  400eba:	2000      	movs	r0, #0
}
  400ebc:	bd38      	pop	{r3, r4, r5, pc}
	    if (config & (1<<CRCO)) {
  400ebe:	f004 0404 	and.w	r4, r4, #4
		    result = RF24_CRC_8;
  400ec2:	2c00      	cmp	r4, #0
  400ec4:	bf14      	ite	ne
  400ec6:	2002      	movne	r0, #2
  400ec8:	2001      	moveq	r0, #1
  400eca:	bd38      	pop	{r3, r4, r5, pc}
  400ecc:	00400d11 	.word	0x00400d11

00400ed0 <nRF24_setPALevel>:
{
  400ed0:	b510      	push	{r4, lr}
  400ed2:	4604      	mov	r4, r0
	uint8_t setup = nRF24_readRegister(RF_SETUP) & 0xF8;
  400ed4:	2006      	movs	r0, #6
  400ed6:	4b08      	ldr	r3, [pc, #32]	; (400ef8 <nRF24_setPALevel+0x28>)
  400ed8:	4798      	blx	r3
  400eda:	f000 01f8 	and.w	r1, r0, #248	; 0xf8
	if (level > 3) {
  400ede:	2c03      	cmp	r4, #3
  400ee0:	d808      	bhi.n	400ef4 <nRF24_setPALevel+0x24>
		level = (level << 1) + 1;
  400ee2:	0064      	lsls	r4, r4, #1
  400ee4:	3401      	adds	r4, #1
  400ee6:	f004 04ff 	and.w	r4, r4, #255	; 0xff
	nRF24_writeRegister(RF_SETUP, setup |= level);
  400eea:	4321      	orrs	r1, r4
  400eec:	2006      	movs	r0, #6
  400eee:	4b03      	ldr	r3, [pc, #12]	; (400efc <nRF24_setPALevel+0x2c>)
  400ef0:	4798      	blx	r3
  400ef2:	bd10      	pop	{r4, pc}
		level = (RF_PA_MAX << 1) + 1;
  400ef4:	2407      	movs	r4, #7
  400ef6:	e7f8      	b.n	400eea <nRF24_setPALevel+0x1a>
  400ef8:	00400d11 	.word	0x00400d11
  400efc:	00400d8d 	.word	0x00400d8d

00400f00 <nRF24_getPALevel>:
{
  400f00:	b508      	push	{r3, lr}
	return (nRF24_readRegister(RF_SETUP) & (1<<(RF_PWR_LOW) | (1<<RF_PWR_HIGH))) >> 1;
  400f02:	2006      	movs	r0, #6
  400f04:	4b02      	ldr	r3, [pc, #8]	; (400f10 <nRF24_getPALevel+0x10>)
  400f06:	4798      	blx	r3
}
  400f08:	f3c0 0041 	ubfx	r0, r0, #1, #2
  400f0c:	bd08      	pop	{r3, pc}
  400f0e:	bf00      	nop
  400f10:	00400d11 	.word	0x00400d11

00400f14 <printDetails>:
}

void printDetails(void)
{
  400f14:	b570      	push	{r4, r5, r6, lr}
  400f16:	b084      	sub	sp, #16
	printf("SPI Speed\t = %ld MHz\r\n",gs_ul_spi_clock/1000000);
  400f18:	4b31      	ldr	r3, [pc, #196]	; (400fe0 <printDetails+0xcc>)
  400f1a:	6819      	ldr	r1, [r3, #0]
  400f1c:	4b31      	ldr	r3, [pc, #196]	; (400fe4 <printDetails+0xd0>)
  400f1e:	fba3 3101 	umull	r3, r1, r3, r1
  400f22:	0c89      	lsrs	r1, r1, #18
  400f24:	4830      	ldr	r0, [pc, #192]	; (400fe8 <printDetails+0xd4>)
  400f26:	4d31      	ldr	r5, [pc, #196]	; (400fec <printDetails+0xd8>)
  400f28:	47a8      	blx	r5
	print_status(nRF24_getStatus());
  400f2a:	4b31      	ldr	r3, [pc, #196]	; (400ff0 <printDetails+0xdc>)
  400f2c:	4798      	blx	r3
  400f2e:	4601      	mov	r1, r0
	printf("STATUS\t\t = 0x%02x RX_DR=%x TX_DS=%x MAX_RT=%x RX_P_NO=%x TX_FULL=%x\r\n", status, (status & (1<<RX_DR)) ? 1 : 0, (status & (1<<TX_DS)) ? 1 : 0, (status & (1<<MAX_RT)) ? 1 : 0, (status & (1<<RX_P_NO)) ? 1 : 0, (status & (1<<TX_FULL)) ? 1 : 0);
  400f30:	f000 0301 	and.w	r3, r0, #1
  400f34:	9302      	str	r3, [sp, #8]
  400f36:	f3c0 0340 	ubfx	r3, r0, #1, #1
  400f3a:	9301      	str	r3, [sp, #4]
  400f3c:	f3c0 1300 	ubfx	r3, r0, #4, #1
  400f40:	9300      	str	r3, [sp, #0]
  400f42:	f3c0 1340 	ubfx	r3, r0, #5, #1
  400f46:	f3c0 1280 	ubfx	r2, r0, #6, #1
  400f4a:	482a      	ldr	r0, [pc, #168]	; (400ff4 <printDetails+0xe0>)
  400f4c:	47a8      	blx	r5
	print_address_register("RX_ADDR_P0-1", RX_ADDR_P0, 2);
  400f4e:	2202      	movs	r2, #2
  400f50:	210a      	movs	r1, #10
  400f52:	4829      	ldr	r0, [pc, #164]	; (400ff8 <printDetails+0xe4>)
  400f54:	4e29      	ldr	r6, [pc, #164]	; (400ffc <printDetails+0xe8>)
  400f56:	47b0      	blx	r6
	print_byte_register("RX_ADDR_P2-5", RX_ADDR_P2, 4);
  400f58:	2204      	movs	r2, #4
  400f5a:	210c      	movs	r1, #12
  400f5c:	4828      	ldr	r0, [pc, #160]	; (401000 <printDetails+0xec>)
  400f5e:	4c29      	ldr	r4, [pc, #164]	; (401004 <printDetails+0xf0>)
  400f60:	47a0      	blx	r4
	print_address_register("TX_ADDR\t", TX_ADDR, 1);
  400f62:	2201      	movs	r2, #1
  400f64:	2110      	movs	r1, #16
  400f66:	4828      	ldr	r0, [pc, #160]	; (401008 <printDetails+0xf4>)
  400f68:	47b0      	blx	r6

	print_byte_register("RX_PW_P0-5", RX_PW_P0, 6);
  400f6a:	2206      	movs	r2, #6
  400f6c:	2111      	movs	r1, #17
  400f6e:	4827      	ldr	r0, [pc, #156]	; (40100c <printDetails+0xf8>)
  400f70:	47a0      	blx	r4
	print_byte_register("SETUP_AW", SETUP_AW, 1);
  400f72:	2201      	movs	r2, #1
  400f74:	2103      	movs	r1, #3
  400f76:	4826      	ldr	r0, [pc, #152]	; (401010 <printDetails+0xfc>)
  400f78:	47a0      	blx	r4
	print_byte_register("EN_AA\t", EN_AA, 1);
  400f7a:	2201      	movs	r2, #1
  400f7c:	4611      	mov	r1, r2
  400f7e:	4825      	ldr	r0, [pc, #148]	; (401014 <printDetails+0x100>)
  400f80:	47a0      	blx	r4
	print_byte_register("EN_RXADDR", EN_RXADDR, 1);
  400f82:	2201      	movs	r2, #1
  400f84:	2102      	movs	r1, #2
  400f86:	4824      	ldr	r0, [pc, #144]	; (401018 <printDetails+0x104>)
  400f88:	47a0      	blx	r4
	print_byte_register("RF_CH\t", RF_CH, 1);
  400f8a:	2201      	movs	r2, #1
  400f8c:	2105      	movs	r1, #5
  400f8e:	4823      	ldr	r0, [pc, #140]	; (40101c <printDetails+0x108>)
  400f90:	47a0      	blx	r4
	print_byte_register("RF_SETUP", RF_SETUP, 1);
  400f92:	2201      	movs	r2, #1
  400f94:	2106      	movs	r1, #6
  400f96:	4822      	ldr	r0, [pc, #136]	; (401020 <printDetails+0x10c>)
  400f98:	47a0      	blx	r4
	print_byte_register("CONFIG\t", NRF_CONFIG, 1);
  400f9a:	2201      	movs	r2, #1
  400f9c:	2100      	movs	r1, #0
  400f9e:	4821      	ldr	r0, [pc, #132]	; (401024 <printDetails+0x110>)
  400fa0:	47a0      	blx	r4
	print_byte_register("DYNPD/FEATURE", DYNPD, 2);
  400fa2:	2202      	movs	r2, #2
  400fa4:	211c      	movs	r1, #28
  400fa6:	4820      	ldr	r0, [pc, #128]	; (401028 <printDetails+0x114>)
  400fa8:	47a0      	blx	r4
	
	printf("Data Rate\t = %s\r\n", rf24_datarate_e_str_P[getDataRate()]);
  400faa:	4b20      	ldr	r3, [pc, #128]	; (40102c <printDetails+0x118>)
  400fac:	4798      	blx	r3
  400fae:	4b20      	ldr	r3, [pc, #128]	; (401030 <printDetails+0x11c>)
  400fb0:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
  400fb4:	481f      	ldr	r0, [pc, #124]	; (401034 <printDetails+0x120>)
  400fb6:	47a8      	blx	r5
	printf("Model\t\t = %s\r\n", rf24_model_e_str_P[isPVariant()]);
  400fb8:	491f      	ldr	r1, [pc, #124]	; (401038 <printDetails+0x124>)
  400fba:	4820      	ldr	r0, [pc, #128]	; (40103c <printDetails+0x128>)
  400fbc:	47a8      	blx	r5
	printf("CRC Length\t = %s\r\n", rf24_crclength_e_str_P[getCRCLength()]);
  400fbe:	4b20      	ldr	r3, [pc, #128]	; (401040 <printDetails+0x12c>)
  400fc0:	4798      	blx	r3
  400fc2:	4b20      	ldr	r3, [pc, #128]	; (401044 <printDetails+0x130>)
  400fc4:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
  400fc8:	481f      	ldr	r0, [pc, #124]	; (401048 <printDetails+0x134>)
  400fca:	47a8      	blx	r5
	printf("PA Power\t = %s\r\n", rf24_pa_dbm_e_str_P[nRF24_getPALevel()]);
  400fcc:	4b1f      	ldr	r3, [pc, #124]	; (40104c <printDetails+0x138>)
  400fce:	4798      	blx	r3
  400fd0:	4b1f      	ldr	r3, [pc, #124]	; (401050 <printDetails+0x13c>)
  400fd2:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
  400fd6:	481f      	ldr	r0, [pc, #124]	; (401054 <printDetails+0x140>)
  400fd8:	47a8      	blx	r5
}
  400fda:	b004      	add	sp, #16
  400fdc:	bd70      	pop	{r4, r5, r6, pc}
  400fde:	bf00      	nop
  400fe0:	20400018 	.word	0x20400018
  400fe4:	431bde83 	.word	0x431bde83
  400fe8:	0040587c 	.word	0x0040587c
  400fec:	00402b09 	.word	0x00402b09
  400ff0:	00400df9 	.word	0x00400df9
  400ff4:	00405894 	.word	0x00405894
  400ff8:	004058dc 	.word	0x004058dc
  400ffc:	00400bf5 	.word	0x00400bf5
  401000:	004058ec 	.word	0x004058ec
  401004:	00400d39 	.word	0x00400d39
  401008:	004058fc 	.word	0x004058fc
  40100c:	00405908 	.word	0x00405908
  401010:	00405914 	.word	0x00405914
  401014:	00405920 	.word	0x00405920
  401018:	00405928 	.word	0x00405928
  40101c:	00405934 	.word	0x00405934
  401020:	0040593c 	.word	0x0040593c
  401024:	00405948 	.word	0x00405948
  401028:	00405950 	.word	0x00405950
  40102c:	00400e5d 	.word	0x00400e5d
  401030:	00405a04 	.word	0x00405a04
  401034:	00405960 	.word	0x00405960
  401038:	00405a10 	.word	0x00405a10
  40103c:	00405974 	.word	0x00405974
  401040:	00400ea5 	.word	0x00400ea5
  401044:	004059e0 	.word	0x004059e0
  401048:	00405984 	.word	0x00405984
  40104c:	00400f01 	.word	0x00400f01
  401050:	00405a3c 	.word	0x00405a3c
  401054:	00405998 	.word	0x00405998

00401058 <nRF24_setAddressWidth>:
 * 
 * \param width address width
 *
 */
void nRF24_setAddressWidth(uint8_t width)
{
  401058:	b510      	push	{r4, lr}
	if (width -= 2){
  40105a:	3802      	subs	r0, #2
  40105c:	f010 00ff 	ands.w	r0, r0, #255	; 0xff
  401060:	d107      	bne.n	401072 <nRF24_setAddressWidth+0x1a>
		nRF24_writeRegister(SETUP_AW, width % 4);
		addr_width = (width % 4) + 2;
		} else {
		nRF24_writeRegister(SETUP_AW, 0);
  401062:	2100      	movs	r1, #0
  401064:	2003      	movs	r0, #3
  401066:	4b08      	ldr	r3, [pc, #32]	; (401088 <nRF24_setAddressWidth+0x30>)
  401068:	4798      	blx	r3
		addr_width = 2;
  40106a:	2202      	movs	r2, #2
  40106c:	4b07      	ldr	r3, [pc, #28]	; (40108c <nRF24_setAddressWidth+0x34>)
  40106e:	701a      	strb	r2, [r3, #0]
  401070:	bd10      	pop	{r4, pc}
		nRF24_writeRegister(SETUP_AW, width % 4);
  401072:	f000 0403 	and.w	r4, r0, #3
  401076:	4621      	mov	r1, r4
  401078:	2003      	movs	r0, #3
  40107a:	4b03      	ldr	r3, [pc, #12]	; (401088 <nRF24_setAddressWidth+0x30>)
  40107c:	4798      	blx	r3
		addr_width = (width % 4) + 2;
  40107e:	1ca0      	adds	r0, r4, #2
  401080:	4b02      	ldr	r3, [pc, #8]	; (40108c <nRF24_setAddressWidth+0x34>)
  401082:	7018      	strb	r0, [r3, #0]
  401084:	bd10      	pop	{r4, pc}
  401086:	bf00      	nop
  401088:	00400d8d 	.word	0x00400d8d
  40108c:	204082d4 	.word	0x204082d4

00401090 <toggle_features>:
/**
 * \brief toggels ACK features
 *
 */
void toggle_features(void)
{
  401090:	b500      	push	{lr}
  401092:	b083      	sub	sp, #12
	uint8_t config[2] = {ACTIVATE, 0x73};
  401094:	4b05      	ldr	r3, [pc, #20]	; (4010ac <toggle_features+0x1c>)
  401096:	881b      	ldrh	r3, [r3, #0]
  401098:	a802      	add	r0, sp, #8
  40109a:	f820 3d04 	strh.w	r3, [r0, #-4]!
	
	spi_master_transfer(config, sizeof(config));
  40109e:	2102      	movs	r1, #2
  4010a0:	4b03      	ldr	r3, [pc, #12]	; (4010b0 <toggle_features+0x20>)
  4010a2:	4798      	blx	r3
}
  4010a4:	b003      	add	sp, #12
  4010a6:	f85d fb04 	ldr.w	pc, [sp], #4
  4010aa:	bf00      	nop
  4010ac:	00405878 	.word	0x00405878
  4010b0:	00401439 	.word	0x00401439

004010b4 <nRF24_setChannel>:
 * 
 * \param channel ferquency channel used
 *
 */
void nRF24_setChannel(uint8_t channel)
{
  4010b4:	b508      	push	{r3, lr}
	const uint8_t max_channel = 125;
	if (channel > max_channel)
  4010b6:	287d      	cmp	r0, #125	; 0x7d
		nRF24_writeRegister(RF_CH, max_channel);
  4010b8:	bf8c      	ite	hi
  4010ba:	217d      	movhi	r1, #125	; 0x7d
	else
		nRF24_writeRegister(RF_CH, channel);
  4010bc:	4601      	movls	r1, r0
  4010be:	2005      	movs	r0, #5
  4010c0:	4b01      	ldr	r3, [pc, #4]	; (4010c8 <nRF24_setChannel+0x14>)
  4010c2:	4798      	blx	r3
  4010c4:	bd08      	pop	{r3, pc}
  4010c6:	bf00      	nop
  4010c8:	00400d8d 	.word	0x00400d8d

004010cc <nRF24_powerUp>:
/**
 * \brief power up the internal logic of the nRF24 chip
 * 
 */
void nRF24_powerUp(void)
{
  4010cc:	b508      	push	{r3, lr}
	uint8_t config = nRF24_readRegister(NRF_CONFIG);
  4010ce:	2000      	movs	r0, #0
  4010d0:	4b07      	ldr	r3, [pc, #28]	; (4010f0 <nRF24_powerUp+0x24>)
  4010d2:	4798      	blx	r3
	
	if (!(config & (1<<PWR_UP))){
  4010d4:	f010 0f02 	tst.w	r0, #2
  4010d8:	d000      	beq.n	4010dc <nRF24_powerUp+0x10>
  4010da:	bd08      	pop	{r3, pc}
		nRF24_writeRegister(NRF_CONFIG, config | (1<<PWR_UP));
  4010dc:	f040 0102 	orr.w	r1, r0, #2
  4010e0:	b2c9      	uxtb	r1, r1
  4010e2:	2000      	movs	r0, #0
  4010e4:	4b03      	ldr	r3, [pc, #12]	; (4010f4 <nRF24_powerUp+0x28>)
  4010e6:	4798      	blx	r3
		delay_ms(5);
  4010e8:	4803      	ldr	r0, [pc, #12]	; (4010f8 <nRF24_powerUp+0x2c>)
  4010ea:	4b04      	ldr	r3, [pc, #16]	; (4010fc <nRF24_powerUp+0x30>)
  4010ec:	4798      	blx	r3
	}
}
  4010ee:	e7f4      	b.n	4010da <nRF24_powerUp+0xe>
  4010f0:	00400d11 	.word	0x00400d11
  4010f4:	00400d8d 	.word	0x00400d8d
  4010f8:	0003dbc2 	.word	0x0003dbc2
  4010fc:	20400001 	.word	0x20400001

00401100 <nRF24_stopListening>:
/**
 * \brief use the nRF24 module as transmitter
 *
 */
void nRF24_stopListening(void)
{
  401100:	b538      	push	{r3, r4, r5, lr}
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  401102:	f44f 7200 	mov.w	r2, #512	; 0x200
  401106:	4b21      	ldr	r3, [pc, #132]	; (40118c <nRF24_stopListening+0x8c>)
  401108:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(CE, 0);
	
	delay_us(txDelay);
  40110a:	4b21      	ldr	r3, [pc, #132]	; (401190 <nRF24_stopListening+0x90>)
  40110c:	6819      	ldr	r1, [r3, #0]
  40110e:	2900      	cmp	r1, #0
  401110:	d034      	beq.n	40117c <nRF24_stopListening+0x7c>
  401112:	4a20      	ldr	r2, [pc, #128]	; (401194 <nRF24_stopListening+0x94>)
  401114:	2300      	movs	r3, #0
  401116:	4c20      	ldr	r4, [pc, #128]	; (401198 <nRF24_stopListening+0x98>)
  401118:	2500      	movs	r5, #0
  40111a:	4820      	ldr	r0, [pc, #128]	; (40119c <nRF24_stopListening+0x9c>)
  40111c:	fbe0 4501 	umlal	r4, r5, r0, r1
  401120:	4620      	mov	r0, r4
  401122:	4629      	mov	r1, r5
  401124:	4c1e      	ldr	r4, [pc, #120]	; (4011a0 <nRF24_stopListening+0xa0>)
  401126:	47a0      	blx	r4
  401128:	4b1e      	ldr	r3, [pc, #120]	; (4011a4 <nRF24_stopListening+0xa4>)
  40112a:	4798      	blx	r3
	if (nRF24_readRegister(FEATURE) & 1<<(EN_ACK_PAY))
  40112c:	201d      	movs	r0, #29
  40112e:	4b1e      	ldr	r3, [pc, #120]	; (4011a8 <nRF24_stopListening+0xa8>)
  401130:	4798      	blx	r3
  401132:	f010 0f02 	tst.w	r0, #2
  401136:	d011      	beq.n	40115c <nRF24_stopListening+0x5c>
	{
		delay_us(txDelay);
  401138:	4b15      	ldr	r3, [pc, #84]	; (401190 <nRF24_stopListening+0x90>)
  40113a:	6819      	ldr	r1, [r3, #0]
  40113c:	b311      	cbz	r1, 401184 <nRF24_stopListening+0x84>
  40113e:	4a15      	ldr	r2, [pc, #84]	; (401194 <nRF24_stopListening+0x94>)
  401140:	2300      	movs	r3, #0
  401142:	4c15      	ldr	r4, [pc, #84]	; (401198 <nRF24_stopListening+0x98>)
  401144:	2500      	movs	r5, #0
  401146:	4815      	ldr	r0, [pc, #84]	; (40119c <nRF24_stopListening+0x9c>)
  401148:	fbe0 4501 	umlal	r4, r5, r0, r1
  40114c:	4620      	mov	r0, r4
  40114e:	4629      	mov	r1, r5
  401150:	4c13      	ldr	r4, [pc, #76]	; (4011a0 <nRF24_stopListening+0xa0>)
  401152:	47a0      	blx	r4
  401154:	4b13      	ldr	r3, [pc, #76]	; (4011a4 <nRF24_stopListening+0xa4>)
  401156:	4798      	blx	r3
		nRF24_FlushTx();
  401158:	4b14      	ldr	r3, [pc, #80]	; (4011ac <nRF24_stopListening+0xac>)
  40115a:	4798      	blx	r3
	}
	nRF24_writeRegister(NRF_CONFIG, (nRF24_readRegister(NRF_CONFIG)) & ~(1<<PRIM_RX));
  40115c:	2000      	movs	r0, #0
  40115e:	4d12      	ldr	r5, [pc, #72]	; (4011a8 <nRF24_stopListening+0xa8>)
  401160:	47a8      	blx	r5
  401162:	f000 01fe 	and.w	r1, r0, #254	; 0xfe
  401166:	2000      	movs	r0, #0
  401168:	4c11      	ldr	r4, [pc, #68]	; (4011b0 <nRF24_stopListening+0xb0>)
  40116a:	47a0      	blx	r4
	nRF24_writeRegister(EN_RXADDR, nRF24_readRegister(EN_RXADDR) | (1<< pipe_enable_s[0])); 
  40116c:	2002      	movs	r0, #2
  40116e:	47a8      	blx	r5
  401170:	f040 0101 	orr.w	r1, r0, #1
  401174:	b2c9      	uxtb	r1, r1
  401176:	2002      	movs	r0, #2
  401178:	47a0      	blx	r4
  40117a:	bd38      	pop	{r3, r4, r5, pc}
	delay_us(txDelay);
  40117c:	2033      	movs	r0, #51	; 0x33
  40117e:	4b09      	ldr	r3, [pc, #36]	; (4011a4 <nRF24_stopListening+0xa4>)
  401180:	4798      	blx	r3
  401182:	e7d3      	b.n	40112c <nRF24_stopListening+0x2c>
		delay_us(txDelay);
  401184:	2033      	movs	r0, #51	; 0x33
  401186:	4b07      	ldr	r3, [pc, #28]	; (4011a4 <nRF24_stopListening+0xa4>)
  401188:	4798      	blx	r3
  40118a:	e7e5      	b.n	401158 <nRF24_stopListening+0x58>
  40118c:	400e1200 	.word	0x400e1200
  401190:	204082e0 	.word	0x204082e0
  401194:	005a83e0 	.word	0x005a83e0
  401198:	005a83df 	.word	0x005a83df
  40119c:	11e1a300 	.word	0x11e1a300
  4011a0:	004027a9 	.word	0x004027a9
  4011a4:	20400001 	.word	0x20400001
  4011a8:	00400d11 	.word	0x00400d11
  4011ac:	00400dd9 	.word	0x00400dd9
  4011b0:	00400d8d 	.word	0x00400d8d

004011b4 <nRF24_begin>:
 * address width: 32 bit / 4 bytes
 * 
 * \return 1 if nRF24 module reacts to data
 */
bool nRF24_begin(void)
{
  4011b4:	b538      	push	{r3, r4, r5, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4011b6:	4b1a      	ldr	r3, [pc, #104]	; (401220 <nRF24_begin+0x6c>)
  4011b8:	f44f 7200 	mov.w	r2, #512	; 0x200
  4011bc:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4011be:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4011c2:	635a      	str	r2, [r3, #52]	; 0x34
	uint8_t setup = 0;
	ioport_set_pin_dir(CE, IOPORT_DIR_OUTPUT);//ce_pin PC9
	ioport_set_pin_level(CE, 0);
	
	nRF24_writeRegister(NRF_CONFIG, 0x0C);
  4011c4:	210c      	movs	r1, #12
  4011c6:	2000      	movs	r0, #0
  4011c8:	4c16      	ldr	r4, [pc, #88]	; (401224 <nRF24_begin+0x70>)
  4011ca:	47a0      	blx	r4
	nRF24_writeRegister(SETUP_RETR, (delay & 0xF) << ARD | (count & 0xF) <<ARC );
  4011cc:	215f      	movs	r1, #95	; 0x5f
  4011ce:	2004      	movs	r0, #4
  4011d0:	47a0      	blx	r4
	nRF24_setRetries(5, 15);
	
	nRF24_setDataRate(RF24_1MBPS);
  4011d2:	2000      	movs	r0, #0
  4011d4:	4b14      	ldr	r3, [pc, #80]	; (401228 <nRF24_begin+0x74>)
  4011d6:	4798      	blx	r3
	nRF24_setCRCLength(RF24_CRC_16);
  4011d8:	2002      	movs	r0, #2
  4011da:	4b14      	ldr	r3, [pc, #80]	; (40122c <nRF24_begin+0x78>)
  4011dc:	4798      	blx	r3
	toggle_features();
  4011de:	4b14      	ldr	r3, [pc, #80]	; (401230 <nRF24_begin+0x7c>)
  4011e0:	4798      	blx	r3
	
	//reset current status
	nRF24_writeRegister(NRF_STATUS, (1<<RX_DR) | (1<<TX_DS) | (1<<MAX_RT));
  4011e2:	2170      	movs	r1, #112	; 0x70
  4011e4:	2007      	movs	r0, #7
  4011e6:	47a0      	blx	r4
	
	nRF24_setChannel(76);
  4011e8:	204c      	movs	r0, #76	; 0x4c
  4011ea:	4b12      	ldr	r3, [pc, #72]	; (401234 <nRF24_begin+0x80>)
  4011ec:	4798      	blx	r3
	nRF24_setAddressWidth(ADDR_4bytes);
  4011ee:	2004      	movs	r0, #4
  4011f0:	4b11      	ldr	r3, [pc, #68]	; (401238 <nRF24_begin+0x84>)
  4011f2:	4798      	blx	r3
	
	nRF24_FlushRx();
  4011f4:	4b11      	ldr	r3, [pc, #68]	; (40123c <nRF24_begin+0x88>)
  4011f6:	4798      	blx	r3
	nRF24_FlushTx();
  4011f8:	4b11      	ldr	r3, [pc, #68]	; (401240 <nRF24_begin+0x8c>)
  4011fa:	4798      	blx	r3
	
	nRF24_powerUp();
  4011fc:	4b11      	ldr	r3, [pc, #68]	; (401244 <nRF24_begin+0x90>)
  4011fe:	4798      	blx	r3
	
	nRF24_writeRegister(NRF_CONFIG, (nRF24_readRegister(NRF_CONFIG)) & ~(1<<PRIM_RX));
  401200:	2000      	movs	r0, #0
  401202:	4d11      	ldr	r5, [pc, #68]	; (401248 <nRF24_begin+0x94>)
  401204:	47a8      	blx	r5
  401206:	f000 01fe 	and.w	r1, r0, #254	; 0xfe
  40120a:	2000      	movs	r0, #0
  40120c:	47a0      	blx	r4
	setup = nRF24_readRegister(RF_SETUP);
  40120e:	2006      	movs	r0, #6
  401210:	47a8      	blx	r5
	
	return (setup != 0 && setup != 0xFF);
  401212:	3801      	subs	r0, #1
  401214:	b2c0      	uxtb	r0, r0
}
  401216:	28fd      	cmp	r0, #253	; 0xfd
  401218:	bf8c      	ite	hi
  40121a:	2000      	movhi	r0, #0
  40121c:	2001      	movls	r0, #1
  40121e:	bd38      	pop	{r3, r4, r5, pc}
  401220:	400e1200 	.word	0x400e1200
  401224:	00400d8d 	.word	0x00400d8d
  401228:	00400e19 	.word	0x00400e19
  40122c:	00400e79 	.word	0x00400e79
  401230:	00401091 	.word	0x00401091
  401234:	004010b5 	.word	0x004010b5
  401238:	00401059 	.word	0x00401059
  40123c:	00400db9 	.word	0x00400db9
  401240:	00400dd9 	.word	0x00400dd9
  401244:	004010cd 	.word	0x004010cd
  401248:	00400d11 	.word	0x00400d11

0040124c <nRF24_openWritingPipe>:
 * 
 * \param address address of the receiving module
 *
 */
void nRF24_openWritingPipe(uint64_t address)
{
  40124c:	b570      	push	{r4, r5, r6, lr}
  40124e:	b082      	sub	sp, #8
  401250:	ac02      	add	r4, sp, #8
  401252:	e964 0102 	strd	r0, r1, [r4, #-8]!
	writeRegister(RX_ADDR_P0, (uint8_t *)(&address), addr_width);
  401256:	4e08      	ldr	r6, [pc, #32]	; (401278 <nRF24_openWritingPipe+0x2c>)
  401258:	7832      	ldrb	r2, [r6, #0]
  40125a:	4621      	mov	r1, r4
  40125c:	200a      	movs	r0, #10
  40125e:	4d07      	ldr	r5, [pc, #28]	; (40127c <nRF24_openWritingPipe+0x30>)
  401260:	47a8      	blx	r5
	writeRegister(TX_ADDR, (uint8_t *)(&address), addr_width);
  401262:	7832      	ldrb	r2, [r6, #0]
  401264:	4621      	mov	r1, r4
  401266:	2010      	movs	r0, #16
  401268:	47a8      	blx	r5
	
	nRF24_writeRegister(RX_PW_P0, payload_size);
  40126a:	4b05      	ldr	r3, [pc, #20]	; (401280 <nRF24_openWritingPipe+0x34>)
  40126c:	7819      	ldrb	r1, [r3, #0]
  40126e:	2011      	movs	r0, #17
  401270:	4b04      	ldr	r3, [pc, #16]	; (401284 <nRF24_openWritingPipe+0x38>)
  401272:	4798      	blx	r3
}
  401274:	b002      	add	sp, #8
  401276:	bd70      	pop	{r4, r5, r6, pc}
  401278:	204082d4 	.word	0x204082d4
  40127c:	00400cc5 	.word	0x00400cc5
  401280:	20400016 	.word	0x20400016
  401284:	00400d8d 	.word	0x00400d8d

00401288 <nRF24_write>:
 * \param buf: pointer to the data buffer
 * \param len: length of the payload to be written
 *
 */
bool nRF24_write(const void* buf, uint8_t len)
{
  401288:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40128a:	af00      	add	r7, sp, #0
{
  40128c:	466e      	mov	r6, sp
	uint8_t blanklen = dynamic_payloads_enabled ? 0 : payload_size - data_len;
  40128e:	4b24      	ldr	r3, [pc, #144]	; (401320 <nRF24_write+0x98>)
  401290:	781b      	ldrb	r3, [r3, #0]
  401292:	bb53      	cbnz	r3, 4012ea <nRF24_write+0x62>
  401294:	4b23      	ldr	r3, [pc, #140]	; (401324 <nRF24_write+0x9c>)
  401296:	781b      	ldrb	r3, [r3, #0]
  401298:	1a5b      	subs	r3, r3, r1
  40129a:	b2db      	uxtb	r3, r3
	uint8_t size = data_len + blanklen + 1;
  40129c:	3101      	adds	r1, #1
  40129e:	4419      	add	r1, r3
  4012a0:	b2c9      	uxtb	r1, r1
	uint8_t s_buff[size];
  4012a2:	1dcb      	adds	r3, r1, #7
  4012a4:	f023 0307 	bic.w	r3, r3, #7
  4012a8:	ebad 0d03 	sub.w	sp, sp, r3
  4012ac:	46ee      	mov	lr, sp
	s_buff[0] = writeType;
  4012ae:	23a0      	movs	r3, #160	; 0xa0
  4012b0:	f88d 3000 	strb.w	r3, [sp]
	for (uint8_t i = 1; i< size; i++)
  4012b4:	2901      	cmp	r1, #1
  4012b6:	d90b      	bls.n	4012d0 <nRF24_write+0x48>
  4012b8:	1e43      	subs	r3, r0, #1
  4012ba:	f10d 0201 	add.w	r2, sp, #1
  4012be:	1e8d      	subs	r5, r1, #2
  4012c0:	fa50 f585 	uxtab	r5, r0, r5
		s_buff[i] = current[i-1];
  4012c4:	f813 4f01 	ldrb.w	r4, [r3, #1]!
  4012c8:	f802 4b01 	strb.w	r4, [r2], #1
	for (uint8_t i = 1; i< size; i++)
  4012cc:	42ab      	cmp	r3, r5
  4012ce:	d1f9      	bne.n	4012c4 <nRF24_write+0x3c>
	spi_master_transfer(s_buff, size);
  4012d0:	4670      	mov	r0, lr
  4012d2:	4b15      	ldr	r3, [pc, #84]	; (401328 <nRF24_write+0xa0>)
  4012d4:	4798      	blx	r3
  4012d6:	46b5      	mov	sp, r6
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4012d8:	f44f 7200 	mov.w	r2, #512	; 0x200
  4012dc:	4b13      	ldr	r3, [pc, #76]	; (40132c <nRF24_write+0xa4>)
  4012de:	631a      	str	r2, [r3, #48]	; 0x30
	while(!(nRF24_getStatus() & ((1<<TX_DS) | (1<<MAX_RT))))
  4012e0:	4c13      	ldr	r4, [pc, #76]	; (401330 <nRF24_write+0xa8>)
		delay_us(100);
  4012e2:	f241 36c2 	movw	r6, #5058	; 0x13c2
  4012e6:	4d13      	ldr	r5, [pc, #76]	; (401334 <nRF24_write+0xac>)
  4012e8:	e003      	b.n	4012f2 <nRF24_write+0x6a>
	uint8_t blanklen = dynamic_payloads_enabled ? 0 : payload_size - data_len;
  4012ea:	2300      	movs	r3, #0
  4012ec:	e7d6      	b.n	40129c <nRF24_write+0x14>
		delay_us(100);
  4012ee:	4630      	mov	r0, r6
  4012f0:	47a8      	blx	r5
	while(!(nRF24_getStatus() & ((1<<TX_DS) | (1<<MAX_RT))))
  4012f2:	47a0      	blx	r4
  4012f4:	f010 0f30 	tst.w	r0, #48	; 0x30
  4012f8:	d0f9      	beq.n	4012ee <nRF24_write+0x66>
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4012fa:	f44f 7200 	mov.w	r2, #512	; 0x200
  4012fe:	4b0b      	ldr	r3, [pc, #44]	; (40132c <nRF24_write+0xa4>)
  401300:	635a      	str	r2, [r3, #52]	; 0x34
	uint8_t status = nRF24_writeRegister(NRF_STATUS, (1<<RX_DR) | (1<<TX_DS) | (1<<MAX_RT));
  401302:	2170      	movs	r1, #112	; 0x70
  401304:	2007      	movs	r0, #7
  401306:	4b0c      	ldr	r3, [pc, #48]	; (401338 <nRF24_write+0xb0>)
  401308:	4798      	blx	r3
	if(status & (1<<MAX_RT)){
  40130a:	f010 0f10 	tst.w	r0, #16
  40130e:	d102      	bne.n	401316 <nRF24_write+0x8e>
	return 1;
  401310:	2001      	movs	r0, #1
	return nRFwrite(buf, len, 0);
  401312:	46bd      	mov	sp, r7
  401314:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		nRF24_FlushTx();
  401316:	4b09      	ldr	r3, [pc, #36]	; (40133c <nRF24_write+0xb4>)
  401318:	4798      	blx	r3
		return 0;
  40131a:	2000      	movs	r0, #0
  40131c:	e7f9      	b.n	401312 <nRF24_write+0x8a>
  40131e:	bf00      	nop
  401320:	20407224 	.word	0x20407224
  401324:	20400016 	.word	0x20400016
  401328:	00401439 	.word	0x00401439
  40132c:	400e1200 	.word	0x400e1200
  401330:	00400df9 	.word	0x00400df9
  401334:	20400001 	.word	0x20400001
  401338:	00400d8d 	.word	0x00400d8d
  40133c:	00400dd9 	.word	0x00400dd9

00401340 <spi_master_initialize>:

/**
 * \brief Initialize SPI as master.
 */
void spi_master_initialize(void)
{	
  401340:	b570      	push	{r4, r5, r6, lr}
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  401342:	4b2c      	ldr	r3, [pc, #176]	; (4013f4 <spi_master_initialize+0xb4>)
  401344:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  401348:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40134c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  401350:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  401354:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  401358:	2500      	movs	r5, #0
  40135a:	f883 5315 	strb.w	r5, [r3, #789]	; 0x315
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40135e:	601a      	str	r2, [r3, #0]
	printf("Setting SPI clock #%lu ... \n\r", (unsigned long)gs_ul_spi_clock);
  401360:	4e25      	ldr	r6, [pc, #148]	; (4013f8 <spi_master_initialize+0xb8>)
  401362:	6831      	ldr	r1, [r6, #0]
  401364:	4825      	ldr	r0, [pc, #148]	; (4013fc <spi_master_initialize+0xbc>)
  401366:	4b26      	ldr	r3, [pc, #152]	; (401400 <spi_master_initialize+0xc0>)
  401368:	4798      	blx	r3
	spi_set_clock_configuration(gs_ul_spi_clock);
	puts("-I- Initialize SPI as master\r");
  40136a:	4826      	ldr	r0, [pc, #152]	; (401404 <spi_master_initialize+0xc4>)
  40136c:	4b26      	ldr	r3, [pc, #152]	; (401408 <spi_master_initialize+0xc8>)
  40136e:	4798      	blx	r3
	
	/* Configure an SPI peripheral. */
	spi_enable_clock(SPI0);
  401370:	4c26      	ldr	r4, [pc, #152]	; (40140c <spi_master_initialize+0xcc>)
  401372:	4620      	mov	r0, r4
  401374:	4b26      	ldr	r3, [pc, #152]	; (401410 <spi_master_initialize+0xd0>)
  401376:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  401378:	2302      	movs	r3, #2
  40137a:	6023      	str	r3, [r4, #0]
	p_spi->SPI_CR = SPI_CR_SWRST;
  40137c:	2380      	movs	r3, #128	; 0x80
  40137e:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_lastxfer(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_LASTXFER;
  401380:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  401384:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_master_mode(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MSTR;
  401386:	6863      	ldr	r3, [r4, #4]
  401388:	f043 0301 	orr.w	r3, r3, #1
  40138c:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  40138e:	6863      	ldr	r3, [r4, #4]
  401390:	f043 0310 	orr.w	r3, r3, #16
  401394:	6063      	str	r3, [r4, #4]
	spi_disable(SPI0);
	spi_reset(SPI0);
	spi_set_lastxfer(SPI0);
	spi_set_master_mode(SPI0);
	spi_disable_mode_fault_detect(SPI0);
	spi_set_peripheral_chip_select_value(SPI0, SPI_CHIP_PCS);
  401396:	210d      	movs	r1, #13
  401398:	4620      	mov	r0, r4
  40139a:	4b1e      	ldr	r3, [pc, #120]	; (401414 <spi_master_initialize+0xd4>)
  40139c:	4798      	blx	r3
	spi_configure_cs_behavior(SPI0, SPI_CHIP_SEL, SPI_CS_RISE_NO_TX);
  40139e:	462a      	mov	r2, r5
  4013a0:	2101      	movs	r1, #1
  4013a2:	4620      	mov	r0, r4
  4013a4:	4b1c      	ldr	r3, [pc, #112]	; (401418 <spi_master_initialize+0xd8>)
  4013a6:	4798      	blx	r3
	spi_set_delay_between_chip_select(SPI0, SPI_DLYBCS);
  4013a8:	2105      	movs	r1, #5
  4013aa:	4620      	mov	r0, r4
  4013ac:	4b1b      	ldr	r3, [pc, #108]	; (40141c <spi_master_initialize+0xdc>)
  4013ae:	4798      	blx	r3
	spi_set_clock_polarity(SPI0, SPI_CHIP_SEL, SPI_CLK_POLARITY);
  4013b0:	462a      	mov	r2, r5
  4013b2:	2101      	movs	r1, #1
  4013b4:	4620      	mov	r0, r4
  4013b6:	4b1a      	ldr	r3, [pc, #104]	; (401420 <spi_master_initialize+0xe0>)
  4013b8:	4798      	blx	r3
	spi_set_clock_phase(SPI0, SPI_CHIP_SEL, SPI_CLK_PHASE);
  4013ba:	2201      	movs	r2, #1
  4013bc:	4611      	mov	r1, r2
  4013be:	4620      	mov	r0, r4
  4013c0:	4b18      	ldr	r3, [pc, #96]	; (401424 <spi_master_initialize+0xe4>)
  4013c2:	4798      	blx	r3
	spi_set_bits_per_transfer(SPI0, SPI_CHIP_SEL, SPI_CSR_BITS_8_BIT);
  4013c4:	462a      	mov	r2, r5
  4013c6:	2101      	movs	r1, #1
  4013c8:	4620      	mov	r0, r4
  4013ca:	4b17      	ldr	r3, [pc, #92]	; (401428 <spi_master_initialize+0xe8>)
  4013cc:	4798      	blx	r3
	spi_set_baudrate_div(SPI0, SPI_CHIP_SEL, (sysclk_get_peripheral_hz() / gs_ul_spi_clock));
  4013ce:	6833      	ldr	r3, [r6, #0]
  4013d0:	4a16      	ldr	r2, [pc, #88]	; (40142c <spi_master_initialize+0xec>)
  4013d2:	fbb2 f2f3 	udiv	r2, r2, r3
  4013d6:	b2d2      	uxtb	r2, r2
  4013d8:	2101      	movs	r1, #1
  4013da:	4620      	mov	r0, r4
  4013dc:	4b14      	ldr	r3, [pc, #80]	; (401430 <spi_master_initialize+0xf0>)
  4013de:	4798      	blx	r3
	spi_set_transfer_delay(SPI0, SPI_CHIP_SEL, SPI_DLYBS, SPI_DLYBCT);
  4013e0:	2308      	movs	r3, #8
  4013e2:	2220      	movs	r2, #32
  4013e4:	2101      	movs	r1, #1
  4013e6:	4620      	mov	r0, r4
  4013e8:	4d12      	ldr	r5, [pc, #72]	; (401434 <spi_master_initialize+0xf4>)
  4013ea:	47a8      	blx	r5
	p_spi->SPI_CR = SPI_CR_SPIEN;
  4013ec:	2301      	movs	r3, #1
  4013ee:	6023      	str	r3, [r4, #0]
  4013f0:	bd70      	pop	{r4, r5, r6, pc}
  4013f2:	bf00      	nop
  4013f4:	e000e100 	.word	0xe000e100
  4013f8:	20400018 	.word	0x20400018
  4013fc:	00405a4c 	.word	0x00405a4c
  401400:	00402b09 	.word	0x00402b09
  401404:	00405a6c 	.word	0x00405a6c
  401408:	00402dfd 	.word	0x00402dfd
  40140c:	40008000 	.word	0x40008000
  401410:	0040078d 	.word	0x0040078d
  401414:	004007b9 	.word	0x004007b9
  401418:	00400881 	.word	0x00400881
  40141c:	004007cf 	.word	0x004007cf
  401420:	00400845 	.word	0x00400845
  401424:	00400863 	.word	0x00400863
  401428:	004008c7 	.word	0x004008c7
  40142c:	08f0d180 	.word	0x08f0d180
  401430:	004008db 	.word	0x004008db
  401434:	00400903 	.word	0x00400903

00401438 <spi_master_transfer>:
 * \param size Size of the buffer.
 * 
 * \brief after function p_buf will contain the received SPI data  
 */
void spi_master_transfer(void *p_buf, uint32_t size)
{
  401438:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40143c:	b083      	sub	sp, #12

	uint8_t *p_buffer;

	p_buffer = p_buf;

	for (i = 0; i < size; i++) {
  40143e:	b1d9      	cbz	r1, 401478 <spi_master_transfer+0x40>
  401440:	4688      	mov	r8, r1
  401442:	4605      	mov	r5, r0
  401444:	4480      	add	r8, r0
		if (i != size)
		{
			spi_write(SPI0, p_buffer[i], 0, 0);
  401446:	4c0f      	ldr	r4, [pc, #60]	; (401484 <spi_master_transfer+0x4c>)
  401448:	f8df 9048 	ldr.w	r9, [pc, #72]	; 401494 <spi_master_transfer+0x5c>
		{
			spi_write(SPI0, p_buffer[i], 0, 1);
		}
		/* Wait transfer done. */
		while ((spi_read_status(SPI0) & SPI_SR_RDRF) == 0);
		spi_read(SPI0, &data, &uc_pcs);
  40144c:	4e0e      	ldr	r6, [pc, #56]	; (401488 <spi_master_transfer+0x50>)
  40144e:	462f      	mov	r7, r5
			spi_write(SPI0, p_buffer[i], 0, 0);
  401450:	2300      	movs	r3, #0
  401452:	461a      	mov	r2, r3
  401454:	7829      	ldrb	r1, [r5, #0]
  401456:	4620      	mov	r0, r4
  401458:	47c8      	blx	r9
 *
 * \return SPI status register value.
 */
static inline uint32_t spi_read_status(Spi *p_spi)
{
	return p_spi->SPI_SR;
  40145a:	6923      	ldr	r3, [r4, #16]
		while ((spi_read_status(SPI0) & SPI_SR_RDRF) == 0);
  40145c:	f013 0f01 	tst.w	r3, #1
  401460:	d0fb      	beq.n	40145a <spi_master_transfer+0x22>
		spi_read(SPI0, &data, &uc_pcs);
  401462:	f10d 0207 	add.w	r2, sp, #7
  401466:	4631      	mov	r1, r6
  401468:	4620      	mov	r0, r4
  40146a:	4b08      	ldr	r3, [pc, #32]	; (40148c <spi_master_transfer+0x54>)
  40146c:	4798      	blx	r3
		p_buffer[i] = data;
  40146e:	8833      	ldrh	r3, [r6, #0]
  401470:	703b      	strb	r3, [r7, #0]
  401472:	3501      	adds	r5, #1
	for (i = 0; i < size; i++) {
  401474:	4545      	cmp	r5, r8
  401476:	d1ea      	bne.n	40144e <spi_master_transfer+0x16>
	}
	delay_us(2);
  401478:	2066      	movs	r0, #102	; 0x66
  40147a:	4b05      	ldr	r3, [pc, #20]	; (401490 <spi_master_transfer+0x58>)
  40147c:	4798      	blx	r3
  40147e:	b003      	add	sp, #12
  401480:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401484:	40008000 	.word	0x40008000
  401488:	20407226 	.word	0x20407226
  40148c:	004007e1 	.word	0x004007e1
  401490:	20400001 	.word	0x20400001
  401494:	00400811 	.word	0x00400811

00401498 <_write>:
  401498:	3801      	subs	r0, #1
  40149a:	2802      	cmp	r0, #2
  40149c:	d815      	bhi.n	4014ca <_write+0x32>
  40149e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4014a2:	460e      	mov	r6, r1
  4014a4:	4614      	mov	r4, r2
  4014a6:	b19a      	cbz	r2, 4014d0 <_write+0x38>
  4014a8:	460d      	mov	r5, r1
  4014aa:	f8df 8038 	ldr.w	r8, [pc, #56]	; 4014e4 <_write+0x4c>
  4014ae:	4f0c      	ldr	r7, [pc, #48]	; (4014e0 <_write+0x48>)
  4014b0:	f8d8 0000 	ldr.w	r0, [r8]
  4014b4:	f815 1b01 	ldrb.w	r1, [r5], #1
  4014b8:	683b      	ldr	r3, [r7, #0]
  4014ba:	4798      	blx	r3
  4014bc:	2800      	cmp	r0, #0
  4014be:	db0a      	blt.n	4014d6 <_write+0x3e>
  4014c0:	1ba8      	subs	r0, r5, r6
  4014c2:	3c01      	subs	r4, #1
  4014c4:	d1f4      	bne.n	4014b0 <_write+0x18>
  4014c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4014ca:	f04f 30ff 	mov.w	r0, #4294967295
  4014ce:	4770      	bx	lr
  4014d0:	4610      	mov	r0, r2
  4014d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4014d6:	f04f 30ff 	mov.w	r0, #4294967295
  4014da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4014de:	bf00      	nop
  4014e0:	204082e4 	.word	0x204082e4
  4014e4:	204082e8 	.word	0x204082e8

004014e8 <ethernet_phy_set_link>:
 *
 * Return GMAC_OK if successfully, GMAC_TIMEOUT if timeout.
 */
uint8_t ethernet_phy_set_link(Gmac *p_gmac, uint8_t uc_phy_addr,
		uint8_t uc_apply_setting_flag)
{
  4014e8:	b5f0      	push	{r4, r5, r6, r7, lr}
  4014ea:	b083      	sub	sp, #12
  4014ec:	4604      	mov	r4, r0
  4014ee:	460f      	mov	r7, r1
  4014f0:	4616      	mov	r6, r2
		p_gmac->GMAC_NCR |= GMAC_NCR_MPE;
  4014f2:	6803      	ldr	r3, [r0, #0]
  4014f4:	f043 0310 	orr.w	r3, r3, #16
  4014f8:	6003      	str	r3, [r0, #0]

	gmac_enable_management(p_gmac, true);

	uc_phy_address = uc_phy_addr;

	uc_rc = gmac_phy_read(p_gmac, uc_phy_address, GMII_BMSR, &ul_stat1);
  4014fa:	ab01      	add	r3, sp, #4
  4014fc:	2201      	movs	r2, #1
  4014fe:	4d36      	ldr	r5, [pc, #216]	; (4015d8 <ethernet_phy_set_link+0xf0>)
  401500:	47a8      	blx	r5
	if (uc_rc != GMAC_OK) {
  401502:	b958      	cbnz	r0, 40151c <ethernet_phy_set_link+0x34>
		gmac_enable_management(p_gmac, false);

		return uc_rc;
	}

	if ((ul_stat1 & GMII_LINK_STATUS) == 0) {
  401504:	9b01      	ldr	r3, [sp, #4]
  401506:	f013 0f04 	tst.w	r3, #4
  40150a:	d10d      	bne.n	401528 <ethernet_phy_set_link+0x40>
		p_gmac->GMAC_NCR &= ~GMAC_NCR_MPE;
  40150c:	6823      	ldr	r3, [r4, #0]
  40150e:	f023 0310 	bic.w	r3, r3, #16
  401512:	6023      	str	r3, [r4, #0]
		/* Disable PHY management and start the GMAC transfer */
		gmac_enable_management(p_gmac, false);

		return GMAC_INVALID;
  401514:	23ff      	movs	r3, #255	; 0xff
	gmac_enable_full_duplex(p_gmac, uc_fd);

	/* Start the GMAC transfers */
	gmac_enable_management(p_gmac, false);
	return uc_rc;
}
  401516:	4618      	mov	r0, r3
  401518:	b003      	add	sp, #12
  40151a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40151c:	4603      	mov	r3, r0
  40151e:	6822      	ldr	r2, [r4, #0]
  401520:	f022 0210 	bic.w	r2, r2, #16
  401524:	6022      	str	r2, [r4, #0]
		return uc_rc;
  401526:	e7f6      	b.n	401516 <ethernet_phy_set_link+0x2e>
	if (uc_apply_setting_flag == 0) {
  401528:	b92e      	cbnz	r6, 401536 <ethernet_phy_set_link+0x4e>
  40152a:	6823      	ldr	r3, [r4, #0]
  40152c:	f023 0310 	bic.w	r3, r3, #16
  401530:	6023      	str	r3, [r4, #0]
		return uc_rc;
  401532:	4633      	mov	r3, r6
  401534:	e7ef      	b.n	401516 <ethernet_phy_set_link+0x2e>
	uc_rc = gmac_phy_read(p_gmac, uc_phy_address, GMII_PCR1, &ul_stat2);
  401536:	466b      	mov	r3, sp
  401538:	221e      	movs	r2, #30
  40153a:	4639      	mov	r1, r7
  40153c:	4620      	mov	r0, r4
  40153e:	4d26      	ldr	r5, [pc, #152]	; (4015d8 <ethernet_phy_set_link+0xf0>)
  401540:	47a8      	blx	r5
	if (uc_rc != GMAC_OK) {
  401542:	4603      	mov	r3, r0
  401544:	b950      	cbnz	r0, 40155c <ethernet_phy_set_link+0x74>
	if ((ul_stat1 & GMII_100BASE_TX_FD) && (ul_stat2 & GMII_OMI_100BASE_TX_FD)) {
  401546:	9a01      	ldr	r2, [sp, #4]
	if ((ul_stat1 & GMII_10BASE_T_FD) && (ul_stat2 & GMII_OMI_10BASE_T_FD)) {
  401548:	f412 5f80 	tst.w	r2, #4096	; 0x1000
  40154c:	d00b      	beq.n	401566 <ethernet_phy_set_link+0x7e>
  40154e:	9900      	ldr	r1, [sp, #0]
  401550:	f011 0f05 	tst.w	r1, #5
  401554:	bf0c      	ite	eq
  401556:	2101      	moveq	r1, #1
  401558:	2100      	movne	r1, #0
  40155a:	e005      	b.n	401568 <ethernet_phy_set_link+0x80>
  40155c:	6822      	ldr	r2, [r4, #0]
  40155e:	f022 0210 	bic.w	r2, r2, #16
  401562:	6022      	str	r2, [r4, #0]
		return uc_rc;
  401564:	e7d7      	b.n	401516 <ethernet_phy_set_link+0x2e>
  401566:	2101      	movs	r1, #1
	if ((ul_stat1 & GMII_100BASE_TX_HD) && (ul_stat2 & GMII_OMI_100BASE_TX_HD)) {
  401568:	f412 5f00 	tst.w	r2, #8192	; 0x2000
  40156c:	d003      	beq.n	401576 <ethernet_phy_set_link+0x8e>
  40156e:	9800      	ldr	r0, [sp, #0]
  401570:	f010 0f02 	tst.w	r0, #2
  401574:	d127      	bne.n	4015c6 <ethernet_phy_set_link+0xde>
	if ((ul_stat1 & GMII_10BASE_T_HD) && (ul_stat2 & GMII_OMI_10BASE_T_HD)) {
  401576:	f412 6f00 	tst.w	r2, #2048	; 0x800
  40157a:	d003      	beq.n	401584 <ethernet_phy_set_link+0x9c>
  40157c:	9a00      	ldr	r2, [sp, #0]
  40157e:	f012 0f01 	tst.w	r2, #1
  401582:	d111      	bne.n	4015a8 <ethernet_phy_set_link+0xc0>
	if (uc_speed) {
  401584:	b191      	cbz	r1, 4015ac <ethernet_phy_set_link+0xc4>
  401586:	2201      	movs	r2, #1
		p_gmac->GMAC_NCFGR |= GMAC_NCFGR_SPD;
  401588:	6861      	ldr	r1, [r4, #4]
  40158a:	f041 0101 	orr.w	r1, r1, #1
  40158e:	6061      	str	r1, [r4, #4]
	if (uc_enable) {
  401590:	b1a2      	cbz	r2, 4015bc <ethernet_phy_set_link+0xd4>
		p_gmac->GMAC_NCFGR |= GMAC_NCFGR_FD;
  401592:	6862      	ldr	r2, [r4, #4]
  401594:	f042 0202 	orr.w	r2, r2, #2
  401598:	6062      	str	r2, [r4, #4]
		p_gmac->GMAC_NCR &= ~GMAC_NCR_MPE;
  40159a:	6822      	ldr	r2, [r4, #0]
  40159c:	f022 0210 	bic.w	r2, r2, #16
  4015a0:	6022      	str	r2, [r4, #0]
	return uc_rc;
  4015a2:	e7b8      	b.n	401516 <ethernet_phy_set_link+0x2e>
		uc_fd = false;
  4015a4:	461a      	mov	r2, r3
  4015a6:	e7ef      	b.n	401588 <ethernet_phy_set_link+0xa0>
		uc_fd = false;
  4015a8:	461a      	mov	r2, r3
  4015aa:	e000      	b.n	4015ae <ethernet_phy_set_link+0xc6>
	if (uc_speed) {
  4015ac:	2201      	movs	r2, #1
		p_gmac->GMAC_NCFGR &= ~GMAC_NCFGR_SPD;
  4015ae:	6861      	ldr	r1, [r4, #4]
  4015b0:	f021 0101 	bic.w	r1, r1, #1
  4015b4:	6061      	str	r1, [r4, #4]
  4015b6:	e7eb      	b.n	401590 <ethernet_phy_set_link+0xa8>
  4015b8:	461a      	mov	r2, r3
  4015ba:	e7f8      	b.n	4015ae <ethernet_phy_set_link+0xc6>
		p_gmac->GMAC_NCFGR &= ~GMAC_NCFGR_FD;
  4015bc:	6862      	ldr	r2, [r4, #4]
  4015be:	f022 0202 	bic.w	r2, r2, #2
  4015c2:	6062      	str	r2, [r4, #4]
  4015c4:	e7e9      	b.n	40159a <ethernet_phy_set_link+0xb2>
	if ((ul_stat1 & GMII_10BASE_T_HD) && (ul_stat2 & GMII_OMI_10BASE_T_HD)) {
  4015c6:	f412 6f00 	tst.w	r2, #2048	; 0x800
  4015ca:	d0eb      	beq.n	4015a4 <ethernet_phy_set_link+0xbc>
  4015cc:	9a00      	ldr	r2, [sp, #0]
  4015ce:	f012 0f01 	tst.w	r2, #1
  4015d2:	d1f1      	bne.n	4015b8 <ethernet_phy_set_link+0xd0>
		uc_fd = false;
  4015d4:	461a      	mov	r2, r3
  4015d6:	e7d7      	b.n	401588 <ethernet_phy_set_link+0xa0>
  4015d8:	00401af5 	.word	0x00401af5

004015dc <ethernet_phy_auto_negotiate>:
 * \param uc_phy_addr PHY address.
 *
 * Return GMAC_OK if successfully, GMAC_TIMEOUT if timeout.
 */
uint8_t ethernet_phy_auto_negotiate(Gmac *p_gmac, uint8_t uc_phy_addr)
{
  4015dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4015e0:	b082      	sub	sp, #8
  4015e2:	4604      	mov	r4, r0
  4015e4:	460d      	mov	r5, r1
		p_gmac->GMAC_NCR |= GMAC_NCR_MPE;
  4015e6:	6803      	ldr	r3, [r0, #0]
  4015e8:	f043 0310 	orr.w	r3, r3, #16
  4015ec:	6003      	str	r3, [r0, #0]
	uint8_t uc_rc;

	gmac_enable_management(p_gmac, true);

	/* Set up control register */
	uc_rc = gmac_phy_read(p_gmac, uc_phy_addr, GMII_BMCR, &ul_value);
  4015ee:	ab01      	add	r3, sp, #4
  4015f0:	2200      	movs	r2, #0
  4015f2:	4e5d      	ldr	r6, [pc, #372]	; (401768 <ethernet_phy_auto_negotiate+0x18c>)
  4015f4:	47b0      	blx	r6
	if (uc_rc != GMAC_OK) {
  4015f6:	b140      	cbz	r0, 40160a <ethernet_phy_auto_negotiate+0x2e>
  4015f8:	4603      	mov	r3, r0
		p_gmac->GMAC_NCR &= ~GMAC_NCR_MPE;
  4015fa:	6822      	ldr	r2, [r4, #0]
  4015fc:	f022 0210 	bic.w	r2, r2, #16
  401600:	6022      	str	r2, [r4, #0]
	gmac_enable_transmit(GMAC, true);
	gmac_enable_receive(GMAC, true);

	gmac_enable_management(p_gmac, false);
	return uc_rc;
}
  401602:	4618      	mov	r0, r3
  401604:	b002      	add	sp, #8
  401606:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	ul_value &= ~(uint32_t)(GMII_LOOPBACK | GMII_POWER_DOWN);
  40160a:	9b01      	ldr	r3, [sp, #4]
  40160c:	f423 43b0 	bic.w	r3, r3, #22528	; 0x5800
	ul_value |= (uint32_t)GMII_ISOLATE; /* Electrically isolate PHY */
  401610:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
  401614:	9301      	str	r3, [sp, #4]
	uc_rc = gmac_phy_write(p_gmac, uc_phy_addr, GMII_BMCR, ul_value);
  401616:	2200      	movs	r2, #0
  401618:	4629      	mov	r1, r5
  40161a:	4620      	mov	r0, r4
  40161c:	4e53      	ldr	r6, [pc, #332]	; (40176c <ethernet_phy_auto_negotiate+0x190>)
  40161e:	47b0      	blx	r6
	if (uc_rc != GMAC_OK) {
  401620:	4603      	mov	r3, r0
  401622:	b120      	cbz	r0, 40162e <ethernet_phy_auto_negotiate+0x52>
  401624:	6822      	ldr	r2, [r4, #0]
  401626:	f022 0210 	bic.w	r2, r2, #16
  40162a:	6022      	str	r2, [r4, #0]
		return uc_rc;
  40162c:	e7e9      	b.n	401602 <ethernet_phy_auto_negotiate+0x26>
	uc_rc = gmac_phy_write(p_gmac, uc_phy_addr, GMII_ANAR, ul_phy_anar);
  40162e:	f240 13e1 	movw	r3, #481	; 0x1e1
  401632:	2204      	movs	r2, #4
  401634:	4629      	mov	r1, r5
  401636:	4620      	mov	r0, r4
  401638:	4e4c      	ldr	r6, [pc, #304]	; (40176c <ethernet_phy_auto_negotiate+0x190>)
  40163a:	47b0      	blx	r6
	if (uc_rc != GMAC_OK) {
  40163c:	4603      	mov	r3, r0
  40163e:	b120      	cbz	r0, 40164a <ethernet_phy_auto_negotiate+0x6e>
  401640:	6822      	ldr	r2, [r4, #0]
  401642:	f022 0210 	bic.w	r2, r2, #16
  401646:	6022      	str	r2, [r4, #0]
		return uc_rc;
  401648:	e7db      	b.n	401602 <ethernet_phy_auto_negotiate+0x26>
	uc_rc = gmac_phy_read(p_gmac, uc_phy_addr, GMII_BMCR, &ul_value);
  40164a:	ab01      	add	r3, sp, #4
  40164c:	2200      	movs	r2, #0
  40164e:	4629      	mov	r1, r5
  401650:	4620      	mov	r0, r4
  401652:	4e45      	ldr	r6, [pc, #276]	; (401768 <ethernet_phy_auto_negotiate+0x18c>)
  401654:	47b0      	blx	r6
	if (uc_rc != GMAC_OK) {
  401656:	4603      	mov	r3, r0
  401658:	b120      	cbz	r0, 401664 <ethernet_phy_auto_negotiate+0x88>
  40165a:	6822      	ldr	r2, [r4, #0]
  40165c:	f022 0210 	bic.w	r2, r2, #16
  401660:	6022      	str	r2, [r4, #0]
		return uc_rc;
  401662:	e7ce      	b.n	401602 <ethernet_phy_auto_negotiate+0x26>
	ul_value |= GMII_SPEED_SELECT | GMII_AUTONEG | GMII_DUPLEX_MODE;
  401664:	9b01      	ldr	r3, [sp, #4]
  401666:	f443 5344 	orr.w	r3, r3, #12544	; 0x3100
  40166a:	9301      	str	r3, [sp, #4]
	uc_rc = gmac_phy_write(p_gmac, uc_phy_addr, GMII_BMCR, ul_value);
  40166c:	2200      	movs	r2, #0
  40166e:	4629      	mov	r1, r5
  401670:	4620      	mov	r0, r4
  401672:	4e3e      	ldr	r6, [pc, #248]	; (40176c <ethernet_phy_auto_negotiate+0x190>)
  401674:	47b0      	blx	r6
	if (uc_rc != GMAC_OK) {
  401676:	4603      	mov	r3, r0
  401678:	b120      	cbz	r0, 401684 <ethernet_phy_auto_negotiate+0xa8>
  40167a:	6822      	ldr	r2, [r4, #0]
  40167c:	f022 0210 	bic.w	r2, r2, #16
  401680:	6022      	str	r2, [r4, #0]
		return uc_rc;
  401682:	e7be      	b.n	401602 <ethernet_phy_auto_negotiate+0x26>
	ul_value &= ~(uint32_t)GMII_ISOLATE;
  401684:	9b01      	ldr	r3, [sp, #4]
  401686:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  40168a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
  40168e:	9301      	str	r3, [sp, #4]
	uc_rc = gmac_phy_write(p_gmac, uc_phy_addr, GMII_BMCR, ul_value);
  401690:	2200      	movs	r2, #0
  401692:	4629      	mov	r1, r5
  401694:	4620      	mov	r0, r4
  401696:	4e35      	ldr	r6, [pc, #212]	; (40176c <ethernet_phy_auto_negotiate+0x190>)
  401698:	47b0      	blx	r6
	if (uc_rc != GMAC_OK) {
  40169a:	4603      	mov	r3, r0
  40169c:	b9b0      	cbnz	r0, 4016cc <ethernet_phy_auto_negotiate+0xf0>
  40169e:	4e34      	ldr	r6, [pc, #208]	; (401770 <ethernet_phy_auto_negotiate+0x194>)
		uc_rc = gmac_phy_read(p_gmac, uc_phy_addr, GMII_BMSR, &ul_value);
  4016a0:	f04f 0801 	mov.w	r8, #1
  4016a4:	4f30      	ldr	r7, [pc, #192]	; (401768 <ethernet_phy_auto_negotiate+0x18c>)
  4016a6:	ab01      	add	r3, sp, #4
  4016a8:	4642      	mov	r2, r8
  4016aa:	4629      	mov	r1, r5
  4016ac:	4620      	mov	r0, r4
  4016ae:	47b8      	blx	r7
		if (uc_rc != GMAC_OK) {
  4016b0:	4603      	mov	r3, r0
  4016b2:	b980      	cbnz	r0, 4016d6 <ethernet_phy_auto_negotiate+0xfa>
		if (ul_value & GMII_AUTONEG_COMP) {
  4016b4:	9b01      	ldr	r3, [sp, #4]
  4016b6:	f013 0f20 	tst.w	r3, #32
  4016ba:	d111      	bne.n	4016e0 <ethernet_phy_auto_negotiate+0x104>
			if (++ul_retry_count >= ul_retry_max) {
  4016bc:	3e01      	subs	r6, #1
  4016be:	d1f2      	bne.n	4016a6 <ethernet_phy_auto_negotiate+0xca>
  4016c0:	6823      	ldr	r3, [r4, #0]
  4016c2:	f023 0310 	bic.w	r3, r3, #16
  4016c6:	6023      	str	r3, [r4, #0]
				return GMAC_TIMEOUT;
  4016c8:	2301      	movs	r3, #1
  4016ca:	e79a      	b.n	401602 <ethernet_phy_auto_negotiate+0x26>
  4016cc:	6822      	ldr	r2, [r4, #0]
  4016ce:	f022 0210 	bic.w	r2, r2, #16
  4016d2:	6022      	str	r2, [r4, #0]
		return uc_rc;
  4016d4:	e795      	b.n	401602 <ethernet_phy_auto_negotiate+0x26>
  4016d6:	6822      	ldr	r2, [r4, #0]
  4016d8:	f022 0210 	bic.w	r2, r2, #16
  4016dc:	6022      	str	r2, [r4, #0]
			return uc_rc;
  4016de:	e790      	b.n	401602 <ethernet_phy_auto_negotiate+0x26>
	uc_rc = gmac_phy_read(p_gmac, uc_phy_addr, GMII_ANLPAR, &ul_phy_analpar);
  4016e0:	466b      	mov	r3, sp
  4016e2:	2205      	movs	r2, #5
  4016e4:	4629      	mov	r1, r5
  4016e6:	4620      	mov	r0, r4
  4016e8:	4d1f      	ldr	r5, [pc, #124]	; (401768 <ethernet_phy_auto_negotiate+0x18c>)
  4016ea:	47a8      	blx	r5
	if (uc_rc != GMAC_OK) {
  4016ec:	4603      	mov	r3, r0
  4016ee:	b980      	cbnz	r0, 401712 <ethernet_phy_auto_negotiate+0x136>
	if ((ul_phy_anar & ul_phy_analpar) & GMII_100TX_FDX) {
  4016f0:	9a00      	ldr	r2, [sp, #0]
  4016f2:	f412 7f80 	tst.w	r2, #256	; 0x100
  4016f6:	d113      	bne.n	401720 <ethernet_phy_auto_negotiate+0x144>
	} else if ((ul_phy_anar & ul_phy_analpar) & GMII_10_FDX) {
  4016f8:	f012 0f40 	tst.w	r2, #64	; 0x40
  4016fc:	d12c      	bne.n	401758 <ethernet_phy_auto_negotiate+0x17c>
	if (uc_speed) {
  4016fe:	f012 0f80 	tst.w	r2, #128	; 0x80
		uc_fd = false;
  401702:	bf08      	it	eq
  401704:	4602      	moveq	r2, r0
  401706:	d109      	bne.n	40171c <ethernet_phy_auto_negotiate+0x140>
		p_gmac->GMAC_NCFGR &= ~GMAC_NCFGR_SPD;
  401708:	6861      	ldr	r1, [r4, #4]
  40170a:	f021 0101 	bic.w	r1, r1, #1
  40170e:	6061      	str	r1, [r4, #4]
  401710:	e00b      	b.n	40172a <ethernet_phy_auto_negotiate+0x14e>
		p_gmac->GMAC_NCR &= ~GMAC_NCR_MPE;
  401712:	6822      	ldr	r2, [r4, #0]
  401714:	f022 0210 	bic.w	r2, r2, #16
  401718:	6022      	str	r2, [r4, #0]
		return uc_rc;
  40171a:	e772      	b.n	401602 <ethernet_phy_auto_negotiate+0x26>
		uc_fd = false;
  40171c:	4602      	mov	r2, r0
  40171e:	e000      	b.n	401722 <ethernet_phy_auto_negotiate+0x146>
		uc_fd = true;
  401720:	2201      	movs	r2, #1
		p_gmac->GMAC_NCFGR |= GMAC_NCFGR_SPD;
  401722:	6861      	ldr	r1, [r4, #4]
  401724:	f041 0101 	orr.w	r1, r1, #1
  401728:	6061      	str	r1, [r4, #4]
	if (uc_enable) {
  40172a:	b1ba      	cbz	r2, 40175c <ethernet_phy_auto_negotiate+0x180>
		p_gmac->GMAC_NCFGR |= GMAC_NCFGR_FD;
  40172c:	6862      	ldr	r2, [r4, #4]
  40172e:	f042 0202 	orr.w	r2, r2, #2
  401732:	6062      	str	r2, [r4, #4]
			p_gmac->GMAC_UR &= ~GMAC_UR_RMII;
  401734:	68e2      	ldr	r2, [r4, #12]
  401736:	f022 0201 	bic.w	r2, r2, #1
  40173a:	60e2      	str	r2, [r4, #12]
		p_gmac->GMAC_NCR |= GMAC_NCR_TXEN;
  40173c:	4a0d      	ldr	r2, [pc, #52]	; (401774 <ethernet_phy_auto_negotiate+0x198>)
  40173e:	6811      	ldr	r1, [r2, #0]
  401740:	f041 0108 	orr.w	r1, r1, #8
  401744:	6011      	str	r1, [r2, #0]
		p_gmac->GMAC_NCR |= GMAC_NCR_RXEN;
  401746:	6811      	ldr	r1, [r2, #0]
  401748:	f041 0104 	orr.w	r1, r1, #4
  40174c:	6011      	str	r1, [r2, #0]
		p_gmac->GMAC_NCR &= ~GMAC_NCR_MPE;
  40174e:	6822      	ldr	r2, [r4, #0]
  401750:	f022 0210 	bic.w	r2, r2, #16
  401754:	6022      	str	r2, [r4, #0]
	return uc_rc;
  401756:	e754      	b.n	401602 <ethernet_phy_auto_negotiate+0x26>
		uc_fd = true;
  401758:	2201      	movs	r2, #1
  40175a:	e7d5      	b.n	401708 <ethernet_phy_auto_negotiate+0x12c>
		p_gmac->GMAC_NCFGR &= ~GMAC_NCFGR_FD;
  40175c:	6862      	ldr	r2, [r4, #4]
  40175e:	f022 0202 	bic.w	r2, r2, #2
  401762:	6062      	str	r2, [r4, #4]
  401764:	e7e6      	b.n	401734 <ethernet_phy_auto_negotiate+0x158>
  401766:	bf00      	nop
  401768:	00401af5 	.word	0x00401af5
  40176c:	00401b55 	.word	0x00401b55
  401770:	000f4240 	.word	0x000f4240
  401774:	40050000 	.word	0x40050000

00401778 <ethernet_phy_reset>:
 * \param uc_phy_addr PHY address.
 *
 * \Return GMAC_OK if successfully, GMAC_TIMEOUT if timeout.
 */
uint8_t ethernet_phy_reset(Gmac *p_gmac, uint8_t uc_phy_addr)
{
  401778:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40177c:	b083      	sub	sp, #12
  40177e:	4605      	mov	r5, r0
  401780:	4689      	mov	r9, r1
		p_gmac->GMAC_NCR |= GMAC_NCR_MPE;
  401782:	6803      	ldr	r3, [r0, #0]
  401784:	f043 0310 	orr.w	r3, r3, #16
  401788:	6003      	str	r3, [r0, #0]
	uint32_t ul_timeout = ETH_PHY_TIMEOUT;
	uint8_t uc_rc = GMAC_TIMEOUT;

	gmac_enable_management(p_gmac, true);

	ul_bmcr = GMII_RESET;
  40178a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  40178e:	ae02      	add	r6, sp, #8
  401790:	f846 3d04 	str.w	r3, [r6, #-4]!
	gmac_phy_write(p_gmac, uc_phy_address, GMII_BMCR, ul_bmcr);
  401794:	2200      	movs	r2, #0
  401796:	4c0e      	ldr	r4, [pc, #56]	; (4017d0 <ethernet_phy_reset+0x58>)
  401798:	47a0      	blx	r4
	uint32_t ul_timeout = ETH_PHY_TIMEOUT;
  40179a:	240a      	movs	r4, #10

	do {
		gmac_phy_read(p_gmac, uc_phy_address, GMII_BMCR, &ul_bmcr);
  40179c:	f04f 0800 	mov.w	r8, #0
  4017a0:	4f0c      	ldr	r7, [pc, #48]	; (4017d4 <ethernet_phy_reset+0x5c>)
  4017a2:	4633      	mov	r3, r6
  4017a4:	4642      	mov	r2, r8
  4017a6:	4649      	mov	r1, r9
  4017a8:	4628      	mov	r0, r5
  4017aa:	47b8      	blx	r7
		ul_timeout--;
  4017ac:	3c01      	subs	r4, #1
	} while ((ul_bmcr & GMII_RESET) && ul_timeout);
  4017ae:	9b01      	ldr	r3, [sp, #4]
  4017b0:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  4017b4:	d001      	beq.n	4017ba <ethernet_phy_reset+0x42>
  4017b6:	2c00      	cmp	r4, #0
  4017b8:	d1f3      	bne.n	4017a2 <ethernet_phy_reset+0x2a>
		p_gmac->GMAC_NCR &= ~GMAC_NCR_MPE;
  4017ba:	682b      	ldr	r3, [r5, #0]
  4017bc:	f023 0310 	bic.w	r3, r3, #16
  4017c0:	602b      	str	r3, [r5, #0]
	if (ul_timeout) {
		uc_rc = GMAC_OK;
	}

	return (uc_rc);
}
  4017c2:	fab4 f084 	clz	r0, r4
  4017c6:	0940      	lsrs	r0, r0, #5
  4017c8:	b003      	add	sp, #12
  4017ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4017ce:	bf00      	nop
  4017d0:	00401b55 	.word	0x00401b55
  4017d4:	00401af5 	.word	0x00401af5

004017d8 <ethernet_phy_init>:
{
  4017d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4017dc:	b085      	sub	sp, #20
  4017de:	4606      	mov	r6, r0
  4017e0:	4688      	mov	r8, r1
  4017e2:	4615      	mov	r5, r2
	pio_set_output(PIN_GMAC_RESET_PIO, PIN_GMAC_RESET_MASK, 1,  false, true);
  4017e4:	2401      	movs	r4, #1
  4017e6:	9400      	str	r4, [sp, #0]
  4017e8:	2300      	movs	r3, #0
  4017ea:	4622      	mov	r2, r4
  4017ec:	f44f 6180 	mov.w	r1, #1024	; 0x400
  4017f0:	4843      	ldr	r0, [pc, #268]	; (401900 <ethernet_phy_init+0x128>)
  4017f2:	4f44      	ldr	r7, [pc, #272]	; (401904 <ethernet_phy_init+0x12c>)
  4017f4:	47b8      	blx	r7
	pio_set_input(PIN_GMAC_INT_PIO, PIN_GMAC_INT_MASK, PIO_PULLUP);
  4017f6:	4622      	mov	r2, r4
  4017f8:	f44f 4180 	mov.w	r1, #16384	; 0x4000
  4017fc:	4842      	ldr	r0, [pc, #264]	; (401908 <ethernet_phy_init+0x130>)
  4017fe:	4b43      	ldr	r3, [pc, #268]	; (40190c <ethernet_phy_init+0x134>)
  401800:	4798      	blx	r3
	pio_set_peripheral(PIN_GMAC_PIO, PIN_GMAC_PERIPH, PIN_GMAC_MASK);
  401802:	f240 32ff 	movw	r2, #1023	; 0x3ff
  401806:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40180a:	4841      	ldr	r0, [pc, #260]	; (401910 <ethernet_phy_init+0x138>)
  40180c:	4b41      	ldr	r3, [pc, #260]	; (401914 <ethernet_phy_init+0x13c>)
  40180e:	4798      	blx	r3
	ethernet_phy_reset(GMAC,uc_phy_addr);
  401810:	4641      	mov	r1, r8
  401812:	4841      	ldr	r0, [pc, #260]	; (401918 <ethernet_phy_init+0x140>)
  401814:	4b41      	ldr	r3, [pc, #260]	; (40191c <ethernet_phy_init+0x144>)
  401816:	4798      	blx	r3
	if (ul_mck > GMAC_MCK_SPEED_240MHZ) {
  401818:	4b41      	ldr	r3, [pc, #260]	; (401920 <ethernet_phy_init+0x148>)
  40181a:	429d      	cmp	r5, r3
  40181c:	d85d      	bhi.n	4018da <ethernet_phy_init+0x102>
	} else if (ul_mck > GMAC_MCK_SPEED_160MHZ) {
  40181e:	4b41      	ldr	r3, [pc, #260]	; (401924 <ethernet_phy_init+0x14c>)
  401820:	429d      	cmp	r5, r3
  401822:	d80f      	bhi.n	401844 <ethernet_phy_init+0x6c>
	} else if (ul_mck > GMAC_MCK_SPEED_120MHZ) {
  401824:	4b40      	ldr	r3, [pc, #256]	; (401928 <ethernet_phy_init+0x150>)
  401826:	429d      	cmp	r5, r3
  401828:	d83e      	bhi.n	4018a8 <ethernet_phy_init+0xd0>
	} else if (ul_mck > GMAC_MCK_SPEED_80MHZ) {
  40182a:	4b40      	ldr	r3, [pc, #256]	; (40192c <ethernet_phy_init+0x154>)
  40182c:	429d      	cmp	r5, r3
  40182e:	d83e      	bhi.n	4018ae <ethernet_phy_init+0xd6>
	} else if (ul_mck > GMAC_MCK_SPEED_40MHZ) {
  401830:	4b3f      	ldr	r3, [pc, #252]	; (401930 <ethernet_phy_init+0x158>)
  401832:	429d      	cmp	r5, r3
  401834:	d83e      	bhi.n	4018b4 <ethernet_phy_init+0xdc>
		ul_clk = GMAC_NCFGR_CLK_MCK_8;
  401836:	4b3f      	ldr	r3, [pc, #252]	; (401934 <ethernet_phy_init+0x15c>)
  401838:	429d      	cmp	r5, r3
  40183a:	bf8c      	ite	hi
  40183c:	f44f 2380 	movhi.w	r3, #262144	; 0x40000
  401840:	2300      	movls	r3, #0
  401842:	e001      	b.n	401848 <ethernet_phy_init+0x70>
		ul_clk = GMAC_NCFGR_CLK_MCK_96;
  401844:	f44f 13a0 	mov.w	r3, #1310720	; 0x140000
	p_gmac->GMAC_NCFGR &= ~GMAC_NCFGR_CLK_Msk;
  401848:	6872      	ldr	r2, [r6, #4]
  40184a:	f422 12e0 	bic.w	r2, r2, #1835008	; 0x1c0000
  40184e:	6072      	str	r2, [r6, #4]
	p_gmac->GMAC_NCFGR |= ul_clk;
  401850:	6875      	ldr	r5, [r6, #4]
  401852:	431d      	orrs	r5, r3
  401854:	6075      	str	r5, [r6, #4]
	uint32_t ul_value = 0;
  401856:	ab04      	add	r3, sp, #16
  401858:	2200      	movs	r2, #0
  40185a:	f843 2d04 	str.w	r2, [r3, #-4]!
		p_gmac->GMAC_NCR |= GMAC_NCR_MPE;
  40185e:	6832      	ldr	r2, [r6, #0]
  401860:	f042 0210 	orr.w	r2, r2, #16
  401864:	6032      	str	r2, [r6, #0]
	gmac_phy_read(p_gmac, uc_phy_addr, GMII_PHYID1, &ul_value);
  401866:	2202      	movs	r2, #2
  401868:	4641      	mov	r1, r8
  40186a:	4630      	mov	r0, r6
  40186c:	4c32      	ldr	r4, [pc, #200]	; (401938 <ethernet_phy_init+0x160>)
  40186e:	47a0      	blx	r4
	if (ul_value != GMII_OUI_MSB) {
  401870:	9b03      	ldr	r3, [sp, #12]
  401872:	2b22      	cmp	r3, #34	; 0x22
  401874:	d035      	beq.n	4018e2 <ethernet_phy_init+0x10a>
  401876:	4644      	mov	r4, r8
  401878:	2520      	movs	r5, #32
			gmac_phy_read(p_gmac, uc_phy_address, GMII_PHYID1, &ul_value);
  40187a:	f04f 0902 	mov.w	r9, #2
  40187e:	4f2e      	ldr	r7, [pc, #184]	; (401938 <ethernet_phy_init+0x160>)
			uc_phy_address = (uc_phy_address + 1) & 0x1F;
  401880:	3401      	adds	r4, #1
  401882:	f004 041f 	and.w	r4, r4, #31
			gmac_phy_read(p_gmac, uc_phy_address, GMII_PHYID1, &ul_value);
  401886:	ab03      	add	r3, sp, #12
  401888:	464a      	mov	r2, r9
  40188a:	4621      	mov	r1, r4
  40188c:	4630      	mov	r0, r6
  40188e:	47b8      	blx	r7
			if (ul_value == GMII_OUI_MSB) {
  401890:	9b03      	ldr	r3, [sp, #12]
  401892:	2b22      	cmp	r3, #34	; 0x22
  401894:	d011      	beq.n	4018ba <ethernet_phy_init+0xe2>
  401896:	1e6b      	subs	r3, r5, #1
		for (uc_cnt = uc_start_addr; uc_cnt <= ETH_PHY_MAX_ADDR; uc_cnt++) {
  401898:	f013 05ff 	ands.w	r5, r3, #255	; 0xff
  40189c:	d1f0      	bne.n	401880 <ethernet_phy_init+0xa8>
		p_gmac->GMAC_NCR &= ~GMAC_NCR_MPE;
  40189e:	6833      	ldr	r3, [r6, #0]
  4018a0:	f023 0310 	bic.w	r3, r3, #16
  4018a4:	6033      	str	r3, [r6, #0]
  4018a6:	e018      	b.n	4018da <ethernet_phy_init+0x102>
		ul_clk = GMAC_NCFGR_CLK_MCK_64;
  4018a8:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  4018ac:	e7cc      	b.n	401848 <ethernet_phy_init+0x70>
		ul_clk = GMAC_NCFGR_CLK_MCK_48;
  4018ae:	f44f 2340 	mov.w	r3, #786432	; 0xc0000
  4018b2:	e7c9      	b.n	401848 <ethernet_phy_init+0x70>
		ul_clk = GMAC_NCFGR_CLK_MCK_32;
  4018b4:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  4018b8:	e7c6      	b.n	401848 <ethernet_phy_init+0x70>
		p_gmac->GMAC_NCR &= ~GMAC_NCR_MPE;
  4018ba:	6833      	ldr	r3, [r6, #0]
  4018bc:	f023 0310 	bic.w	r3, r3, #16
  4018c0:	6033      	str	r3, [r6, #0]
		gmac_phy_read(p_gmac, uc_phy_address, GMII_BMSR, &ul_value);
  4018c2:	ab03      	add	r3, sp, #12
  4018c4:	2201      	movs	r2, #1
  4018c6:	4621      	mov	r1, r4
  4018c8:	4630      	mov	r0, r6
  4018ca:	4d1b      	ldr	r5, [pc, #108]	; (401938 <ethernet_phy_init+0x160>)
  4018cc:	47a8      	blx	r5
	if (uc_phy != uc_phy_addr) {
  4018ce:	45a0      	cmp	r8, r4
  4018d0:	d003      	beq.n	4018da <ethernet_phy_init+0x102>
		ethernet_phy_reset(p_gmac, uc_phy_addr);
  4018d2:	4641      	mov	r1, r8
  4018d4:	4630      	mov	r0, r6
  4018d6:	4b11      	ldr	r3, [pc, #68]	; (40191c <ethernet_phy_init+0x144>)
  4018d8:	4798      	blx	r3
}
  4018da:	2000      	movs	r0, #0
  4018dc:	b005      	add	sp, #20
  4018de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4018e2:	6833      	ldr	r3, [r6, #0]
  4018e4:	f023 0310 	bic.w	r3, r3, #16
  4018e8:	6033      	str	r3, [r6, #0]
	if (uc_rc != 0xFF) {
  4018ea:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
  4018ee:	d0f4      	beq.n	4018da <ethernet_phy_init+0x102>
		gmac_phy_read(p_gmac, uc_phy_address, GMII_BMSR, &ul_value);
  4018f0:	ab03      	add	r3, sp, #12
  4018f2:	2201      	movs	r2, #1
  4018f4:	4641      	mov	r1, r8
  4018f6:	4630      	mov	r0, r6
  4018f8:	4c0f      	ldr	r4, [pc, #60]	; (401938 <ethernet_phy_init+0x160>)
  4018fa:	47a0      	blx	r4
  4018fc:	e7ed      	b.n	4018da <ethernet_phy_init+0x102>
  4018fe:	bf00      	nop
  401900:	400e1200 	.word	0x400e1200
  401904:	00401eb9 	.word	0x00401eb9
  401908:	400e0e00 	.word	0x400e0e00
  40190c:	00401e83 	.word	0x00401e83
  401910:	400e1400 	.word	0x400e1400
  401914:	00401df1 	.word	0x00401df1
  401918:	40050000 	.word	0x40050000
  40191c:	00401779 	.word	0x00401779
  401920:	0e4e1c00 	.word	0x0e4e1c00
  401924:	09896800 	.word	0x09896800
  401928:	07270e00 	.word	0x07270e00
  40192c:	04c4b400 	.word	0x04c4b400
  401930:	02625a00 	.word	0x02625a00
  401934:	01312d00 	.word	0x01312d00
  401938:	00401af5 	.word	0x00401af5

0040193c <twihs_set_speed>:
  40193c:	4b28      	ldr	r3, [pc, #160]	; (4019e0 <twihs_set_speed+0xa4>)
  40193e:	4299      	cmp	r1, r3
  401940:	d84b      	bhi.n	4019da <twihs_set_speed+0x9e>
  401942:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  401946:	4299      	cmp	r1, r3
  401948:	d92d      	bls.n	4019a6 <twihs_set_speed+0x6a>
  40194a:	b410      	push	{r4}
  40194c:	4c25      	ldr	r4, [pc, #148]	; (4019e4 <twihs_set_speed+0xa8>)
  40194e:	fba4 3402 	umull	r3, r4, r4, r2
  401952:	0ba4      	lsrs	r4, r4, #14
  401954:	3c03      	subs	r4, #3
  401956:	4b24      	ldr	r3, [pc, #144]	; (4019e8 <twihs_set_speed+0xac>)
  401958:	440b      	add	r3, r1
  40195a:	009b      	lsls	r3, r3, #2
  40195c:	fbb2 f2f3 	udiv	r2, r2, r3
  401960:	3a03      	subs	r2, #3
  401962:	2cff      	cmp	r4, #255	; 0xff
  401964:	d91d      	bls.n	4019a2 <twihs_set_speed+0x66>
  401966:	2100      	movs	r1, #0
  401968:	3101      	adds	r1, #1
  40196a:	0864      	lsrs	r4, r4, #1
  40196c:	2cff      	cmp	r4, #255	; 0xff
  40196e:	d901      	bls.n	401974 <twihs_set_speed+0x38>
  401970:	2906      	cmp	r1, #6
  401972:	d9f9      	bls.n	401968 <twihs_set_speed+0x2c>
  401974:	2aff      	cmp	r2, #255	; 0xff
  401976:	d907      	bls.n	401988 <twihs_set_speed+0x4c>
  401978:	2906      	cmp	r1, #6
  40197a:	d805      	bhi.n	401988 <twihs_set_speed+0x4c>
  40197c:	3101      	adds	r1, #1
  40197e:	0852      	lsrs	r2, r2, #1
  401980:	2aff      	cmp	r2, #255	; 0xff
  401982:	d901      	bls.n	401988 <twihs_set_speed+0x4c>
  401984:	2906      	cmp	r1, #6
  401986:	d9f9      	bls.n	40197c <twihs_set_speed+0x40>
  401988:	0213      	lsls	r3, r2, #8
  40198a:	b29b      	uxth	r3, r3
  40198c:	0409      	lsls	r1, r1, #16
  40198e:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
  401992:	430b      	orrs	r3, r1
  401994:	b2e4      	uxtb	r4, r4
  401996:	4323      	orrs	r3, r4
  401998:	6103      	str	r3, [r0, #16]
  40199a:	2000      	movs	r0, #0
  40199c:	f85d 4b04 	ldr.w	r4, [sp], #4
  4019a0:	4770      	bx	lr
  4019a2:	2100      	movs	r1, #0
  4019a4:	e7e6      	b.n	401974 <twihs_set_speed+0x38>
  4019a6:	0049      	lsls	r1, r1, #1
  4019a8:	fbb2 f2f1 	udiv	r2, r2, r1
  4019ac:	3a03      	subs	r2, #3
  4019ae:	2aff      	cmp	r2, #255	; 0xff
  4019b0:	d911      	bls.n	4019d6 <twihs_set_speed+0x9a>
  4019b2:	2300      	movs	r3, #0
  4019b4:	3301      	adds	r3, #1
  4019b6:	0852      	lsrs	r2, r2, #1
  4019b8:	2aff      	cmp	r2, #255	; 0xff
  4019ba:	d901      	bls.n	4019c0 <twihs_set_speed+0x84>
  4019bc:	2b06      	cmp	r3, #6
  4019be:	d9f9      	bls.n	4019b4 <twihs_set_speed+0x78>
  4019c0:	0211      	lsls	r1, r2, #8
  4019c2:	b289      	uxth	r1, r1
  4019c4:	041b      	lsls	r3, r3, #16
  4019c6:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
  4019ca:	430b      	orrs	r3, r1
  4019cc:	b2d2      	uxtb	r2, r2
  4019ce:	431a      	orrs	r2, r3
  4019d0:	6102      	str	r2, [r0, #16]
  4019d2:	2000      	movs	r0, #0
  4019d4:	4770      	bx	lr
  4019d6:	2300      	movs	r3, #0
  4019d8:	e7f2      	b.n	4019c0 <twihs_set_speed+0x84>
  4019da:	2001      	movs	r0, #1
  4019dc:	4770      	bx	lr
  4019de:	bf00      	nop
  4019e0:	00061a80 	.word	0x00061a80
  4019e4:	057619f1 	.word	0x057619f1
  4019e8:	3ffd1200 	.word	0x3ffd1200

004019ec <twihs_master_init>:
  4019ec:	b508      	push	{r3, lr}
  4019ee:	f04f 32ff 	mov.w	r2, #4294967295
  4019f2:	6282      	str	r2, [r0, #40]	; 0x28
  4019f4:	6a02      	ldr	r2, [r0, #32]
  4019f6:	2280      	movs	r2, #128	; 0x80
  4019f8:	6002      	str	r2, [r0, #0]
  4019fa:	6b02      	ldr	r2, [r0, #48]	; 0x30
  4019fc:	2208      	movs	r2, #8
  4019fe:	6002      	str	r2, [r0, #0]
  401a00:	2220      	movs	r2, #32
  401a02:	6002      	str	r2, [r0, #0]
  401a04:	2204      	movs	r2, #4
  401a06:	6002      	str	r2, [r0, #0]
  401a08:	680a      	ldr	r2, [r1, #0]
  401a0a:	6849      	ldr	r1, [r1, #4]
  401a0c:	4b03      	ldr	r3, [pc, #12]	; (401a1c <twihs_master_init+0x30>)
  401a0e:	4798      	blx	r3
  401a10:	2801      	cmp	r0, #1
  401a12:	bf14      	ite	ne
  401a14:	2000      	movne	r0, #0
  401a16:	2001      	moveq	r0, #1
  401a18:	bd08      	pop	{r3, pc}
  401a1a:	bf00      	nop
  401a1c:	0040193d 	.word	0x0040193d

00401a20 <twihs_master_read>:
  401a20:	68cb      	ldr	r3, [r1, #12]
  401a22:	2b00      	cmp	r3, #0
  401a24:	d04b      	beq.n	401abe <twihs_master_read+0x9e>
  401a26:	b470      	push	{r4, r5, r6}
  401a28:	688c      	ldr	r4, [r1, #8]
  401a2a:	2600      	movs	r6, #0
  401a2c:	6046      	str	r6, [r0, #4]
  401a2e:	684a      	ldr	r2, [r1, #4]
  401a30:	0212      	lsls	r2, r2, #8
  401a32:	f402 7240 	and.w	r2, r2, #768	; 0x300
  401a36:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  401a3a:	7c0d      	ldrb	r5, [r1, #16]
  401a3c:	042d      	lsls	r5, r5, #16
  401a3e:	f405 05fe 	and.w	r5, r5, #8323072	; 0x7f0000
  401a42:	432a      	orrs	r2, r5
  401a44:	6042      	str	r2, [r0, #4]
  401a46:	60c6      	str	r6, [r0, #12]
  401a48:	684d      	ldr	r5, [r1, #4]
  401a4a:	b15d      	cbz	r5, 401a64 <twihs_master_read+0x44>
  401a4c:	780a      	ldrb	r2, [r1, #0]
  401a4e:	2d01      	cmp	r5, #1
  401a50:	dd02      	ble.n	401a58 <twihs_master_read+0x38>
  401a52:	784e      	ldrb	r6, [r1, #1]
  401a54:	ea46 2202 	orr.w	r2, r6, r2, lsl #8
  401a58:	2d02      	cmp	r5, #2
  401a5a:	dd04      	ble.n	401a66 <twihs_master_read+0x46>
  401a5c:	7889      	ldrb	r1, [r1, #2]
  401a5e:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
  401a62:	e000      	b.n	401a66 <twihs_master_read+0x46>
  401a64:	2200      	movs	r2, #0
  401a66:	60c2      	str	r2, [r0, #12]
  401a68:	2201      	movs	r2, #1
  401a6a:	6002      	str	r2, [r0, #0]
  401a6c:	e006      	b.n	401a7c <twihs_master_read+0x5c>
  401a6e:	2b01      	cmp	r3, #1
  401a70:	d019      	beq.n	401aa6 <twihs_master_read+0x86>
  401a72:	6b02      	ldr	r2, [r0, #48]	; 0x30
  401a74:	f804 2b01 	strb.w	r2, [r4], #1
  401a78:	3b01      	subs	r3, #1
  401a7a:	d018      	beq.n	401aae <twihs_master_read+0x8e>
  401a7c:	6a02      	ldr	r2, [r0, #32]
  401a7e:	f412 7f80 	tst.w	r2, #256	; 0x100
  401a82:	d122      	bne.n	401aca <twihs_master_read+0xaa>
  401a84:	f012 0f02 	tst.w	r2, #2
  401a88:	d1f1      	bne.n	401a6e <twihs_master_read+0x4e>
  401a8a:	f247 5230 	movw	r2, #30000	; 0x7530
  401a8e:	6a01      	ldr	r1, [r0, #32]
  401a90:	f411 7f80 	tst.w	r1, #256	; 0x100
  401a94:	d115      	bne.n	401ac2 <twihs_master_read+0xa2>
  401a96:	3a01      	subs	r2, #1
  401a98:	d015      	beq.n	401ac6 <twihs_master_read+0xa6>
  401a9a:	f011 0f02 	tst.w	r1, #2
  401a9e:	d1e6      	bne.n	401a6e <twihs_master_read+0x4e>
  401aa0:	2b00      	cmp	r3, #0
  401aa2:	d1f4      	bne.n	401a8e <twihs_master_read+0x6e>
  401aa4:	e003      	b.n	401aae <twihs_master_read+0x8e>
  401aa6:	2302      	movs	r3, #2
  401aa8:	6003      	str	r3, [r0, #0]
  401aaa:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401aac:	7023      	strb	r3, [r4, #0]
  401aae:	6a03      	ldr	r3, [r0, #32]
  401ab0:	f013 0f01 	tst.w	r3, #1
  401ab4:	d0fb      	beq.n	401aae <twihs_master_read+0x8e>
  401ab6:	6a03      	ldr	r3, [r0, #32]
  401ab8:	2000      	movs	r0, #0
  401aba:	bc70      	pop	{r4, r5, r6}
  401abc:	4770      	bx	lr
  401abe:	2001      	movs	r0, #1
  401ac0:	4770      	bx	lr
  401ac2:	2005      	movs	r0, #5
  401ac4:	e7f9      	b.n	401aba <twihs_master_read+0x9a>
  401ac6:	2009      	movs	r0, #9
  401ac8:	e7f7      	b.n	401aba <twihs_master_read+0x9a>
  401aca:	2005      	movs	r0, #5
  401acc:	e7f5      	b.n	401aba <twihs_master_read+0x9a>

00401ace <uart_write>:
  401ace:	6943      	ldr	r3, [r0, #20]
  401ad0:	f013 0f02 	tst.w	r3, #2
  401ad4:	d002      	beq.n	401adc <uart_write+0xe>
  401ad6:	61c1      	str	r1, [r0, #28]
  401ad8:	2000      	movs	r0, #0
  401ada:	4770      	bx	lr
  401adc:	2001      	movs	r0, #1
  401ade:	4770      	bx	lr

00401ae0 <uart_read>:
  401ae0:	6943      	ldr	r3, [r0, #20]
  401ae2:	f013 0f01 	tst.w	r3, #1
  401ae6:	d003      	beq.n	401af0 <uart_read+0x10>
  401ae8:	6983      	ldr	r3, [r0, #24]
  401aea:	700b      	strb	r3, [r1, #0]
  401aec:	2000      	movs	r0, #0
  401aee:	4770      	bx	lr
  401af0:	2001      	movs	r0, #1
  401af2:	4770      	bx	lr

00401af4 <gmac_phy_read>:
 *
 * \Return GMAC_OK if successfully, GMAC_TIMEOUT if timeout.
 */
uint8_t gmac_phy_read(Gmac* p_gmac, uint8_t uc_phy_address, uint8_t uc_address,
		uint32_t* p_value)
{
  401af4:	b410      	push	{r4}
  401af6:	b083      	sub	sp, #12
	while ((p_gmac->GMAC_NSR & GMAC_NSR_IDLE) == 0);
  401af8:	6884      	ldr	r4, [r0, #8]
  401afa:	f014 0f04 	tst.w	r4, #4
  401afe:	d0fb      	beq.n	401af8 <gmac_phy_read+0x4>
			| GMAC_MAN_REGA(uc_reg_addr)
  401b00:	0492      	lsls	r2, r2, #18
  401b02:	f402 04f8 	and.w	r4, r2, #8126464	; 0x7c0000
			| GMAC_MAN_DATA(us_data);
  401b06:	4a11      	ldr	r2, [pc, #68]	; (401b4c <gmac_phy_read+0x58>)
  401b08:	4322      	orrs	r2, r4
			| GMAC_MAN_PHYA(uc_phy_addr)
  401b0a:	05c9      	lsls	r1, r1, #23
  401b0c:	f001 6178 	and.w	r1, r1, #260046848	; 0xf800000
			| GMAC_MAN_DATA(us_data);
  401b10:	430a      	orrs	r2, r1
	p_gmac->GMAC_MAN = GMAC_MAN_WTN(GMAC_MAN_CODE_VALUE)
  401b12:	6342      	str	r2, [r0, #52]	; 0x34
	volatile uint32_t ul_retry_count = 0;
  401b14:	2200      	movs	r2, #0
  401b16:	9201      	str	r2, [sp, #4]
		if (ul_retry_count >= ul_retry) {
  401b18:	490d      	ldr	r1, [pc, #52]	; (401b50 <gmac_phy_read+0x5c>)
	return ((p_gmac->GMAC_NSR & GMAC_NSR_IDLE) > 0);
  401b1a:	6882      	ldr	r2, [r0, #8]
	while (!gmac_is_phy_idle(p_gmac)) {
  401b1c:	f012 0f04 	tst.w	r2, #4
  401b20:	d107      	bne.n	401b32 <gmac_phy_read+0x3e>
		ul_retry_count++;
  401b22:	9a01      	ldr	r2, [sp, #4]
  401b24:	3201      	adds	r2, #1
  401b26:	9201      	str	r2, [sp, #4]
		if (ul_retry_count >= ul_retry) {
  401b28:	9a01      	ldr	r2, [sp, #4]
  401b2a:	428a      	cmp	r2, r1
  401b2c:	d9f5      	bls.n	401b1a <gmac_phy_read+0x26>
	gmac_maintain_phy(p_gmac, uc_phy_address, uc_address, 1, 0);

	if (gmac_phy_wait(p_gmac, MAC_PHY_RETRY_MAX) == GMAC_TIMEOUT) {
		return GMAC_TIMEOUT;
  401b2e:	2001      	movs	r0, #1
  401b30:	e007      	b.n	401b42 <gmac_phy_read+0x4e>
	while ((p_gmac->GMAC_NSR & GMAC_NSR_IDLE) == 0);
  401b32:	6882      	ldr	r2, [r0, #8]
  401b34:	f012 0f04 	tst.w	r2, #4
  401b38:	d0fb      	beq.n	401b32 <gmac_phy_read+0x3e>
	return (uint16_t) (p_gmac->GMAC_MAN & GMAC_MAN_DATA_Msk);
  401b3a:	6b42      	ldr	r2, [r0, #52]	; 0x34
	}
	*p_value = gmac_get_phy_data(p_gmac);
  401b3c:	b292      	uxth	r2, r2
  401b3e:	601a      	str	r2, [r3, #0]
	return GMAC_OK;
  401b40:	2000      	movs	r0, #0
}
  401b42:	b003      	add	sp, #12
  401b44:	f85d 4b04 	ldr.w	r4, [sp], #4
  401b48:	4770      	bx	lr
  401b4a:	bf00      	nop
  401b4c:	60020000 	.word	0x60020000
  401b50:	000f423f 	.word	0x000f423f

00401b54 <gmac_phy_write>:
 *
 * \Return GMAC_OK if successfully, GMAC_TIMEOUT if timeout.
 */
uint8_t gmac_phy_write(Gmac* p_gmac, uint8_t uc_phy_address,
		uint8_t uc_address, uint32_t ul_value)
{
  401b54:	b410      	push	{r4}
  401b56:	b083      	sub	sp, #12
	while ((p_gmac->GMAC_NSR & GMAC_NSR_IDLE) == 0);
  401b58:	6884      	ldr	r4, [r0, #8]
  401b5a:	f014 0f04 	tst.w	r4, #4
  401b5e:	d0fb      	beq.n	401b58 <gmac_phy_write+0x4>
			| GMAC_MAN_REGA(uc_reg_addr)
  401b60:	0492      	lsls	r2, r2, #18
  401b62:	f402 04f8 	and.w	r4, r2, #8126464	; 0x7c0000
			| GMAC_MAN_DATA(us_data);
  401b66:	4a0e      	ldr	r2, [pc, #56]	; (401ba0 <gmac_phy_write+0x4c>)
  401b68:	4322      	orrs	r2, r4
			| GMAC_MAN_PHYA(uc_phy_addr)
  401b6a:	05c9      	lsls	r1, r1, #23
  401b6c:	f001 6178 	and.w	r1, r1, #260046848	; 0xf800000
			| GMAC_MAN_DATA(us_data);
  401b70:	430a      	orrs	r2, r1
  401b72:	b29b      	uxth	r3, r3
  401b74:	431a      	orrs	r2, r3
	p_gmac->GMAC_MAN = GMAC_MAN_WTN(GMAC_MAN_CODE_VALUE)
  401b76:	6342      	str	r2, [r0, #52]	; 0x34
	volatile uint32_t ul_retry_count = 0;
  401b78:	2300      	movs	r3, #0
  401b7a:	9301      	str	r3, [sp, #4]
		if (ul_retry_count >= ul_retry) {
  401b7c:	4a09      	ldr	r2, [pc, #36]	; (401ba4 <gmac_phy_write+0x50>)
	return ((p_gmac->GMAC_NSR & GMAC_NSR_IDLE) > 0);
  401b7e:	6883      	ldr	r3, [r0, #8]
	while (!gmac_is_phy_idle(p_gmac)) {
  401b80:	f013 0f04 	tst.w	r3, #4
  401b84:	d107      	bne.n	401b96 <gmac_phy_write+0x42>
		ul_retry_count++;
  401b86:	9b01      	ldr	r3, [sp, #4]
  401b88:	3301      	adds	r3, #1
  401b8a:	9301      	str	r3, [sp, #4]
		if (ul_retry_count >= ul_retry) {
  401b8c:	9b01      	ldr	r3, [sp, #4]
  401b8e:	4293      	cmp	r3, r2
  401b90:	d9f5      	bls.n	401b7e <gmac_phy_write+0x2a>
			return GMAC_TIMEOUT;
  401b92:	2001      	movs	r0, #1
  401b94:	e000      	b.n	401b98 <gmac_phy_write+0x44>
	return GMAC_OK;
  401b96:	2000      	movs	r0, #0

	if (gmac_phy_wait(p_gmac, MAC_PHY_RETRY_MAX) == GMAC_TIMEOUT) {
		return GMAC_TIMEOUT;
	}
	return GMAC_OK;
}
  401b98:	b003      	add	sp, #12
  401b9a:	f85d 4b04 	ldr.w	r4, [sp], #4
  401b9e:	4770      	bx	lr
  401ba0:	50020000 	.word	0x50020000
  401ba4:	000f423f 	.word	0x000f423f

00401ba8 <sysclk_init>:
  401ba8:	b510      	push	{r4, lr}
  401baa:	4810      	ldr	r0, [pc, #64]	; (401bec <sysclk_init+0x44>)
  401bac:	4b10      	ldr	r3, [pc, #64]	; (401bf0 <sysclk_init+0x48>)
  401bae:	4798      	blx	r3
  401bb0:	213e      	movs	r1, #62	; 0x3e
  401bb2:	2000      	movs	r0, #0
  401bb4:	4b0f      	ldr	r3, [pc, #60]	; (401bf4 <sysclk_init+0x4c>)
  401bb6:	4798      	blx	r3
  401bb8:	4c0f      	ldr	r4, [pc, #60]	; (401bf8 <sysclk_init+0x50>)
  401bba:	47a0      	blx	r4
  401bbc:	2800      	cmp	r0, #0
  401bbe:	d0fc      	beq.n	401bba <sysclk_init+0x12>
  401bc0:	4b0e      	ldr	r3, [pc, #56]	; (401bfc <sysclk_init+0x54>)
  401bc2:	4798      	blx	r3
  401bc4:	4a0e      	ldr	r2, [pc, #56]	; (401c00 <sysclk_init+0x58>)
  401bc6:	4b0f      	ldr	r3, [pc, #60]	; (401c04 <sysclk_init+0x5c>)
  401bc8:	629a      	str	r2, [r3, #40]	; 0x28
  401bca:	4c0f      	ldr	r4, [pc, #60]	; (401c08 <sysclk_init+0x60>)
  401bcc:	47a0      	blx	r4
  401bce:	2800      	cmp	r0, #0
  401bd0:	d0fc      	beq.n	401bcc <sysclk_init+0x24>
  401bd2:	2002      	movs	r0, #2
  401bd4:	4b0d      	ldr	r3, [pc, #52]	; (401c0c <sysclk_init+0x64>)
  401bd6:	4798      	blx	r3
  401bd8:	2000      	movs	r0, #0
  401bda:	4b0d      	ldr	r3, [pc, #52]	; (401c10 <sysclk_init+0x68>)
  401bdc:	4798      	blx	r3
  401bde:	4b0d      	ldr	r3, [pc, #52]	; (401c14 <sysclk_init+0x6c>)
  401be0:	4798      	blx	r3
  401be2:	4802      	ldr	r0, [pc, #8]	; (401bec <sysclk_init+0x44>)
  401be4:	4b02      	ldr	r3, [pc, #8]	; (401bf0 <sysclk_init+0x48>)
  401be6:	4798      	blx	r3
  401be8:	bd10      	pop	{r4, pc}
  401bea:	bf00      	nop
  401bec:	08f0d180 	.word	0x08f0d180
  401bf0:	004022b5 	.word	0x004022b5
  401bf4:	00402039 	.word	0x00402039
  401bf8:	0040208d 	.word	0x0040208d
  401bfc:	0040209d 	.word	0x0040209d
  401c00:	20183f01 	.word	0x20183f01
  401c04:	400e0600 	.word	0x400e0600
  401c08:	004020ad 	.word	0x004020ad
  401c0c:	00401f9d 	.word	0x00401f9d
  401c10:	00401fd5 	.word	0x00401fd5
  401c14:	004021a9 	.word	0x004021a9

00401c18 <board_init>:
  401c18:	b510      	push	{r4, lr}
  401c1a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  401c1e:	4b6e      	ldr	r3, [pc, #440]	; (401dd8 <board_init+0x1c0>)
  401c20:	605a      	str	r2, [r3, #4]
  401c22:	f5a3 6345 	sub.w	r3, r3, #3152	; 0xc50
  401c26:	4a6d      	ldr	r2, [pc, #436]	; (401ddc <board_init+0x1c4>)
  401c28:	605a      	str	r2, [r3, #4]
  401c2a:	f5a2 7280 	sub.w	r2, r2, #256	; 0x100
  401c2e:	605a      	str	r2, [r3, #4]
  401c30:	f3bf 8f4f 	dsb	sy
  401c34:	f3bf 8f6f 	isb	sy
  401c38:	4b69      	ldr	r3, [pc, #420]	; (401de0 <board_init+0x1c8>)
  401c3a:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  401c3e:	f022 0201 	bic.w	r2, r2, #1
  401c42:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
  401c46:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  401c4a:	f022 0201 	bic.w	r2, r2, #1
  401c4e:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  401c52:	f3bf 8f4f 	dsb	sy
  401c56:	f3bf 8f6f 	isb	sy
  401c5a:	200a      	movs	r0, #10
  401c5c:	4c61      	ldr	r4, [pc, #388]	; (401de4 <board_init+0x1cc>)
  401c5e:	47a0      	blx	r4
  401c60:	200b      	movs	r0, #11
  401c62:	47a0      	blx	r4
  401c64:	200c      	movs	r0, #12
  401c66:	47a0      	blx	r4
  401c68:	2010      	movs	r0, #16
  401c6a:	47a0      	blx	r4
  401c6c:	2011      	movs	r0, #17
  401c6e:	47a0      	blx	r4
  401c70:	4b5d      	ldr	r3, [pc, #372]	; (401de8 <board_init+0x1d0>)
  401c72:	f44f 7280 	mov.w	r2, #256	; 0x100
  401c76:	611a      	str	r2, [r3, #16]
  401c78:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  401c7c:	631a      	str	r2, [r3, #48]	; 0x30
  401c7e:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  401c82:	f44f 6200 	mov.w	r2, #2048	; 0x800
  401c86:	615a      	str	r2, [r3, #20]
  401c88:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  401c8c:	665a      	str	r2, [r3, #100]	; 0x64
  401c8e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
  401c92:	655a      	str	r2, [r3, #84]	; 0x54
  401c94:	621a      	str	r2, [r3, #32]
  401c96:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  401c9a:	6f19      	ldr	r1, [r3, #112]	; 0x70
  401c9c:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  401ca0:	6719      	str	r1, [r3, #112]	; 0x70
  401ca2:	6f59      	ldr	r1, [r3, #116]	; 0x74
  401ca4:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  401ca8:	6759      	str	r1, [r3, #116]	; 0x74
  401caa:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
  401cae:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
  401cb2:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  401cb6:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  401cba:	661a      	str	r2, [r3, #96]	; 0x60
  401cbc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
  401cc0:	655a      	str	r2, [r3, #84]	; 0x54
  401cc2:	625a      	str	r2, [r3, #36]	; 0x24
  401cc4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  401cc8:	6f19      	ldr	r1, [r3, #112]	; 0x70
  401cca:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  401cce:	6719      	str	r1, [r3, #112]	; 0x70
  401cd0:	6f59      	ldr	r1, [r3, #116]	; 0x74
  401cd2:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  401cd6:	6759      	str	r1, [r3, #116]	; 0x74
  401cd8:	605a      	str	r2, [r3, #4]
  401cda:	4844      	ldr	r0, [pc, #272]	; (401dec <board_init+0x1d4>)
  401cdc:	f8d0 1114 	ldr.w	r1, [r0, #276]	; 0x114
  401ce0:	f041 0110 	orr.w	r1, r1, #16
  401ce4:	f8c0 1114 	str.w	r1, [r0, #276]	; 0x114
  401ce8:	f500 20b2 	add.w	r0, r0, #364544	; 0x59000
  401cec:	2110      	movs	r1, #16
  401cee:	6601      	str	r1, [r0, #96]	; 0x60
  401cf0:	f8c0 1090 	str.w	r1, [r0, #144]	; 0x90
  401cf4:	6541      	str	r1, [r0, #84]	; 0x54
  401cf6:	6241      	str	r1, [r0, #36]	; 0x24
  401cf8:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  401cfc:	6f04      	ldr	r4, [r0, #112]	; 0x70
  401cfe:	430c      	orrs	r4, r1
  401d00:	6704      	str	r4, [r0, #112]	; 0x70
  401d02:	6f44      	ldr	r4, [r0, #116]	; 0x74
  401d04:	430c      	orrs	r4, r1
  401d06:	6744      	str	r4, [r0, #116]	; 0x74
  401d08:	6041      	str	r1, [r0, #4]
  401d0a:	2008      	movs	r0, #8
  401d0c:	6618      	str	r0, [r3, #96]	; 0x60
  401d0e:	f8c3 0090 	str.w	r0, [r3, #144]	; 0x90
  401d12:	6558      	str	r0, [r3, #84]	; 0x54
  401d14:	6258      	str	r0, [r3, #36]	; 0x24
  401d16:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
  401d1a:	6f1c      	ldr	r4, [r3, #112]	; 0x70
  401d1c:	f024 0408 	bic.w	r4, r4, #8
  401d20:	671c      	str	r4, [r3, #112]	; 0x70
  401d22:	6f5c      	ldr	r4, [r3, #116]	; 0x74
  401d24:	f024 0408 	bic.w	r4, r4, #8
  401d28:	675c      	str	r4, [r3, #116]	; 0x74
  401d2a:	6058      	str	r0, [r3, #4]
  401d2c:	6619      	str	r1, [r3, #96]	; 0x60
  401d2e:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
  401d32:	6559      	str	r1, [r3, #84]	; 0x54
  401d34:	6259      	str	r1, [r3, #36]	; 0x24
  401d36:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
  401d3a:	6f18      	ldr	r0, [r3, #112]	; 0x70
  401d3c:	f020 0010 	bic.w	r0, r0, #16
  401d40:	6718      	str	r0, [r3, #112]	; 0x70
  401d42:	6f58      	ldr	r0, [r3, #116]	; 0x74
  401d44:	f020 0010 	bic.w	r0, r0, #16
  401d48:	6758      	str	r0, [r3, #116]	; 0x74
  401d4a:	6059      	str	r1, [r3, #4]
  401d4c:	f503 63c0 	add.w	r3, r3, #1536	; 0x600
  401d50:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  401d54:	6619      	str	r1, [r3, #96]	; 0x60
  401d56:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
  401d5a:	6559      	str	r1, [r3, #84]	; 0x54
  401d5c:	6259      	str	r1, [r3, #36]	; 0x24
  401d5e:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
  401d62:	6f18      	ldr	r0, [r3, #112]	; 0x70
  401d64:	4308      	orrs	r0, r1
  401d66:	6718      	str	r0, [r3, #112]	; 0x70
  401d68:	6f58      	ldr	r0, [r3, #116]	; 0x74
  401d6a:	f420 1080 	bic.w	r0, r0, #1048576	; 0x100000
  401d6e:	6758      	str	r0, [r3, #116]	; 0x74
  401d70:	6059      	str	r1, [r3, #4]
  401d72:	661a      	str	r2, [r3, #96]	; 0x60
  401d74:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
  401d78:	655a      	str	r2, [r3, #84]	; 0x54
  401d7a:	625a      	str	r2, [r3, #36]	; 0x24
  401d7c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  401d80:	6f19      	ldr	r1, [r3, #112]	; 0x70
  401d82:	4311      	orrs	r1, r2
  401d84:	6719      	str	r1, [r3, #112]	; 0x70
  401d86:	6f59      	ldr	r1, [r3, #116]	; 0x74
  401d88:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  401d8c:	6759      	str	r1, [r3, #116]	; 0x74
  401d8e:	605a      	str	r2, [r3, #4]
  401d90:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  401d94:	661a      	str	r2, [r3, #96]	; 0x60
  401d96:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
  401d9a:	655a      	str	r2, [r3, #84]	; 0x54
  401d9c:	625a      	str	r2, [r3, #36]	; 0x24
  401d9e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  401da2:	6f19      	ldr	r1, [r3, #112]	; 0x70
  401da4:	4311      	orrs	r1, r2
  401da6:	6719      	str	r1, [r3, #112]	; 0x70
  401da8:	6f59      	ldr	r1, [r3, #116]	; 0x74
  401daa:	f421 0180 	bic.w	r1, r1, #4194304	; 0x400000
  401dae:	6759      	str	r1, [r3, #116]	; 0x74
  401db0:	605a      	str	r2, [r3, #4]
  401db2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  401db6:	661a      	str	r2, [r3, #96]	; 0x60
  401db8:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
  401dbc:	655a      	str	r2, [r3, #84]	; 0x54
  401dbe:	625a      	str	r2, [r3, #36]	; 0x24
  401dc0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  401dc4:	6f19      	ldr	r1, [r3, #112]	; 0x70
  401dc6:	4311      	orrs	r1, r2
  401dc8:	6719      	str	r1, [r3, #112]	; 0x70
  401dca:	6f59      	ldr	r1, [r3, #116]	; 0x74
  401dcc:	f021 7100 	bic.w	r1, r1, #33554432	; 0x2000000
  401dd0:	6759      	str	r1, [r3, #116]	; 0x74
  401dd2:	605a      	str	r2, [r3, #4]
  401dd4:	bd10      	pop	{r4, pc}
  401dd6:	bf00      	nop
  401dd8:	400e1850 	.word	0x400e1850
  401ddc:	5a00080c 	.word	0x5a00080c
  401de0:	e000ed00 	.word	0xe000ed00
  401de4:	004020bd 	.word	0x004020bd
  401de8:	400e1200 	.word	0x400e1200
  401dec:	40088000 	.word	0x40088000

00401df0 <pio_set_peripheral>:
  401df0:	6442      	str	r2, [r0, #68]	; 0x44
  401df2:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  401df6:	d03a      	beq.n	401e6e <pio_set_peripheral+0x7e>
  401df8:	d813      	bhi.n	401e22 <pio_set_peripheral+0x32>
  401dfa:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  401dfe:	d025      	beq.n	401e4c <pio_set_peripheral+0x5c>
  401e00:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  401e04:	d10a      	bne.n	401e1c <pio_set_peripheral+0x2c>
  401e06:	6f03      	ldr	r3, [r0, #112]	; 0x70
  401e08:	4313      	orrs	r3, r2
  401e0a:	6703      	str	r3, [r0, #112]	; 0x70
  401e0c:	6f43      	ldr	r3, [r0, #116]	; 0x74
  401e0e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  401e10:	400b      	ands	r3, r1
  401e12:	ea23 0302 	bic.w	r3, r3, r2
  401e16:	6743      	str	r3, [r0, #116]	; 0x74
  401e18:	6042      	str	r2, [r0, #4]
  401e1a:	4770      	bx	lr
  401e1c:	2900      	cmp	r1, #0
  401e1e:	d1fb      	bne.n	401e18 <pio_set_peripheral+0x28>
  401e20:	4770      	bx	lr
  401e22:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  401e26:	d021      	beq.n	401e6c <pio_set_peripheral+0x7c>
  401e28:	d809      	bhi.n	401e3e <pio_set_peripheral+0x4e>
  401e2a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  401e2e:	d1f3      	bne.n	401e18 <pio_set_peripheral+0x28>
  401e30:	6f03      	ldr	r3, [r0, #112]	; 0x70
  401e32:	4313      	orrs	r3, r2
  401e34:	6703      	str	r3, [r0, #112]	; 0x70
  401e36:	6f43      	ldr	r3, [r0, #116]	; 0x74
  401e38:	4313      	orrs	r3, r2
  401e3a:	6743      	str	r3, [r0, #116]	; 0x74
  401e3c:	e7ec      	b.n	401e18 <pio_set_peripheral+0x28>
  401e3e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  401e42:	d013      	beq.n	401e6c <pio_set_peripheral+0x7c>
  401e44:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  401e48:	d010      	beq.n	401e6c <pio_set_peripheral+0x7c>
  401e4a:	e7e5      	b.n	401e18 <pio_set_peripheral+0x28>
  401e4c:	b410      	push	{r4}
  401e4e:	6f01      	ldr	r1, [r0, #112]	; 0x70
  401e50:	6f04      	ldr	r4, [r0, #112]	; 0x70
  401e52:	43d3      	mvns	r3, r2
  401e54:	4021      	ands	r1, r4
  401e56:	461c      	mov	r4, r3
  401e58:	4019      	ands	r1, r3
  401e5a:	6701      	str	r1, [r0, #112]	; 0x70
  401e5c:	6f43      	ldr	r3, [r0, #116]	; 0x74
  401e5e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  401e60:	400b      	ands	r3, r1
  401e62:	4023      	ands	r3, r4
  401e64:	6743      	str	r3, [r0, #116]	; 0x74
  401e66:	6042      	str	r2, [r0, #4]
  401e68:	f85d 4b04 	ldr.w	r4, [sp], #4
  401e6c:	4770      	bx	lr
  401e6e:	6f03      	ldr	r3, [r0, #112]	; 0x70
  401e70:	6f01      	ldr	r1, [r0, #112]	; 0x70
  401e72:	400b      	ands	r3, r1
  401e74:	ea23 0302 	bic.w	r3, r3, r2
  401e78:	6703      	str	r3, [r0, #112]	; 0x70
  401e7a:	6f43      	ldr	r3, [r0, #116]	; 0x74
  401e7c:	4313      	orrs	r3, r2
  401e7e:	6743      	str	r3, [r0, #116]	; 0x74
  401e80:	e7ca      	b.n	401e18 <pio_set_peripheral+0x28>

00401e82 <pio_set_input>:
  401e82:	6441      	str	r1, [r0, #68]	; 0x44
  401e84:	f012 0f01 	tst.w	r2, #1
  401e88:	d10d      	bne.n	401ea6 <pio_set_input+0x24>
  401e8a:	6601      	str	r1, [r0, #96]	; 0x60
  401e8c:	f012 0f0a 	tst.w	r2, #10
  401e90:	d00b      	beq.n	401eaa <pio_set_input+0x28>
  401e92:	6201      	str	r1, [r0, #32]
  401e94:	f012 0f02 	tst.w	r2, #2
  401e98:	d109      	bne.n	401eae <pio_set_input+0x2c>
  401e9a:	f012 0f08 	tst.w	r2, #8
  401e9e:	d008      	beq.n	401eb2 <pio_set_input+0x30>
  401ea0:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  401ea4:	e005      	b.n	401eb2 <pio_set_input+0x30>
  401ea6:	6641      	str	r1, [r0, #100]	; 0x64
  401ea8:	e7f0      	b.n	401e8c <pio_set_input+0xa>
  401eaa:	6241      	str	r1, [r0, #36]	; 0x24
  401eac:	e7f2      	b.n	401e94 <pio_set_input+0x12>
  401eae:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  401eb2:	6141      	str	r1, [r0, #20]
  401eb4:	6001      	str	r1, [r0, #0]
  401eb6:	4770      	bx	lr

00401eb8 <pio_set_output>:
  401eb8:	b410      	push	{r4}
  401eba:	9c01      	ldr	r4, [sp, #4]
  401ebc:	6441      	str	r1, [r0, #68]	; 0x44
  401ebe:	b94c      	cbnz	r4, 401ed4 <pio_set_output+0x1c>
  401ec0:	6601      	str	r1, [r0, #96]	; 0x60
  401ec2:	b14b      	cbz	r3, 401ed8 <pio_set_output+0x20>
  401ec4:	6501      	str	r1, [r0, #80]	; 0x50
  401ec6:	b94a      	cbnz	r2, 401edc <pio_set_output+0x24>
  401ec8:	6341      	str	r1, [r0, #52]	; 0x34
  401eca:	6101      	str	r1, [r0, #16]
  401ecc:	6001      	str	r1, [r0, #0]
  401ece:	f85d 4b04 	ldr.w	r4, [sp], #4
  401ed2:	4770      	bx	lr
  401ed4:	6641      	str	r1, [r0, #100]	; 0x64
  401ed6:	e7f4      	b.n	401ec2 <pio_set_output+0xa>
  401ed8:	6541      	str	r1, [r0, #84]	; 0x54
  401eda:	e7f4      	b.n	401ec6 <pio_set_output+0xe>
  401edc:	6301      	str	r1, [r0, #48]	; 0x30
  401ede:	e7f4      	b.n	401eca <pio_set_output+0x12>

00401ee0 <pio_get_interrupt_status>:
  401ee0:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
  401ee2:	4770      	bx	lr

00401ee4 <pio_get_interrupt_mask>:
  401ee4:	6c80      	ldr	r0, [r0, #72]	; 0x48
  401ee6:	4770      	bx	lr

00401ee8 <pio_handler_process>:
  401ee8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401eec:	4604      	mov	r4, r0
  401eee:	4688      	mov	r8, r1
  401ef0:	4b0e      	ldr	r3, [pc, #56]	; (401f2c <pio_handler_process+0x44>)
  401ef2:	4798      	blx	r3
  401ef4:	4605      	mov	r5, r0
  401ef6:	4620      	mov	r0, r4
  401ef8:	4b0d      	ldr	r3, [pc, #52]	; (401f30 <pio_handler_process+0x48>)
  401efa:	4798      	blx	r3
  401efc:	4005      	ands	r5, r0
  401efe:	d013      	beq.n	401f28 <pio_handler_process+0x40>
  401f00:	4c0c      	ldr	r4, [pc, #48]	; (401f34 <pio_handler_process+0x4c>)
  401f02:	f104 0660 	add.w	r6, r4, #96	; 0x60
  401f06:	e003      	b.n	401f10 <pio_handler_process+0x28>
  401f08:	42b4      	cmp	r4, r6
  401f0a:	d00d      	beq.n	401f28 <pio_handler_process+0x40>
  401f0c:	3410      	adds	r4, #16
  401f0e:	b15d      	cbz	r5, 401f28 <pio_handler_process+0x40>
  401f10:	6820      	ldr	r0, [r4, #0]
  401f12:	4540      	cmp	r0, r8
  401f14:	d1f8      	bne.n	401f08 <pio_handler_process+0x20>
  401f16:	6861      	ldr	r1, [r4, #4]
  401f18:	4229      	tst	r1, r5
  401f1a:	d0f5      	beq.n	401f08 <pio_handler_process+0x20>
  401f1c:	68e3      	ldr	r3, [r4, #12]
  401f1e:	4798      	blx	r3
  401f20:	6863      	ldr	r3, [r4, #4]
  401f22:	ea25 0503 	bic.w	r5, r5, r3
  401f26:	e7ef      	b.n	401f08 <pio_handler_process+0x20>
  401f28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401f2c:	00401ee1 	.word	0x00401ee1
  401f30:	00401ee5 	.word	0x00401ee5
  401f34:	20407228 	.word	0x20407228

00401f38 <PIOA_Handler>:
  401f38:	b508      	push	{r3, lr}
  401f3a:	210a      	movs	r1, #10
  401f3c:	4801      	ldr	r0, [pc, #4]	; (401f44 <PIOA_Handler+0xc>)
  401f3e:	4b02      	ldr	r3, [pc, #8]	; (401f48 <PIOA_Handler+0x10>)
  401f40:	4798      	blx	r3
  401f42:	bd08      	pop	{r3, pc}
  401f44:	400e0e00 	.word	0x400e0e00
  401f48:	00401ee9 	.word	0x00401ee9

00401f4c <PIOB_Handler>:
  401f4c:	b508      	push	{r3, lr}
  401f4e:	210b      	movs	r1, #11
  401f50:	4801      	ldr	r0, [pc, #4]	; (401f58 <PIOB_Handler+0xc>)
  401f52:	4b02      	ldr	r3, [pc, #8]	; (401f5c <PIOB_Handler+0x10>)
  401f54:	4798      	blx	r3
  401f56:	bd08      	pop	{r3, pc}
  401f58:	400e1000 	.word	0x400e1000
  401f5c:	00401ee9 	.word	0x00401ee9

00401f60 <PIOC_Handler>:
  401f60:	b508      	push	{r3, lr}
  401f62:	210c      	movs	r1, #12
  401f64:	4801      	ldr	r0, [pc, #4]	; (401f6c <PIOC_Handler+0xc>)
  401f66:	4b02      	ldr	r3, [pc, #8]	; (401f70 <PIOC_Handler+0x10>)
  401f68:	4798      	blx	r3
  401f6a:	bd08      	pop	{r3, pc}
  401f6c:	400e1200 	.word	0x400e1200
  401f70:	00401ee9 	.word	0x00401ee9

00401f74 <PIOD_Handler>:
  401f74:	b508      	push	{r3, lr}
  401f76:	2110      	movs	r1, #16
  401f78:	4801      	ldr	r0, [pc, #4]	; (401f80 <PIOD_Handler+0xc>)
  401f7a:	4b02      	ldr	r3, [pc, #8]	; (401f84 <PIOD_Handler+0x10>)
  401f7c:	4798      	blx	r3
  401f7e:	bd08      	pop	{r3, pc}
  401f80:	400e1400 	.word	0x400e1400
  401f84:	00401ee9 	.word	0x00401ee9

00401f88 <PIOE_Handler>:
  401f88:	b508      	push	{r3, lr}
  401f8a:	2111      	movs	r1, #17
  401f8c:	4801      	ldr	r0, [pc, #4]	; (401f94 <PIOE_Handler+0xc>)
  401f8e:	4b02      	ldr	r3, [pc, #8]	; (401f98 <PIOE_Handler+0x10>)
  401f90:	4798      	blx	r3
  401f92:	bd08      	pop	{r3, pc}
  401f94:	400e1600 	.word	0x400e1600
  401f98:	00401ee9 	.word	0x00401ee9

00401f9c <pmc_mck_set_division>:
  401f9c:	2803      	cmp	r0, #3
  401f9e:	d011      	beq.n	401fc4 <pmc_mck_set_division+0x28>
  401fa0:	2804      	cmp	r0, #4
  401fa2:	d012      	beq.n	401fca <pmc_mck_set_division+0x2e>
  401fa4:	2802      	cmp	r0, #2
  401fa6:	bf0c      	ite	eq
  401fa8:	f44f 7180 	moveq.w	r1, #256	; 0x100
  401fac:	2100      	movne	r1, #0
  401fae:	4a08      	ldr	r2, [pc, #32]	; (401fd0 <pmc_mck_set_division+0x34>)
  401fb0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401fb2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  401fb6:	430b      	orrs	r3, r1
  401fb8:	6313      	str	r3, [r2, #48]	; 0x30
  401fba:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401fbc:	f013 0f08 	tst.w	r3, #8
  401fc0:	d0fb      	beq.n	401fba <pmc_mck_set_division+0x1e>
  401fc2:	4770      	bx	lr
  401fc4:	f44f 7140 	mov.w	r1, #768	; 0x300
  401fc8:	e7f1      	b.n	401fae <pmc_mck_set_division+0x12>
  401fca:	f44f 7100 	mov.w	r1, #512	; 0x200
  401fce:	e7ee      	b.n	401fae <pmc_mck_set_division+0x12>
  401fd0:	400e0600 	.word	0x400e0600

00401fd4 <pmc_switch_mck_to_pllack>:
  401fd4:	4a17      	ldr	r2, [pc, #92]	; (402034 <pmc_switch_mck_to_pllack+0x60>)
  401fd6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401fd8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  401fdc:	4318      	orrs	r0, r3
  401fde:	6310      	str	r0, [r2, #48]	; 0x30
  401fe0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401fe2:	f013 0f08 	tst.w	r3, #8
  401fe6:	d10a      	bne.n	401ffe <pmc_switch_mck_to_pllack+0x2a>
  401fe8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  401fec:	4911      	ldr	r1, [pc, #68]	; (402034 <pmc_switch_mck_to_pllack+0x60>)
  401fee:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401ff0:	f012 0f08 	tst.w	r2, #8
  401ff4:	d103      	bne.n	401ffe <pmc_switch_mck_to_pllack+0x2a>
  401ff6:	3b01      	subs	r3, #1
  401ff8:	d1f9      	bne.n	401fee <pmc_switch_mck_to_pllack+0x1a>
  401ffa:	2001      	movs	r0, #1
  401ffc:	4770      	bx	lr
  401ffe:	4a0d      	ldr	r2, [pc, #52]	; (402034 <pmc_switch_mck_to_pllack+0x60>)
  402000:	6b13      	ldr	r3, [r2, #48]	; 0x30
  402002:	f023 0303 	bic.w	r3, r3, #3
  402006:	f043 0302 	orr.w	r3, r3, #2
  40200a:	6313      	str	r3, [r2, #48]	; 0x30
  40200c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40200e:	f013 0f08 	tst.w	r3, #8
  402012:	d10a      	bne.n	40202a <pmc_switch_mck_to_pllack+0x56>
  402014:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  402018:	4906      	ldr	r1, [pc, #24]	; (402034 <pmc_switch_mck_to_pllack+0x60>)
  40201a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40201c:	f012 0f08 	tst.w	r2, #8
  402020:	d105      	bne.n	40202e <pmc_switch_mck_to_pllack+0x5a>
  402022:	3b01      	subs	r3, #1
  402024:	d1f9      	bne.n	40201a <pmc_switch_mck_to_pllack+0x46>
  402026:	2001      	movs	r0, #1
  402028:	4770      	bx	lr
  40202a:	2000      	movs	r0, #0
  40202c:	4770      	bx	lr
  40202e:	2000      	movs	r0, #0
  402030:	4770      	bx	lr
  402032:	bf00      	nop
  402034:	400e0600 	.word	0x400e0600

00402038 <pmc_switch_mainck_to_xtal>:
  402038:	b9a0      	cbnz	r0, 402064 <pmc_switch_mainck_to_xtal+0x2c>
  40203a:	480e      	ldr	r0, [pc, #56]	; (402074 <pmc_switch_mainck_to_xtal+0x3c>)
  40203c:	6a03      	ldr	r3, [r0, #32]
  40203e:	0209      	lsls	r1, r1, #8
  402040:	b289      	uxth	r1, r1
  402042:	4a0d      	ldr	r2, [pc, #52]	; (402078 <pmc_switch_mainck_to_xtal+0x40>)
  402044:	401a      	ands	r2, r3
  402046:	4b0d      	ldr	r3, [pc, #52]	; (40207c <pmc_switch_mainck_to_xtal+0x44>)
  402048:	4313      	orrs	r3, r2
  40204a:	4319      	orrs	r1, r3
  40204c:	6201      	str	r1, [r0, #32]
  40204e:	4602      	mov	r2, r0
  402050:	6e93      	ldr	r3, [r2, #104]	; 0x68
  402052:	f013 0f01 	tst.w	r3, #1
  402056:	d0fb      	beq.n	402050 <pmc_switch_mainck_to_xtal+0x18>
  402058:	4a06      	ldr	r2, [pc, #24]	; (402074 <pmc_switch_mainck_to_xtal+0x3c>)
  40205a:	6a11      	ldr	r1, [r2, #32]
  40205c:	4b08      	ldr	r3, [pc, #32]	; (402080 <pmc_switch_mainck_to_xtal+0x48>)
  40205e:	430b      	orrs	r3, r1
  402060:	6213      	str	r3, [r2, #32]
  402062:	4770      	bx	lr
  402064:	4903      	ldr	r1, [pc, #12]	; (402074 <pmc_switch_mainck_to_xtal+0x3c>)
  402066:	6a0b      	ldr	r3, [r1, #32]
  402068:	4a06      	ldr	r2, [pc, #24]	; (402084 <pmc_switch_mainck_to_xtal+0x4c>)
  40206a:	401a      	ands	r2, r3
  40206c:	4b06      	ldr	r3, [pc, #24]	; (402088 <pmc_switch_mainck_to_xtal+0x50>)
  40206e:	4313      	orrs	r3, r2
  402070:	620b      	str	r3, [r1, #32]
  402072:	4770      	bx	lr
  402074:	400e0600 	.word	0x400e0600
  402078:	ffc8fffc 	.word	0xffc8fffc
  40207c:	00370001 	.word	0x00370001
  402080:	01370000 	.word	0x01370000
  402084:	fec8fffc 	.word	0xfec8fffc
  402088:	01370002 	.word	0x01370002

0040208c <pmc_osc_is_ready_mainck>:
  40208c:	4b02      	ldr	r3, [pc, #8]	; (402098 <pmc_osc_is_ready_mainck+0xc>)
  40208e:	6e98      	ldr	r0, [r3, #104]	; 0x68
  402090:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  402094:	4770      	bx	lr
  402096:	bf00      	nop
  402098:	400e0600 	.word	0x400e0600

0040209c <pmc_disable_pllack>:
  40209c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4020a0:	4b01      	ldr	r3, [pc, #4]	; (4020a8 <pmc_disable_pllack+0xc>)
  4020a2:	629a      	str	r2, [r3, #40]	; 0x28
  4020a4:	4770      	bx	lr
  4020a6:	bf00      	nop
  4020a8:	400e0600 	.word	0x400e0600

004020ac <pmc_is_locked_pllack>:
  4020ac:	4b02      	ldr	r3, [pc, #8]	; (4020b8 <pmc_is_locked_pllack+0xc>)
  4020ae:	6e98      	ldr	r0, [r3, #104]	; 0x68
  4020b0:	f000 0002 	and.w	r0, r0, #2
  4020b4:	4770      	bx	lr
  4020b6:	bf00      	nop
  4020b8:	400e0600 	.word	0x400e0600

004020bc <pmc_enable_periph_clk>:
  4020bc:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  4020c0:	4b05      	ldr	r3, [pc, #20]	; (4020d8 <pmc_enable_periph_clk+0x1c>)
  4020c2:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
  4020c6:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  4020ca:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
  4020ce:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
  4020d2:	2000      	movs	r0, #0
  4020d4:	4770      	bx	lr
  4020d6:	bf00      	nop
  4020d8:	400e0600 	.word	0x400e0600

004020dc <Dummy_Handler>:
  4020dc:	e7fe      	b.n	4020dc <Dummy_Handler>
	...

004020e0 <Reset_Handler>:
  4020e0:	b500      	push	{lr}
  4020e2:	b083      	sub	sp, #12
  4020e4:	4b25      	ldr	r3, [pc, #148]	; (40217c <Reset_Handler+0x9c>)
  4020e6:	4a26      	ldr	r2, [pc, #152]	; (402180 <Reset_Handler+0xa0>)
  4020e8:	429a      	cmp	r2, r3
  4020ea:	d010      	beq.n	40210e <Reset_Handler+0x2e>
  4020ec:	4b25      	ldr	r3, [pc, #148]	; (402184 <Reset_Handler+0xa4>)
  4020ee:	4a23      	ldr	r2, [pc, #140]	; (40217c <Reset_Handler+0x9c>)
  4020f0:	429a      	cmp	r2, r3
  4020f2:	d20c      	bcs.n	40210e <Reset_Handler+0x2e>
  4020f4:	3b01      	subs	r3, #1
  4020f6:	1a9b      	subs	r3, r3, r2
  4020f8:	f023 0303 	bic.w	r3, r3, #3
  4020fc:	3304      	adds	r3, #4
  4020fe:	4413      	add	r3, r2
  402100:	491f      	ldr	r1, [pc, #124]	; (402180 <Reset_Handler+0xa0>)
  402102:	f851 0b04 	ldr.w	r0, [r1], #4
  402106:	f842 0b04 	str.w	r0, [r2], #4
  40210a:	429a      	cmp	r2, r3
  40210c:	d1f9      	bne.n	402102 <Reset_Handler+0x22>
  40210e:	4b1e      	ldr	r3, [pc, #120]	; (402188 <Reset_Handler+0xa8>)
  402110:	4a1e      	ldr	r2, [pc, #120]	; (40218c <Reset_Handler+0xac>)
  402112:	429a      	cmp	r2, r3
  402114:	d20a      	bcs.n	40212c <Reset_Handler+0x4c>
  402116:	3b01      	subs	r3, #1
  402118:	1a9b      	subs	r3, r3, r2
  40211a:	f023 0303 	bic.w	r3, r3, #3
  40211e:	3304      	adds	r3, #4
  402120:	4413      	add	r3, r2
  402122:	2100      	movs	r1, #0
  402124:	f842 1b04 	str.w	r1, [r2], #4
  402128:	4293      	cmp	r3, r2
  40212a:	d1fb      	bne.n	402124 <Reset_Handler+0x44>
  40212c:	4a18      	ldr	r2, [pc, #96]	; (402190 <Reset_Handler+0xb0>)
  40212e:	4b19      	ldr	r3, [pc, #100]	; (402194 <Reset_Handler+0xb4>)
  402130:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  402134:	6093      	str	r3, [r2, #8]
  402136:	f3ef 8310 	mrs	r3, PRIMASK
  40213a:	fab3 f383 	clz	r3, r3
  40213e:	095b      	lsrs	r3, r3, #5
  402140:	9301      	str	r3, [sp, #4]
  402142:	b672      	cpsid	i
  402144:	f3bf 8f5f 	dmb	sy
  402148:	2200      	movs	r2, #0
  40214a:	4b13      	ldr	r3, [pc, #76]	; (402198 <Reset_Handler+0xb8>)
  40214c:	701a      	strb	r2, [r3, #0]
  40214e:	9901      	ldr	r1, [sp, #4]
  402150:	4a12      	ldr	r2, [pc, #72]	; (40219c <Reset_Handler+0xbc>)
  402152:	6813      	ldr	r3, [r2, #0]
  402154:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  402158:	6013      	str	r3, [r2, #0]
  40215a:	f3bf 8f4f 	dsb	sy
  40215e:	f3bf 8f6f 	isb	sy
  402162:	b129      	cbz	r1, 402170 <Reset_Handler+0x90>
  402164:	2201      	movs	r2, #1
  402166:	4b0c      	ldr	r3, [pc, #48]	; (402198 <Reset_Handler+0xb8>)
  402168:	701a      	strb	r2, [r3, #0]
  40216a:	f3bf 8f5f 	dmb	sy
  40216e:	b662      	cpsie	i
  402170:	4b0b      	ldr	r3, [pc, #44]	; (4021a0 <Reset_Handler+0xc0>)
  402172:	4798      	blx	r3
  402174:	4b0b      	ldr	r3, [pc, #44]	; (4021a4 <Reset_Handler+0xc4>)
  402176:	4798      	blx	r3
  402178:	e7fe      	b.n	402178 <Reset_Handler+0x98>
  40217a:	bf00      	nop
  40217c:	20400000 	.word	0x20400000
  402180:	00405cf8 	.word	0x00405cf8
  402184:	204009d0 	.word	0x204009d0
  402188:	204084fc 	.word	0x204084fc
  40218c:	204009d0 	.word	0x204009d0
  402190:	e000ed00 	.word	0xe000ed00
  402194:	00400000 	.word	0x00400000
  402198:	2040001c 	.word	0x2040001c
  40219c:	e000ed88 	.word	0xe000ed88
  4021a0:	00402ab9 	.word	0x00402ab9
  4021a4:	004025a1 	.word	0x004025a1

004021a8 <SystemCoreClockUpdate>:
  4021a8:	4b3b      	ldr	r3, [pc, #236]	; (402298 <SystemCoreClockUpdate+0xf0>)
  4021aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4021ac:	f003 0303 	and.w	r3, r3, #3
  4021b0:	2b01      	cmp	r3, #1
  4021b2:	d01d      	beq.n	4021f0 <SystemCoreClockUpdate+0x48>
  4021b4:	b183      	cbz	r3, 4021d8 <SystemCoreClockUpdate+0x30>
  4021b6:	2b02      	cmp	r3, #2
  4021b8:	d036      	beq.n	402228 <SystemCoreClockUpdate+0x80>
  4021ba:	4b37      	ldr	r3, [pc, #220]	; (402298 <SystemCoreClockUpdate+0xf0>)
  4021bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4021be:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4021c2:	2b70      	cmp	r3, #112	; 0x70
  4021c4:	d05f      	beq.n	402286 <SystemCoreClockUpdate+0xde>
  4021c6:	4b34      	ldr	r3, [pc, #208]	; (402298 <SystemCoreClockUpdate+0xf0>)
  4021c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4021ca:	4934      	ldr	r1, [pc, #208]	; (40229c <SystemCoreClockUpdate+0xf4>)
  4021cc:	f3c2 1202 	ubfx	r2, r2, #4, #3
  4021d0:	680b      	ldr	r3, [r1, #0]
  4021d2:	40d3      	lsrs	r3, r2
  4021d4:	600b      	str	r3, [r1, #0]
  4021d6:	4770      	bx	lr
  4021d8:	4b31      	ldr	r3, [pc, #196]	; (4022a0 <SystemCoreClockUpdate+0xf8>)
  4021da:	695b      	ldr	r3, [r3, #20]
  4021dc:	f013 0f80 	tst.w	r3, #128	; 0x80
  4021e0:	bf14      	ite	ne
  4021e2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
  4021e6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4021ea:	4b2c      	ldr	r3, [pc, #176]	; (40229c <SystemCoreClockUpdate+0xf4>)
  4021ec:	601a      	str	r2, [r3, #0]
  4021ee:	e7e4      	b.n	4021ba <SystemCoreClockUpdate+0x12>
  4021f0:	4b29      	ldr	r3, [pc, #164]	; (402298 <SystemCoreClockUpdate+0xf0>)
  4021f2:	6a1b      	ldr	r3, [r3, #32]
  4021f4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4021f8:	d003      	beq.n	402202 <SystemCoreClockUpdate+0x5a>
  4021fa:	4a2a      	ldr	r2, [pc, #168]	; (4022a4 <SystemCoreClockUpdate+0xfc>)
  4021fc:	4b27      	ldr	r3, [pc, #156]	; (40229c <SystemCoreClockUpdate+0xf4>)
  4021fe:	601a      	str	r2, [r3, #0]
  402200:	e7db      	b.n	4021ba <SystemCoreClockUpdate+0x12>
  402202:	4a29      	ldr	r2, [pc, #164]	; (4022a8 <SystemCoreClockUpdate+0x100>)
  402204:	4b25      	ldr	r3, [pc, #148]	; (40229c <SystemCoreClockUpdate+0xf4>)
  402206:	601a      	str	r2, [r3, #0]
  402208:	4b23      	ldr	r3, [pc, #140]	; (402298 <SystemCoreClockUpdate+0xf0>)
  40220a:	6a1b      	ldr	r3, [r3, #32]
  40220c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402210:	2b10      	cmp	r3, #16
  402212:	d005      	beq.n	402220 <SystemCoreClockUpdate+0x78>
  402214:	2b20      	cmp	r3, #32
  402216:	d1d0      	bne.n	4021ba <SystemCoreClockUpdate+0x12>
  402218:	4a22      	ldr	r2, [pc, #136]	; (4022a4 <SystemCoreClockUpdate+0xfc>)
  40221a:	4b20      	ldr	r3, [pc, #128]	; (40229c <SystemCoreClockUpdate+0xf4>)
  40221c:	601a      	str	r2, [r3, #0]
  40221e:	e7cc      	b.n	4021ba <SystemCoreClockUpdate+0x12>
  402220:	4a22      	ldr	r2, [pc, #136]	; (4022ac <SystemCoreClockUpdate+0x104>)
  402222:	4b1e      	ldr	r3, [pc, #120]	; (40229c <SystemCoreClockUpdate+0xf4>)
  402224:	601a      	str	r2, [r3, #0]
  402226:	e7c8      	b.n	4021ba <SystemCoreClockUpdate+0x12>
  402228:	4b1b      	ldr	r3, [pc, #108]	; (402298 <SystemCoreClockUpdate+0xf0>)
  40222a:	6a1b      	ldr	r3, [r3, #32]
  40222c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  402230:	d016      	beq.n	402260 <SystemCoreClockUpdate+0xb8>
  402232:	4a1c      	ldr	r2, [pc, #112]	; (4022a4 <SystemCoreClockUpdate+0xfc>)
  402234:	4b19      	ldr	r3, [pc, #100]	; (40229c <SystemCoreClockUpdate+0xf4>)
  402236:	601a      	str	r2, [r3, #0]
  402238:	4b17      	ldr	r3, [pc, #92]	; (402298 <SystemCoreClockUpdate+0xf0>)
  40223a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40223c:	f003 0303 	and.w	r3, r3, #3
  402240:	2b02      	cmp	r3, #2
  402242:	d1ba      	bne.n	4021ba <SystemCoreClockUpdate+0x12>
  402244:	4a14      	ldr	r2, [pc, #80]	; (402298 <SystemCoreClockUpdate+0xf0>)
  402246:	6a91      	ldr	r1, [r2, #40]	; 0x28
  402248:	6a92      	ldr	r2, [r2, #40]	; 0x28
  40224a:	4814      	ldr	r0, [pc, #80]	; (40229c <SystemCoreClockUpdate+0xf4>)
  40224c:	f3c1 410a 	ubfx	r1, r1, #16, #11
  402250:	6803      	ldr	r3, [r0, #0]
  402252:	fb01 3303 	mla	r3, r1, r3, r3
  402256:	b2d2      	uxtb	r2, r2
  402258:	fbb3 f3f2 	udiv	r3, r3, r2
  40225c:	6003      	str	r3, [r0, #0]
  40225e:	e7ac      	b.n	4021ba <SystemCoreClockUpdate+0x12>
  402260:	4a11      	ldr	r2, [pc, #68]	; (4022a8 <SystemCoreClockUpdate+0x100>)
  402262:	4b0e      	ldr	r3, [pc, #56]	; (40229c <SystemCoreClockUpdate+0xf4>)
  402264:	601a      	str	r2, [r3, #0]
  402266:	4b0c      	ldr	r3, [pc, #48]	; (402298 <SystemCoreClockUpdate+0xf0>)
  402268:	6a1b      	ldr	r3, [r3, #32]
  40226a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40226e:	2b10      	cmp	r3, #16
  402270:	d005      	beq.n	40227e <SystemCoreClockUpdate+0xd6>
  402272:	2b20      	cmp	r3, #32
  402274:	d1e0      	bne.n	402238 <SystemCoreClockUpdate+0x90>
  402276:	4a0b      	ldr	r2, [pc, #44]	; (4022a4 <SystemCoreClockUpdate+0xfc>)
  402278:	4b08      	ldr	r3, [pc, #32]	; (40229c <SystemCoreClockUpdate+0xf4>)
  40227a:	601a      	str	r2, [r3, #0]
  40227c:	e7dc      	b.n	402238 <SystemCoreClockUpdate+0x90>
  40227e:	4a0b      	ldr	r2, [pc, #44]	; (4022ac <SystemCoreClockUpdate+0x104>)
  402280:	4b06      	ldr	r3, [pc, #24]	; (40229c <SystemCoreClockUpdate+0xf4>)
  402282:	601a      	str	r2, [r3, #0]
  402284:	e7d8      	b.n	402238 <SystemCoreClockUpdate+0x90>
  402286:	4a05      	ldr	r2, [pc, #20]	; (40229c <SystemCoreClockUpdate+0xf4>)
  402288:	6813      	ldr	r3, [r2, #0]
  40228a:	4909      	ldr	r1, [pc, #36]	; (4022b0 <SystemCoreClockUpdate+0x108>)
  40228c:	fba1 1303 	umull	r1, r3, r1, r3
  402290:	085b      	lsrs	r3, r3, #1
  402292:	6013      	str	r3, [r2, #0]
  402294:	4770      	bx	lr
  402296:	bf00      	nop
  402298:	400e0600 	.word	0x400e0600
  40229c:	20400020 	.word	0x20400020
  4022a0:	400e1810 	.word	0x400e1810
  4022a4:	00b71b00 	.word	0x00b71b00
  4022a8:	003d0900 	.word	0x003d0900
  4022ac:	007a1200 	.word	0x007a1200
  4022b0:	aaaaaaab 	.word	0xaaaaaaab

004022b4 <system_init_flash>:
  4022b4:	4b16      	ldr	r3, [pc, #88]	; (402310 <system_init_flash+0x5c>)
  4022b6:	4298      	cmp	r0, r3
  4022b8:	d913      	bls.n	4022e2 <system_init_flash+0x2e>
  4022ba:	4b16      	ldr	r3, [pc, #88]	; (402314 <system_init_flash+0x60>)
  4022bc:	4298      	cmp	r0, r3
  4022be:	d915      	bls.n	4022ec <system_init_flash+0x38>
  4022c0:	4b15      	ldr	r3, [pc, #84]	; (402318 <system_init_flash+0x64>)
  4022c2:	4298      	cmp	r0, r3
  4022c4:	d916      	bls.n	4022f4 <system_init_flash+0x40>
  4022c6:	4b15      	ldr	r3, [pc, #84]	; (40231c <system_init_flash+0x68>)
  4022c8:	4298      	cmp	r0, r3
  4022ca:	d917      	bls.n	4022fc <system_init_flash+0x48>
  4022cc:	4b14      	ldr	r3, [pc, #80]	; (402320 <system_init_flash+0x6c>)
  4022ce:	4298      	cmp	r0, r3
  4022d0:	d918      	bls.n	402304 <system_init_flash+0x50>
  4022d2:	4b14      	ldr	r3, [pc, #80]	; (402324 <system_init_flash+0x70>)
  4022d4:	4298      	cmp	r0, r3
  4022d6:	bf94      	ite	ls
  4022d8:	4a13      	ldrls	r2, [pc, #76]	; (402328 <system_init_flash+0x74>)
  4022da:	4a14      	ldrhi	r2, [pc, #80]	; (40232c <system_init_flash+0x78>)
  4022dc:	4b14      	ldr	r3, [pc, #80]	; (402330 <system_init_flash+0x7c>)
  4022de:	601a      	str	r2, [r3, #0]
  4022e0:	4770      	bx	lr
  4022e2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4022e6:	4b12      	ldr	r3, [pc, #72]	; (402330 <system_init_flash+0x7c>)
  4022e8:	601a      	str	r2, [r3, #0]
  4022ea:	4770      	bx	lr
  4022ec:	4a11      	ldr	r2, [pc, #68]	; (402334 <system_init_flash+0x80>)
  4022ee:	4b10      	ldr	r3, [pc, #64]	; (402330 <system_init_flash+0x7c>)
  4022f0:	601a      	str	r2, [r3, #0]
  4022f2:	4770      	bx	lr
  4022f4:	4a10      	ldr	r2, [pc, #64]	; (402338 <system_init_flash+0x84>)
  4022f6:	4b0e      	ldr	r3, [pc, #56]	; (402330 <system_init_flash+0x7c>)
  4022f8:	601a      	str	r2, [r3, #0]
  4022fa:	4770      	bx	lr
  4022fc:	4a0f      	ldr	r2, [pc, #60]	; (40233c <system_init_flash+0x88>)
  4022fe:	4b0c      	ldr	r3, [pc, #48]	; (402330 <system_init_flash+0x7c>)
  402300:	601a      	str	r2, [r3, #0]
  402302:	4770      	bx	lr
  402304:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  402308:	4b09      	ldr	r3, [pc, #36]	; (402330 <system_init_flash+0x7c>)
  40230a:	601a      	str	r2, [r3, #0]
  40230c:	4770      	bx	lr
  40230e:	bf00      	nop
  402310:	015ef3bf 	.word	0x015ef3bf
  402314:	02bde77f 	.word	0x02bde77f
  402318:	041cdb3f 	.word	0x041cdb3f
  40231c:	057bceff 	.word	0x057bceff
  402320:	06dac2bf 	.word	0x06dac2bf
  402324:	0839b67f 	.word	0x0839b67f
  402328:	04000500 	.word	0x04000500
  40232c:	04000600 	.word	0x04000600
  402330:	400e0c00 	.word	0x400e0c00
  402334:	04000100 	.word	0x04000100
  402338:	04000200 	.word	0x04000200
  40233c:	04000300 	.word	0x04000300

00402340 <_sbrk>:
  402340:	4b0a      	ldr	r3, [pc, #40]	; (40236c <_sbrk+0x2c>)
  402342:	681b      	ldr	r3, [r3, #0]
  402344:	b153      	cbz	r3, 40235c <_sbrk+0x1c>
  402346:	4b09      	ldr	r3, [pc, #36]	; (40236c <_sbrk+0x2c>)
  402348:	681b      	ldr	r3, [r3, #0]
  40234a:	181a      	adds	r2, r3, r0
  40234c:	4908      	ldr	r1, [pc, #32]	; (402370 <_sbrk+0x30>)
  40234e:	4291      	cmp	r1, r2
  402350:	db08      	blt.n	402364 <_sbrk+0x24>
  402352:	4610      	mov	r0, r2
  402354:	4a05      	ldr	r2, [pc, #20]	; (40236c <_sbrk+0x2c>)
  402356:	6010      	str	r0, [r2, #0]
  402358:	4618      	mov	r0, r3
  40235a:	4770      	bx	lr
  40235c:	4a05      	ldr	r2, [pc, #20]	; (402374 <_sbrk+0x34>)
  40235e:	4b03      	ldr	r3, [pc, #12]	; (40236c <_sbrk+0x2c>)
  402360:	601a      	str	r2, [r3, #0]
  402362:	e7f0      	b.n	402346 <_sbrk+0x6>
  402364:	f04f 30ff 	mov.w	r0, #4294967295
  402368:	4770      	bx	lr
  40236a:	bf00      	nop
  40236c:	20407298 	.word	0x20407298
  402370:	2045fffc 	.word	0x2045fffc
  402374:	2040a700 	.word	0x2040a700

00402378 <_close>:
  402378:	f04f 30ff 	mov.w	r0, #4294967295
  40237c:	4770      	bx	lr

0040237e <_fstat>:
  40237e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  402382:	604b      	str	r3, [r1, #4]
  402384:	2000      	movs	r0, #0
  402386:	4770      	bx	lr

00402388 <_isatty>:
  402388:	2001      	movs	r0, #1
  40238a:	4770      	bx	lr

0040238c <_lseek>:
  40238c:	2000      	movs	r0, #0
  40238e:	4770      	bx	lr

00402390 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  402390:	b5f0      	push	{r4, r5, r6, r7, lr}
  402392:	b083      	sub	sp, #12
  402394:	4605      	mov	r5, r0
  402396:	460c      	mov	r4, r1
	uint32_t val = 0;
  402398:	2300      	movs	r3, #0
  40239a:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  40239c:	4b2a      	ldr	r3, [pc, #168]	; (402448 <usart_serial_getchar+0xb8>)
  40239e:	4298      	cmp	r0, r3
  4023a0:	d013      	beq.n	4023ca <usart_serial_getchar+0x3a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  4023a2:	4b2a      	ldr	r3, [pc, #168]	; (40244c <usart_serial_getchar+0xbc>)
  4023a4:	4298      	cmp	r0, r3
  4023a6:	d018      	beq.n	4023da <usart_serial_getchar+0x4a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  4023a8:	4b29      	ldr	r3, [pc, #164]	; (402450 <usart_serial_getchar+0xc0>)
  4023aa:	4298      	cmp	r0, r3
  4023ac:	d01d      	beq.n	4023ea <usart_serial_getchar+0x5a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  4023ae:	4b29      	ldr	r3, [pc, #164]	; (402454 <usart_serial_getchar+0xc4>)
  4023b0:	429d      	cmp	r5, r3
  4023b2:	d022      	beq.n	4023fa <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  4023b4:	4b28      	ldr	r3, [pc, #160]	; (402458 <usart_serial_getchar+0xc8>)
  4023b6:	429d      	cmp	r5, r3
  4023b8:	d027      	beq.n	40240a <usart_serial_getchar+0x7a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  4023ba:	4b28      	ldr	r3, [pc, #160]	; (40245c <usart_serial_getchar+0xcc>)
  4023bc:	429d      	cmp	r5, r3
  4023be:	d02e      	beq.n	40241e <usart_serial_getchar+0x8e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  4023c0:	4b27      	ldr	r3, [pc, #156]	; (402460 <usart_serial_getchar+0xd0>)
  4023c2:	429d      	cmp	r5, r3
  4023c4:	d035      	beq.n	402432 <usart_serial_getchar+0xa2>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  4023c6:	b003      	add	sp, #12
  4023c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  4023ca:	461f      	mov	r7, r3
  4023cc:	4e25      	ldr	r6, [pc, #148]	; (402464 <usart_serial_getchar+0xd4>)
  4023ce:	4621      	mov	r1, r4
  4023d0:	4638      	mov	r0, r7
  4023d2:	47b0      	blx	r6
  4023d4:	2800      	cmp	r0, #0
  4023d6:	d1fa      	bne.n	4023ce <usart_serial_getchar+0x3e>
  4023d8:	e7e9      	b.n	4023ae <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  4023da:	461f      	mov	r7, r3
  4023dc:	4e21      	ldr	r6, [pc, #132]	; (402464 <usart_serial_getchar+0xd4>)
  4023de:	4621      	mov	r1, r4
  4023e0:	4638      	mov	r0, r7
  4023e2:	47b0      	blx	r6
  4023e4:	2800      	cmp	r0, #0
  4023e6:	d1fa      	bne.n	4023de <usart_serial_getchar+0x4e>
  4023e8:	e7e4      	b.n	4023b4 <usart_serial_getchar+0x24>
		while (uart_read((Uart*)p_usart, data));
  4023ea:	461f      	mov	r7, r3
  4023ec:	4e1d      	ldr	r6, [pc, #116]	; (402464 <usart_serial_getchar+0xd4>)
  4023ee:	4621      	mov	r1, r4
  4023f0:	4638      	mov	r0, r7
  4023f2:	47b0      	blx	r6
  4023f4:	2800      	cmp	r0, #0
  4023f6:	d1fa      	bne.n	4023ee <usart_serial_getchar+0x5e>
  4023f8:	e7df      	b.n	4023ba <usart_serial_getchar+0x2a>
		while (uart_read((Uart*)p_usart, data));
  4023fa:	461f      	mov	r7, r3
  4023fc:	4e19      	ldr	r6, [pc, #100]	; (402464 <usart_serial_getchar+0xd4>)
  4023fe:	4621      	mov	r1, r4
  402400:	4638      	mov	r0, r7
  402402:	47b0      	blx	r6
  402404:	2800      	cmp	r0, #0
  402406:	d1fa      	bne.n	4023fe <usart_serial_getchar+0x6e>
  402408:	e7da      	b.n	4023c0 <usart_serial_getchar+0x30>
		while (usart_read(p_usart, &val));
  40240a:	461e      	mov	r6, r3
  40240c:	4d16      	ldr	r5, [pc, #88]	; (402468 <usart_serial_getchar+0xd8>)
  40240e:	a901      	add	r1, sp, #4
  402410:	4630      	mov	r0, r6
  402412:	47a8      	blx	r5
  402414:	2800      	cmp	r0, #0
  402416:	d1fa      	bne.n	40240e <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
  402418:	9b01      	ldr	r3, [sp, #4]
  40241a:	7023      	strb	r3, [r4, #0]
  40241c:	e7d3      	b.n	4023c6 <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  40241e:	461e      	mov	r6, r3
  402420:	4d11      	ldr	r5, [pc, #68]	; (402468 <usart_serial_getchar+0xd8>)
  402422:	a901      	add	r1, sp, #4
  402424:	4630      	mov	r0, r6
  402426:	47a8      	blx	r5
  402428:	2800      	cmp	r0, #0
  40242a:	d1fa      	bne.n	402422 <usart_serial_getchar+0x92>
		*data = (uint8_t)(val & 0xFF);
  40242c:	9b01      	ldr	r3, [sp, #4]
  40242e:	7023      	strb	r3, [r4, #0]
  402430:	e7c9      	b.n	4023c6 <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  402432:	461e      	mov	r6, r3
  402434:	4d0c      	ldr	r5, [pc, #48]	; (402468 <usart_serial_getchar+0xd8>)
  402436:	a901      	add	r1, sp, #4
  402438:	4630      	mov	r0, r6
  40243a:	47a8      	blx	r5
  40243c:	2800      	cmp	r0, #0
  40243e:	d1fa      	bne.n	402436 <usart_serial_getchar+0xa6>
		*data = (uint8_t)(val & 0xFF);
  402440:	9b01      	ldr	r3, [sp, #4]
  402442:	7023      	strb	r3, [r4, #0]
}
  402444:	e7bf      	b.n	4023c6 <usart_serial_getchar+0x36>
  402446:	bf00      	nop
  402448:	400e0800 	.word	0x400e0800
  40244c:	400e0a00 	.word	0x400e0a00
  402450:	400e1a00 	.word	0x400e1a00
  402454:	400e1c00 	.word	0x400e1c00
  402458:	40024000 	.word	0x40024000
  40245c:	40028000 	.word	0x40028000
  402460:	4002c000 	.word	0x4002c000
  402464:	00401ae1 	.word	0x00401ae1
  402468:	00400a1b 	.word	0x00400a1b

0040246c <usart_serial_putchar>:
{
  40246c:	b570      	push	{r4, r5, r6, lr}
  40246e:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  402470:	4b2a      	ldr	r3, [pc, #168]	; (40251c <usart_serial_putchar+0xb0>)
  402472:	4298      	cmp	r0, r3
  402474:	d013      	beq.n	40249e <usart_serial_putchar+0x32>
	if (UART1 == (Uart*)p_usart) {
  402476:	4b2a      	ldr	r3, [pc, #168]	; (402520 <usart_serial_putchar+0xb4>)
  402478:	4298      	cmp	r0, r3
  40247a:	d019      	beq.n	4024b0 <usart_serial_putchar+0x44>
	if (UART2 == (Uart*)p_usart) {
  40247c:	4b29      	ldr	r3, [pc, #164]	; (402524 <usart_serial_putchar+0xb8>)
  40247e:	4298      	cmp	r0, r3
  402480:	d01f      	beq.n	4024c2 <usart_serial_putchar+0x56>
	if (UART3 == (Uart*)p_usart) {
  402482:	4b29      	ldr	r3, [pc, #164]	; (402528 <usart_serial_putchar+0xbc>)
  402484:	4298      	cmp	r0, r3
  402486:	d025      	beq.n	4024d4 <usart_serial_putchar+0x68>
	if (USART0 == p_usart) {
  402488:	4b28      	ldr	r3, [pc, #160]	; (40252c <usart_serial_putchar+0xc0>)
  40248a:	4298      	cmp	r0, r3
  40248c:	d02b      	beq.n	4024e6 <usart_serial_putchar+0x7a>
	if (USART1 == p_usart) {
  40248e:	4b28      	ldr	r3, [pc, #160]	; (402530 <usart_serial_putchar+0xc4>)
  402490:	4298      	cmp	r0, r3
  402492:	d031      	beq.n	4024f8 <usart_serial_putchar+0x8c>
	if (USART2 == p_usart) {
  402494:	4b27      	ldr	r3, [pc, #156]	; (402534 <usart_serial_putchar+0xc8>)
  402496:	4298      	cmp	r0, r3
  402498:	d037      	beq.n	40250a <usart_serial_putchar+0x9e>
	return 0;
  40249a:	2000      	movs	r0, #0
}
  40249c:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40249e:	461e      	mov	r6, r3
  4024a0:	4d25      	ldr	r5, [pc, #148]	; (402538 <usart_serial_putchar+0xcc>)
  4024a2:	4621      	mov	r1, r4
  4024a4:	4630      	mov	r0, r6
  4024a6:	47a8      	blx	r5
  4024a8:	2800      	cmp	r0, #0
  4024aa:	d1fa      	bne.n	4024a2 <usart_serial_putchar+0x36>
		return 1;
  4024ac:	2001      	movs	r0, #1
  4024ae:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4024b0:	461e      	mov	r6, r3
  4024b2:	4d21      	ldr	r5, [pc, #132]	; (402538 <usart_serial_putchar+0xcc>)
  4024b4:	4621      	mov	r1, r4
  4024b6:	4630      	mov	r0, r6
  4024b8:	47a8      	blx	r5
  4024ba:	2800      	cmp	r0, #0
  4024bc:	d1fa      	bne.n	4024b4 <usart_serial_putchar+0x48>
		return 1;
  4024be:	2001      	movs	r0, #1
  4024c0:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4024c2:	461e      	mov	r6, r3
  4024c4:	4d1c      	ldr	r5, [pc, #112]	; (402538 <usart_serial_putchar+0xcc>)
  4024c6:	4621      	mov	r1, r4
  4024c8:	4630      	mov	r0, r6
  4024ca:	47a8      	blx	r5
  4024cc:	2800      	cmp	r0, #0
  4024ce:	d1fa      	bne.n	4024c6 <usart_serial_putchar+0x5a>
		return 1;
  4024d0:	2001      	movs	r0, #1
  4024d2:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4024d4:	461e      	mov	r6, r3
  4024d6:	4d18      	ldr	r5, [pc, #96]	; (402538 <usart_serial_putchar+0xcc>)
  4024d8:	4621      	mov	r1, r4
  4024da:	4630      	mov	r0, r6
  4024dc:	47a8      	blx	r5
  4024de:	2800      	cmp	r0, #0
  4024e0:	d1fa      	bne.n	4024d8 <usart_serial_putchar+0x6c>
		return 1;
  4024e2:	2001      	movs	r0, #1
  4024e4:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  4024e6:	461e      	mov	r6, r3
  4024e8:	4d14      	ldr	r5, [pc, #80]	; (40253c <usart_serial_putchar+0xd0>)
  4024ea:	4621      	mov	r1, r4
  4024ec:	4630      	mov	r0, r6
  4024ee:	47a8      	blx	r5
  4024f0:	2800      	cmp	r0, #0
  4024f2:	d1fa      	bne.n	4024ea <usart_serial_putchar+0x7e>
		return 1;
  4024f4:	2001      	movs	r0, #1
  4024f6:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  4024f8:	461e      	mov	r6, r3
  4024fa:	4d10      	ldr	r5, [pc, #64]	; (40253c <usart_serial_putchar+0xd0>)
  4024fc:	4621      	mov	r1, r4
  4024fe:	4630      	mov	r0, r6
  402500:	47a8      	blx	r5
  402502:	2800      	cmp	r0, #0
  402504:	d1fa      	bne.n	4024fc <usart_serial_putchar+0x90>
		return 1;
  402506:	2001      	movs	r0, #1
  402508:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  40250a:	461e      	mov	r6, r3
  40250c:	4d0b      	ldr	r5, [pc, #44]	; (40253c <usart_serial_putchar+0xd0>)
  40250e:	4621      	mov	r1, r4
  402510:	4630      	mov	r0, r6
  402512:	47a8      	blx	r5
  402514:	2800      	cmp	r0, #0
  402516:	d1fa      	bne.n	40250e <usart_serial_putchar+0xa2>
		return 1;
  402518:	2001      	movs	r0, #1
  40251a:	bd70      	pop	{r4, r5, r6, pc}
  40251c:	400e0800 	.word	0x400e0800
  402520:	400e0a00 	.word	0x400e0a00
  402524:	400e1a00 	.word	0x400e1a00
  402528:	400e1c00 	.word	0x400e1c00
  40252c:	40024000 	.word	0x40024000
  402530:	40028000 	.word	0x40028000
  402534:	4002c000 	.word	0x4002c000
  402538:	00401acf 	.word	0x00401acf
  40253c:	00400a05 	.word	0x00400a05

00402540 <get_packet_type>:
	node->swremote   = 0;
	node->style      = 0;        // StNode style - A DMX to/from Art-Net device*/
}

uint16_t get_packet_type(uint8_t *packet) //this get artnet packet type
{
  402540:	b510      	push	{r4, lr}
  402542:	4604      	mov	r4, r0
	if (! memcmp( packet, ArtNode.id, 8))
  402544:	2208      	movs	r2, #8
  402546:	4906      	ldr	r1, [pc, #24]	; (402560 <get_packet_type+0x20>)
  402548:	4b06      	ldr	r3, [pc, #24]	; (402564 <get_packet_type+0x24>)
  40254a:	4798      	blx	r3
  40254c:	b930      	cbnz	r0, 40255c <get_packet_type+0x1c>
	{
		return BYTES_TO_SHORT(packet[9], packet[8]);
  40254e:	7a63      	ldrb	r3, [r4, #9]
  402550:	7a20      	ldrb	r0, [r4, #8]
  402552:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
  402556:	b200      	sxth	r0, r0
	}
	return 0;  // bad packet
}
  402558:	b280      	uxth	r0, r0
  40255a:	bd10      	pop	{r4, pc}
  40255c:	2000      	movs	r0, #0
  40255e:	e7fb      	b.n	402558 <get_packet_type+0x18>
  402560:	20408300 	.word	0x20408300
  402564:	00402b31 	.word	0x00402b31

00402568 <handleGMAC_Packet>:
void handleGMAC_Packet(uint8_t *p_uc_data, uint32_t ul_size){
  402568:	b508      	push	{r3, lr}
	uint16_t eth_pkt_format = SWAP16(p_eth->et_protlen);
  40256a:	8982      	ldrh	r2, [r0, #12]
  40256c:	0a13      	lsrs	r3, r2, #8
  40256e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	if(eth_pkt_format == ETH_PROT_IP)
  402572:	b21b      	sxth	r3, r3
  402574:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
  402578:	d000      	beq.n	40257c <handleGMAC_Packet+0x14>
  40257a:	bd08      	pop	{r3, pc}
		if (p_ip->ip_p == IP_PROT_UDP)
  40257c:	7dc3      	ldrb	r3, [r0, #23]
			if (ul_size > hdr_len)
  40257e:	2b11      	cmp	r3, #17
  402580:	d1fb      	bne.n	40257a <handleGMAC_Packet+0x12>
  402582:	292a      	cmp	r1, #42	; 0x2a
  402584:	d9f9      	bls.n	40257a <handleGMAC_Packet+0x12>
				PacketType = (T_ArtPacketType) get_packet_type(p_uc_data + ETH_HEADER_SIZE + ETH_IP_HEADER_SIZE + ICMP_HEADER_SIZE); 
  402586:	302a      	adds	r0, #42	; 0x2a
  402588:	4b02      	ldr	r3, [pc, #8]	; (402594 <handleGMAC_Packet+0x2c>)
  40258a:	4798      	blx	r3
  40258c:	4b02      	ldr	r3, [pc, #8]	; (402598 <handleGMAC_Packet+0x30>)
  40258e:	8018      	strh	r0, [r3, #0]
  402590:	e7f3      	b.n	40257a <handleGMAC_Packet+0x12>
  402592:	bf00      	nop
  402594:	00402541 	.word	0x00402541
  402598:	204082ec 	.word	0x204082ec
  40259c:	00000000 	.word	0x00000000

004025a0 <main>:
{
  4025a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4025a4:	b08a      	sub	sp, #40	; 0x28
	sysclk_init();
  4025a6:	4b58      	ldr	r3, [pc, #352]	; (402708 <main+0x168>)
  4025a8:	4798      	blx	r3
	board_init();
  4025aa:	4b58      	ldr	r3, [pc, #352]	; (40270c <main+0x16c>)
  4025ac:	4798      	blx	r3
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4025ae:	200e      	movs	r0, #14
  4025b0:	4e57      	ldr	r6, [pc, #348]	; (402710 <main+0x170>)
  4025b2:	47b0      	blx	r6
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  4025b4:	4d57      	ldr	r5, [pc, #348]	; (402714 <main+0x174>)
  4025b6:	4b58      	ldr	r3, [pc, #352]	; (402718 <main+0x178>)
  4025b8:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4025ba:	4a58      	ldr	r2, [pc, #352]	; (40271c <main+0x17c>)
  4025bc:	4b58      	ldr	r3, [pc, #352]	; (402720 <main+0x180>)
  4025be:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  4025c0:	4a58      	ldr	r2, [pc, #352]	; (402724 <main+0x184>)
  4025c2:	4b59      	ldr	r3, [pc, #356]	; (402728 <main+0x188>)
  4025c4:	601a      	str	r2, [r3, #0]
	usart_settings.baudrate = opt->baudrate;
  4025c6:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  4025ca:	9304      	str	r3, [sp, #16]
	usart_settings.char_length = opt->charlength;
  4025cc:	23c0      	movs	r3, #192	; 0xc0
  4025ce:	9305      	str	r3, [sp, #20]
	usart_settings.parity_type = opt->paritytype;
  4025d0:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4025d4:	9306      	str	r3, [sp, #24]
	usart_settings.stop_bits= opt->stopbits;
  4025d6:	2400      	movs	r4, #0
  4025d8:	9407      	str	r4, [sp, #28]
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  4025da:	9408      	str	r4, [sp, #32]
  4025dc:	200e      	movs	r0, #14
  4025de:	47b0      	blx	r6
		usart_init_rs232(p_usart, &usart_settings,
  4025e0:	4a52      	ldr	r2, [pc, #328]	; (40272c <main+0x18c>)
  4025e2:	a904      	add	r1, sp, #16
  4025e4:	4628      	mov	r0, r5
  4025e6:	4b52      	ldr	r3, [pc, #328]	; (402730 <main+0x190>)
  4025e8:	4798      	blx	r3
		usart_enable_tx(p_usart);
  4025ea:	4628      	mov	r0, r5
  4025ec:	4b51      	ldr	r3, [pc, #324]	; (402734 <main+0x194>)
  4025ee:	4798      	blx	r3
		usart_enable_rx(p_usart);
  4025f0:	4628      	mov	r0, r5
  4025f2:	4b51      	ldr	r3, [pc, #324]	; (402738 <main+0x198>)
  4025f4:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  4025f6:	4e51      	ldr	r6, [pc, #324]	; (40273c <main+0x19c>)
  4025f8:	6833      	ldr	r3, [r6, #0]
  4025fa:	4621      	mov	r1, r4
  4025fc:	6898      	ldr	r0, [r3, #8]
  4025fe:	4d50      	ldr	r5, [pc, #320]	; (402740 <main+0x1a0>)
  402600:	47a8      	blx	r5
	setbuf(stdin, NULL);
  402602:	6833      	ldr	r3, [r6, #0]
  402604:	4621      	mov	r1, r4
  402606:	6858      	ldr	r0, [r3, #4]
  402608:	47a8      	blx	r5
	puts(STRING_HEADER);
  40260a:	484e      	ldr	r0, [pc, #312]	; (402744 <main+0x1a4>)
  40260c:	4b4e      	ldr	r3, [pc, #312]	; (402748 <main+0x1a8>)
  40260e:	4798      	blx	r3
	if (!init_gmac_ethernet())
  402610:	4b4e      	ldr	r3, [pc, #312]	; (40274c <main+0x1ac>)
  402612:	4798      	blx	r3
  402614:	b920      	cbnz	r0, 402620 <main+0x80>
}//end of program
  402616:	f04f 30ff 	mov.w	r0, #4294967295
  40261a:	b00a      	add	sp, #40	; 0x28
  40261c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	gs_uc_mac_address[0], gs_uc_mac_address[1], gs_uc_mac_address[2],
  402620:	484b      	ldr	r0, [pc, #300]	; (402750 <main+0x1b0>)
	printf("-- MAC %x:%x:%x:%x:%x:%x\n\r",
  402622:	7883      	ldrb	r3, [r0, #2]
  402624:	7842      	ldrb	r2, [r0, #1]
  402626:	7801      	ldrb	r1, [r0, #0]
  402628:	7944      	ldrb	r4, [r0, #5]
  40262a:	9402      	str	r4, [sp, #8]
  40262c:	7904      	ldrb	r4, [r0, #4]
  40262e:	9401      	str	r4, [sp, #4]
  402630:	78c0      	ldrb	r0, [r0, #3]
  402632:	9000      	str	r0, [sp, #0]
  402634:	4847      	ldr	r0, [pc, #284]	; (402754 <main+0x1b4>)
  402636:	4c48      	ldr	r4, [pc, #288]	; (402758 <main+0x1b8>)
  402638:	47a0      	blx	r4
	gs_uc_ip_address[2], gs_uc_ip_address[3]);
  40263a:	4848      	ldr	r0, [pc, #288]	; (40275c <main+0x1bc>)
	printf("-- IP  %d.%d.%d.%d\n\r", gs_uc_ip_address[0], gs_uc_ip_address[1],
  40263c:	7883      	ldrb	r3, [r0, #2]
  40263e:	7842      	ldrb	r2, [r0, #1]
  402640:	7801      	ldrb	r1, [r0, #0]
  402642:	78c0      	ldrb	r0, [r0, #3]
  402644:	9000      	str	r0, [sp, #0]
  402646:	4846      	ldr	r0, [pc, #280]	; (402760 <main+0x1c0>)
  402648:	47a0      	blx	r4
	puts("link detected\r");
  40264a:	4846      	ldr	r0, [pc, #280]	; (402764 <main+0x1c4>)
  40264c:	4b3e      	ldr	r3, [pc, #248]	; (402748 <main+0x1a8>)
  40264e:	4798      	blx	r3
	spi_master_initialize();
  402650:	4b45      	ldr	r3, [pc, #276]	; (402768 <main+0x1c8>)
  402652:	4798      	blx	r3
	nRF24_begin();
  402654:	4b45      	ldr	r3, [pc, #276]	; (40276c <main+0x1cc>)
  402656:	4798      	blx	r3
	nRF24_setPALevel(RF_PA_HIGH);
  402658:	2002      	movs	r0, #2
  40265a:	4b45      	ldr	r3, [pc, #276]	; (402770 <main+0x1d0>)
  40265c:	4798      	blx	r3
	nRF24_stopListening();
  40265e:	4b45      	ldr	r3, [pc, #276]	; (402774 <main+0x1d4>)
  402660:	4798      	blx	r3
	printDetails();
  402662:	4b45      	ldr	r3, [pc, #276]	; (402778 <main+0x1d8>)
  402664:	4798      	blx	r3
		if (GMAC_OK == read_dev_gmac()) {
  402666:	4d45      	ldr	r5, [pc, #276]	; (40277c <main+0x1dc>)
				nRF24_openWritingPipe(listeningPipes[currentNode]);
  402668:	a725      	add	r7, pc, #148	; (adr r7, 402700 <main+0x160>)
  40266a:	e9d7 6700 	ldrd	r6, r7, [r7]
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  40266e:	f8df 8134 	ldr.w	r8, [pc, #308]	; 4027a4 <main+0x204>
  402672:	e008      	b.n	402686 <main+0xe6>
			else if(dmxValue >= 11 && dmxValue <= 20)
  402674:	f1a3 020b 	sub.w	r2, r3, #11
  402678:	b2d2      	uxtb	r2, r2
  40267a:	2a09      	cmp	r2, #9
  40267c:	d91c      	bls.n	4026b8 <main+0x118>
			else if(dmxValue >= 101 && dmxValue <= 230)
  40267e:	3b65      	subs	r3, #101	; 0x65
  402680:	b2dc      	uxtb	r4, r3
  402682:	2c81      	cmp	r4, #129	; 0x81
  402684:	d927      	bls.n	4026d6 <main+0x136>
		if (GMAC_OK == read_dev_gmac()) {
  402686:	47a8      	blx	r5
  402688:	2800      	cmp	r0, #0
  40268a:	d1fc      	bne.n	402686 <main+0xe6>
			if (ul_frm_size_rx > 0) {
  40268c:	4b3c      	ldr	r3, [pc, #240]	; (402780 <main+0x1e0>)
  40268e:	6819      	ldr	r1, [r3, #0]
  402690:	2900      	cmp	r1, #0
  402692:	d0f8      	beq.n	402686 <main+0xe6>
				handleGMAC_Packet((uint8_t *) gs_uc_eth_buffer_rx, ul_frm_size_rx);
  402694:	483b      	ldr	r0, [pc, #236]	; (402784 <main+0x1e4>)
  402696:	4b3c      	ldr	r3, [pc, #240]	; (402788 <main+0x1e8>)
  402698:	4798      	blx	r3
		dmxValue = artnet_data_buffer[i];
  40269a:	4b3c      	ldr	r3, [pc, #240]	; (40278c <main+0x1ec>)
  40269c:	781b      	ldrb	r3, [r3, #0]
			if(dmxValue <= 10)
  40269e:	2b0a      	cmp	r3, #10
  4026a0:	d8e8      	bhi.n	402674 <main+0xd4>
					nRF24_openWritingPipe(listeningPipes[currentNode]);
  4026a2:	4630      	mov	r0, r6
  4026a4:	4639      	mov	r1, r7
  4026a6:	4b3a      	ldr	r3, [pc, #232]	; (402790 <main+0x1f0>)
  4026a8:	4798      	blx	r3
					dataOut.command = 0;
  4026aa:	483a      	ldr	r0, [pc, #232]	; (402794 <main+0x1f4>)
  4026ac:	2300      	movs	r3, #0
  4026ae:	7183      	strb	r3, [r0, #6]
					nRF24_write(&dataOut, sizeof(dataOut));
  4026b0:	2108      	movs	r1, #8
  4026b2:	4b39      	ldr	r3, [pc, #228]	; (402798 <main+0x1f8>)
  4026b4:	4798      	blx	r3
  4026b6:	e7e6      	b.n	402686 <main+0xe6>
					nRF24_openWritingPipe(listeningPipes[currentNode]);
  4026b8:	4630      	mov	r0, r6
  4026ba:	4639      	mov	r1, r7
  4026bc:	4b34      	ldr	r3, [pc, #208]	; (402790 <main+0x1f0>)
  4026be:	4798      	blx	r3
					dataOut.command = 1;
  4026c0:	4834      	ldr	r0, [pc, #208]	; (402794 <main+0x1f4>)
  4026c2:	2401      	movs	r4, #1
  4026c4:	7184      	strb	r4, [r0, #6]
					nRF24_write(&dataOut, sizeof(dataOut));
  4026c6:	2108      	movs	r1, #8
  4026c8:	4b33      	ldr	r3, [pc, #204]	; (402798 <main+0x1f8>)
  4026ca:	4798      	blx	r3
					printf("Node %d read own sensor\r\n", currentNode);
  4026cc:	4621      	mov	r1, r4
  4026ce:	4833      	ldr	r0, [pc, #204]	; (40279c <main+0x1fc>)
  4026d0:	4b21      	ldr	r3, [pc, #132]	; (402758 <main+0x1b8>)
  4026d2:	4798      	blx	r3
  4026d4:	e7d7      	b.n	402686 <main+0xe6>
				nRF24_openWritingPipe(listeningPipes[currentNode]);
  4026d6:	4630      	mov	r0, r6
  4026d8:	4639      	mov	r1, r7
  4026da:	4b2d      	ldr	r3, [pc, #180]	; (402790 <main+0x1f0>)
  4026dc:	4798      	blx	r3
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  4026de:	ebc4 2404 	rsb	r4, r4, r4, lsl #8
  4026e2:	fb88 3204 	smull	r3, r2, r8, r4
  4026e6:	17e4      	asrs	r4, r4, #31
  4026e8:	ebc4 02e2 	rsb	r2, r4, r2, asr #3
				dataOut.datavalue = m_dmx;
  4026ec:	4b29      	ldr	r3, [pc, #164]	; (402794 <main+0x1f4>)
  4026ee:	b2d2      	uxtb	r2, r2
  4026f0:	809a      	strh	r2, [r3, #4]
				dataOut.command = 3;
  4026f2:	2103      	movs	r1, #3
  4026f4:	7199      	strb	r1, [r3, #6]
				printf("connect desk to node %d for %d\r\n", currentNode, m_dmx);
  4026f6:	2101      	movs	r1, #1
  4026f8:	4829      	ldr	r0, [pc, #164]	; (4027a0 <main+0x200>)
  4026fa:	4b17      	ldr	r3, [pc, #92]	; (402758 <main+0x1b8>)
  4026fc:	4798      	blx	r3
  4026fe:	e7c2      	b.n	402686 <main+0xe6>
  402700:	3a3a3ab1 	.word	0x3a3a3ab1
  402704:	00000000 	.word	0x00000000
  402708:	00401ba9 	.word	0x00401ba9
  40270c:	00401c19 	.word	0x00401c19
  402710:	004020bd 	.word	0x004020bd
  402714:	40028000 	.word	0x40028000
  402718:	204082e8 	.word	0x204082e8
  40271c:	0040246d 	.word	0x0040246d
  402720:	204082e4 	.word	0x204082e4
  402724:	00402391 	.word	0x00402391
  402728:	204072d0 	.word	0x204072d0
  40272c:	08f0d180 	.word	0x08f0d180
  402730:	004009a5 	.word	0x004009a5
  402734:	004009f9 	.word	0x004009f9
  402738:	004009ff 	.word	0x004009ff
  40273c:	20400024 	.word	0x20400024
  402740:	00402e0d 	.word	0x00402e0d
  402744:	00405a8c 	.word	0x00405a8c
  402748:	00402dfd 	.word	0x00402dfd
  40274c:	00400aed 	.word	0x00400aed
  402750:	20400010 	.word	0x20400010
  402754:	00405ae0 	.word	0x00405ae0
  402758:	00402b09 	.word	0x00402b09
  40275c:	2040000c 	.word	0x2040000c
  402760:	00405afc 	.word	0x00405afc
  402764:	00405b14 	.word	0x00405b14
  402768:	00401341 	.word	0x00401341
  40276c:	004011b5 	.word	0x004011b5
  402770:	00400ed1 	.word	0x00400ed1
  402774:	00401101 	.word	0x00401101
  402778:	00400f15 	.word	0x00400f15
  40277c:	00400a35 	.word	0x00400a35
  402780:	204082c8 	.word	0x204082c8
  402784:	204075cc 	.word	0x204075cc
  402788:	00402569 	.word	0x00402569
  40278c:	204072d4 	.word	0x204072d4
  402790:	0040124d 	.word	0x0040124d
  402794:	204082f8 	.word	0x204082f8
  402798:	00401289 	.word	0x00401289
  40279c:	00405b24 	.word	0x00405b24
  4027a0:	00405b40 	.word	0x00405b40
  4027a4:	0fe03f81 	.word	0x0fe03f81

004027a8 <__aeabi_uldivmod>:
  4027a8:	b953      	cbnz	r3, 4027c0 <__aeabi_uldivmod+0x18>
  4027aa:	b94a      	cbnz	r2, 4027c0 <__aeabi_uldivmod+0x18>
  4027ac:	2900      	cmp	r1, #0
  4027ae:	bf08      	it	eq
  4027b0:	2800      	cmpeq	r0, #0
  4027b2:	bf1c      	itt	ne
  4027b4:	f04f 31ff 	movne.w	r1, #4294967295
  4027b8:	f04f 30ff 	movne.w	r0, #4294967295
  4027bc:	f000 b97a 	b.w	402ab4 <__aeabi_idiv0>
  4027c0:	f1ad 0c08 	sub.w	ip, sp, #8
  4027c4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4027c8:	f000 f806 	bl	4027d8 <__udivmoddi4>
  4027cc:	f8dd e004 	ldr.w	lr, [sp, #4]
  4027d0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4027d4:	b004      	add	sp, #16
  4027d6:	4770      	bx	lr

004027d8 <__udivmoddi4>:
  4027d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4027dc:	468c      	mov	ip, r1
  4027de:	460d      	mov	r5, r1
  4027e0:	4604      	mov	r4, r0
  4027e2:	9e08      	ldr	r6, [sp, #32]
  4027e4:	2b00      	cmp	r3, #0
  4027e6:	d151      	bne.n	40288c <__udivmoddi4+0xb4>
  4027e8:	428a      	cmp	r2, r1
  4027ea:	4617      	mov	r7, r2
  4027ec:	d96d      	bls.n	4028ca <__udivmoddi4+0xf2>
  4027ee:	fab2 fe82 	clz	lr, r2
  4027f2:	f1be 0f00 	cmp.w	lr, #0
  4027f6:	d00b      	beq.n	402810 <__udivmoddi4+0x38>
  4027f8:	f1ce 0c20 	rsb	ip, lr, #32
  4027fc:	fa01 f50e 	lsl.w	r5, r1, lr
  402800:	fa20 fc0c 	lsr.w	ip, r0, ip
  402804:	fa02 f70e 	lsl.w	r7, r2, lr
  402808:	ea4c 0c05 	orr.w	ip, ip, r5
  40280c:	fa00 f40e 	lsl.w	r4, r0, lr
  402810:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  402814:	0c25      	lsrs	r5, r4, #16
  402816:	fbbc f8fa 	udiv	r8, ip, sl
  40281a:	fa1f f987 	uxth.w	r9, r7
  40281e:	fb0a cc18 	mls	ip, sl, r8, ip
  402822:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  402826:	fb08 f309 	mul.w	r3, r8, r9
  40282a:	42ab      	cmp	r3, r5
  40282c:	d90a      	bls.n	402844 <__udivmoddi4+0x6c>
  40282e:	19ed      	adds	r5, r5, r7
  402830:	f108 32ff 	add.w	r2, r8, #4294967295
  402834:	f080 8123 	bcs.w	402a7e <__udivmoddi4+0x2a6>
  402838:	42ab      	cmp	r3, r5
  40283a:	f240 8120 	bls.w	402a7e <__udivmoddi4+0x2a6>
  40283e:	f1a8 0802 	sub.w	r8, r8, #2
  402842:	443d      	add	r5, r7
  402844:	1aed      	subs	r5, r5, r3
  402846:	b2a4      	uxth	r4, r4
  402848:	fbb5 f0fa 	udiv	r0, r5, sl
  40284c:	fb0a 5510 	mls	r5, sl, r0, r5
  402850:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  402854:	fb00 f909 	mul.w	r9, r0, r9
  402858:	45a1      	cmp	r9, r4
  40285a:	d909      	bls.n	402870 <__udivmoddi4+0x98>
  40285c:	19e4      	adds	r4, r4, r7
  40285e:	f100 33ff 	add.w	r3, r0, #4294967295
  402862:	f080 810a 	bcs.w	402a7a <__udivmoddi4+0x2a2>
  402866:	45a1      	cmp	r9, r4
  402868:	f240 8107 	bls.w	402a7a <__udivmoddi4+0x2a2>
  40286c:	3802      	subs	r0, #2
  40286e:	443c      	add	r4, r7
  402870:	eba4 0409 	sub.w	r4, r4, r9
  402874:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  402878:	2100      	movs	r1, #0
  40287a:	2e00      	cmp	r6, #0
  40287c:	d061      	beq.n	402942 <__udivmoddi4+0x16a>
  40287e:	fa24 f40e 	lsr.w	r4, r4, lr
  402882:	2300      	movs	r3, #0
  402884:	6034      	str	r4, [r6, #0]
  402886:	6073      	str	r3, [r6, #4]
  402888:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40288c:	428b      	cmp	r3, r1
  40288e:	d907      	bls.n	4028a0 <__udivmoddi4+0xc8>
  402890:	2e00      	cmp	r6, #0
  402892:	d054      	beq.n	40293e <__udivmoddi4+0x166>
  402894:	2100      	movs	r1, #0
  402896:	e886 0021 	stmia.w	r6, {r0, r5}
  40289a:	4608      	mov	r0, r1
  40289c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4028a0:	fab3 f183 	clz	r1, r3
  4028a4:	2900      	cmp	r1, #0
  4028a6:	f040 808e 	bne.w	4029c6 <__udivmoddi4+0x1ee>
  4028aa:	42ab      	cmp	r3, r5
  4028ac:	d302      	bcc.n	4028b4 <__udivmoddi4+0xdc>
  4028ae:	4282      	cmp	r2, r0
  4028b0:	f200 80fa 	bhi.w	402aa8 <__udivmoddi4+0x2d0>
  4028b4:	1a84      	subs	r4, r0, r2
  4028b6:	eb65 0503 	sbc.w	r5, r5, r3
  4028ba:	2001      	movs	r0, #1
  4028bc:	46ac      	mov	ip, r5
  4028be:	2e00      	cmp	r6, #0
  4028c0:	d03f      	beq.n	402942 <__udivmoddi4+0x16a>
  4028c2:	e886 1010 	stmia.w	r6, {r4, ip}
  4028c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4028ca:	b912      	cbnz	r2, 4028d2 <__udivmoddi4+0xfa>
  4028cc:	2701      	movs	r7, #1
  4028ce:	fbb7 f7f2 	udiv	r7, r7, r2
  4028d2:	fab7 fe87 	clz	lr, r7
  4028d6:	f1be 0f00 	cmp.w	lr, #0
  4028da:	d134      	bne.n	402946 <__udivmoddi4+0x16e>
  4028dc:	1beb      	subs	r3, r5, r7
  4028de:	0c3a      	lsrs	r2, r7, #16
  4028e0:	fa1f fc87 	uxth.w	ip, r7
  4028e4:	2101      	movs	r1, #1
  4028e6:	fbb3 f8f2 	udiv	r8, r3, r2
  4028ea:	0c25      	lsrs	r5, r4, #16
  4028ec:	fb02 3318 	mls	r3, r2, r8, r3
  4028f0:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4028f4:	fb0c f308 	mul.w	r3, ip, r8
  4028f8:	42ab      	cmp	r3, r5
  4028fa:	d907      	bls.n	40290c <__udivmoddi4+0x134>
  4028fc:	19ed      	adds	r5, r5, r7
  4028fe:	f108 30ff 	add.w	r0, r8, #4294967295
  402902:	d202      	bcs.n	40290a <__udivmoddi4+0x132>
  402904:	42ab      	cmp	r3, r5
  402906:	f200 80d1 	bhi.w	402aac <__udivmoddi4+0x2d4>
  40290a:	4680      	mov	r8, r0
  40290c:	1aed      	subs	r5, r5, r3
  40290e:	b2a3      	uxth	r3, r4
  402910:	fbb5 f0f2 	udiv	r0, r5, r2
  402914:	fb02 5510 	mls	r5, r2, r0, r5
  402918:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  40291c:	fb0c fc00 	mul.w	ip, ip, r0
  402920:	45a4      	cmp	ip, r4
  402922:	d907      	bls.n	402934 <__udivmoddi4+0x15c>
  402924:	19e4      	adds	r4, r4, r7
  402926:	f100 33ff 	add.w	r3, r0, #4294967295
  40292a:	d202      	bcs.n	402932 <__udivmoddi4+0x15a>
  40292c:	45a4      	cmp	ip, r4
  40292e:	f200 80b8 	bhi.w	402aa2 <__udivmoddi4+0x2ca>
  402932:	4618      	mov	r0, r3
  402934:	eba4 040c 	sub.w	r4, r4, ip
  402938:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  40293c:	e79d      	b.n	40287a <__udivmoddi4+0xa2>
  40293e:	4631      	mov	r1, r6
  402940:	4630      	mov	r0, r6
  402942:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402946:	f1ce 0420 	rsb	r4, lr, #32
  40294a:	fa05 f30e 	lsl.w	r3, r5, lr
  40294e:	fa07 f70e 	lsl.w	r7, r7, lr
  402952:	fa20 f804 	lsr.w	r8, r0, r4
  402956:	0c3a      	lsrs	r2, r7, #16
  402958:	fa25 f404 	lsr.w	r4, r5, r4
  40295c:	ea48 0803 	orr.w	r8, r8, r3
  402960:	fbb4 f1f2 	udiv	r1, r4, r2
  402964:	ea4f 4518 	mov.w	r5, r8, lsr #16
  402968:	fb02 4411 	mls	r4, r2, r1, r4
  40296c:	fa1f fc87 	uxth.w	ip, r7
  402970:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  402974:	fb01 f30c 	mul.w	r3, r1, ip
  402978:	42ab      	cmp	r3, r5
  40297a:	fa00 f40e 	lsl.w	r4, r0, lr
  40297e:	d909      	bls.n	402994 <__udivmoddi4+0x1bc>
  402980:	19ed      	adds	r5, r5, r7
  402982:	f101 30ff 	add.w	r0, r1, #4294967295
  402986:	f080 808a 	bcs.w	402a9e <__udivmoddi4+0x2c6>
  40298a:	42ab      	cmp	r3, r5
  40298c:	f240 8087 	bls.w	402a9e <__udivmoddi4+0x2c6>
  402990:	3902      	subs	r1, #2
  402992:	443d      	add	r5, r7
  402994:	1aeb      	subs	r3, r5, r3
  402996:	fa1f f588 	uxth.w	r5, r8
  40299a:	fbb3 f0f2 	udiv	r0, r3, r2
  40299e:	fb02 3310 	mls	r3, r2, r0, r3
  4029a2:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4029a6:	fb00 f30c 	mul.w	r3, r0, ip
  4029aa:	42ab      	cmp	r3, r5
  4029ac:	d907      	bls.n	4029be <__udivmoddi4+0x1e6>
  4029ae:	19ed      	adds	r5, r5, r7
  4029b0:	f100 38ff 	add.w	r8, r0, #4294967295
  4029b4:	d26f      	bcs.n	402a96 <__udivmoddi4+0x2be>
  4029b6:	42ab      	cmp	r3, r5
  4029b8:	d96d      	bls.n	402a96 <__udivmoddi4+0x2be>
  4029ba:	3802      	subs	r0, #2
  4029bc:	443d      	add	r5, r7
  4029be:	1aeb      	subs	r3, r5, r3
  4029c0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4029c4:	e78f      	b.n	4028e6 <__udivmoddi4+0x10e>
  4029c6:	f1c1 0720 	rsb	r7, r1, #32
  4029ca:	fa22 f807 	lsr.w	r8, r2, r7
  4029ce:	408b      	lsls	r3, r1
  4029d0:	fa05 f401 	lsl.w	r4, r5, r1
  4029d4:	ea48 0303 	orr.w	r3, r8, r3
  4029d8:	fa20 fe07 	lsr.w	lr, r0, r7
  4029dc:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  4029e0:	40fd      	lsrs	r5, r7
  4029e2:	ea4e 0e04 	orr.w	lr, lr, r4
  4029e6:	fbb5 f9fc 	udiv	r9, r5, ip
  4029ea:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4029ee:	fb0c 5519 	mls	r5, ip, r9, r5
  4029f2:	fa1f f883 	uxth.w	r8, r3
  4029f6:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  4029fa:	fb09 f408 	mul.w	r4, r9, r8
  4029fe:	42ac      	cmp	r4, r5
  402a00:	fa02 f201 	lsl.w	r2, r2, r1
  402a04:	fa00 fa01 	lsl.w	sl, r0, r1
  402a08:	d908      	bls.n	402a1c <__udivmoddi4+0x244>
  402a0a:	18ed      	adds	r5, r5, r3
  402a0c:	f109 30ff 	add.w	r0, r9, #4294967295
  402a10:	d243      	bcs.n	402a9a <__udivmoddi4+0x2c2>
  402a12:	42ac      	cmp	r4, r5
  402a14:	d941      	bls.n	402a9a <__udivmoddi4+0x2c2>
  402a16:	f1a9 0902 	sub.w	r9, r9, #2
  402a1a:	441d      	add	r5, r3
  402a1c:	1b2d      	subs	r5, r5, r4
  402a1e:	fa1f fe8e 	uxth.w	lr, lr
  402a22:	fbb5 f0fc 	udiv	r0, r5, ip
  402a26:	fb0c 5510 	mls	r5, ip, r0, r5
  402a2a:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  402a2e:	fb00 f808 	mul.w	r8, r0, r8
  402a32:	45a0      	cmp	r8, r4
  402a34:	d907      	bls.n	402a46 <__udivmoddi4+0x26e>
  402a36:	18e4      	adds	r4, r4, r3
  402a38:	f100 35ff 	add.w	r5, r0, #4294967295
  402a3c:	d229      	bcs.n	402a92 <__udivmoddi4+0x2ba>
  402a3e:	45a0      	cmp	r8, r4
  402a40:	d927      	bls.n	402a92 <__udivmoddi4+0x2ba>
  402a42:	3802      	subs	r0, #2
  402a44:	441c      	add	r4, r3
  402a46:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  402a4a:	eba4 0408 	sub.w	r4, r4, r8
  402a4e:	fba0 8902 	umull	r8, r9, r0, r2
  402a52:	454c      	cmp	r4, r9
  402a54:	46c6      	mov	lr, r8
  402a56:	464d      	mov	r5, r9
  402a58:	d315      	bcc.n	402a86 <__udivmoddi4+0x2ae>
  402a5a:	d012      	beq.n	402a82 <__udivmoddi4+0x2aa>
  402a5c:	b156      	cbz	r6, 402a74 <__udivmoddi4+0x29c>
  402a5e:	ebba 030e 	subs.w	r3, sl, lr
  402a62:	eb64 0405 	sbc.w	r4, r4, r5
  402a66:	fa04 f707 	lsl.w	r7, r4, r7
  402a6a:	40cb      	lsrs	r3, r1
  402a6c:	431f      	orrs	r7, r3
  402a6e:	40cc      	lsrs	r4, r1
  402a70:	6037      	str	r7, [r6, #0]
  402a72:	6074      	str	r4, [r6, #4]
  402a74:	2100      	movs	r1, #0
  402a76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402a7a:	4618      	mov	r0, r3
  402a7c:	e6f8      	b.n	402870 <__udivmoddi4+0x98>
  402a7e:	4690      	mov	r8, r2
  402a80:	e6e0      	b.n	402844 <__udivmoddi4+0x6c>
  402a82:	45c2      	cmp	sl, r8
  402a84:	d2ea      	bcs.n	402a5c <__udivmoddi4+0x284>
  402a86:	ebb8 0e02 	subs.w	lr, r8, r2
  402a8a:	eb69 0503 	sbc.w	r5, r9, r3
  402a8e:	3801      	subs	r0, #1
  402a90:	e7e4      	b.n	402a5c <__udivmoddi4+0x284>
  402a92:	4628      	mov	r0, r5
  402a94:	e7d7      	b.n	402a46 <__udivmoddi4+0x26e>
  402a96:	4640      	mov	r0, r8
  402a98:	e791      	b.n	4029be <__udivmoddi4+0x1e6>
  402a9a:	4681      	mov	r9, r0
  402a9c:	e7be      	b.n	402a1c <__udivmoddi4+0x244>
  402a9e:	4601      	mov	r1, r0
  402aa0:	e778      	b.n	402994 <__udivmoddi4+0x1bc>
  402aa2:	3802      	subs	r0, #2
  402aa4:	443c      	add	r4, r7
  402aa6:	e745      	b.n	402934 <__udivmoddi4+0x15c>
  402aa8:	4608      	mov	r0, r1
  402aaa:	e708      	b.n	4028be <__udivmoddi4+0xe6>
  402aac:	f1a8 0802 	sub.w	r8, r8, #2
  402ab0:	443d      	add	r5, r7
  402ab2:	e72b      	b.n	40290c <__udivmoddi4+0x134>

00402ab4 <__aeabi_idiv0>:
  402ab4:	4770      	bx	lr
  402ab6:	bf00      	nop

00402ab8 <__libc_init_array>:
  402ab8:	b570      	push	{r4, r5, r6, lr}
  402aba:	4e0f      	ldr	r6, [pc, #60]	; (402af8 <__libc_init_array+0x40>)
  402abc:	4d0f      	ldr	r5, [pc, #60]	; (402afc <__libc_init_array+0x44>)
  402abe:	1b76      	subs	r6, r6, r5
  402ac0:	10b6      	asrs	r6, r6, #2
  402ac2:	bf18      	it	ne
  402ac4:	2400      	movne	r4, #0
  402ac6:	d005      	beq.n	402ad4 <__libc_init_array+0x1c>
  402ac8:	3401      	adds	r4, #1
  402aca:	f855 3b04 	ldr.w	r3, [r5], #4
  402ace:	4798      	blx	r3
  402ad0:	42a6      	cmp	r6, r4
  402ad2:	d1f9      	bne.n	402ac8 <__libc_init_array+0x10>
  402ad4:	4e0a      	ldr	r6, [pc, #40]	; (402b00 <__libc_init_array+0x48>)
  402ad6:	4d0b      	ldr	r5, [pc, #44]	; (402b04 <__libc_init_array+0x4c>)
  402ad8:	1b76      	subs	r6, r6, r5
  402ada:	f003 f8f7 	bl	405ccc <_init>
  402ade:	10b6      	asrs	r6, r6, #2
  402ae0:	bf18      	it	ne
  402ae2:	2400      	movne	r4, #0
  402ae4:	d006      	beq.n	402af4 <__libc_init_array+0x3c>
  402ae6:	3401      	adds	r4, #1
  402ae8:	f855 3b04 	ldr.w	r3, [r5], #4
  402aec:	4798      	blx	r3
  402aee:	42a6      	cmp	r6, r4
  402af0:	d1f9      	bne.n	402ae6 <__libc_init_array+0x2e>
  402af2:	bd70      	pop	{r4, r5, r6, pc}
  402af4:	bd70      	pop	{r4, r5, r6, pc}
  402af6:	bf00      	nop
  402af8:	00405cd8 	.word	0x00405cd8
  402afc:	00405cd8 	.word	0x00405cd8
  402b00:	00405ce0 	.word	0x00405ce0
  402b04:	00405cd8 	.word	0x00405cd8

00402b08 <iprintf>:
  402b08:	b40f      	push	{r0, r1, r2, r3}
  402b0a:	b500      	push	{lr}
  402b0c:	4907      	ldr	r1, [pc, #28]	; (402b2c <iprintf+0x24>)
  402b0e:	b083      	sub	sp, #12
  402b10:	ab04      	add	r3, sp, #16
  402b12:	6808      	ldr	r0, [r1, #0]
  402b14:	f853 2b04 	ldr.w	r2, [r3], #4
  402b18:	6881      	ldr	r1, [r0, #8]
  402b1a:	9301      	str	r3, [sp, #4]
  402b1c:	f000 fafe 	bl	40311c <_vfiprintf_r>
  402b20:	b003      	add	sp, #12
  402b22:	f85d eb04 	ldr.w	lr, [sp], #4
  402b26:	b004      	add	sp, #16
  402b28:	4770      	bx	lr
  402b2a:	bf00      	nop
  402b2c:	20400024 	.word	0x20400024

00402b30 <memcmp>:
  402b30:	2a03      	cmp	r2, #3
  402b32:	b470      	push	{r4, r5, r6}
  402b34:	d922      	bls.n	402b7c <memcmp+0x4c>
  402b36:	ea40 0301 	orr.w	r3, r0, r1
  402b3a:	079b      	lsls	r3, r3, #30
  402b3c:	d011      	beq.n	402b62 <memcmp+0x32>
  402b3e:	7803      	ldrb	r3, [r0, #0]
  402b40:	780c      	ldrb	r4, [r1, #0]
  402b42:	42a3      	cmp	r3, r4
  402b44:	d11d      	bne.n	402b82 <memcmp+0x52>
  402b46:	440a      	add	r2, r1
  402b48:	3101      	adds	r1, #1
  402b4a:	e005      	b.n	402b58 <memcmp+0x28>
  402b4c:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  402b50:	f811 4b01 	ldrb.w	r4, [r1], #1
  402b54:	42a3      	cmp	r3, r4
  402b56:	d114      	bne.n	402b82 <memcmp+0x52>
  402b58:	4291      	cmp	r1, r2
  402b5a:	d1f7      	bne.n	402b4c <memcmp+0x1c>
  402b5c:	2000      	movs	r0, #0
  402b5e:	bc70      	pop	{r4, r5, r6}
  402b60:	4770      	bx	lr
  402b62:	680d      	ldr	r5, [r1, #0]
  402b64:	6806      	ldr	r6, [r0, #0]
  402b66:	42ae      	cmp	r6, r5
  402b68:	460c      	mov	r4, r1
  402b6a:	4603      	mov	r3, r0
  402b6c:	f101 0104 	add.w	r1, r1, #4
  402b70:	f100 0004 	add.w	r0, r0, #4
  402b74:	d108      	bne.n	402b88 <memcmp+0x58>
  402b76:	3a04      	subs	r2, #4
  402b78:	2a03      	cmp	r2, #3
  402b7a:	d8f2      	bhi.n	402b62 <memcmp+0x32>
  402b7c:	2a00      	cmp	r2, #0
  402b7e:	d1de      	bne.n	402b3e <memcmp+0xe>
  402b80:	e7ec      	b.n	402b5c <memcmp+0x2c>
  402b82:	1b18      	subs	r0, r3, r4
  402b84:	bc70      	pop	{r4, r5, r6}
  402b86:	4770      	bx	lr
  402b88:	4621      	mov	r1, r4
  402b8a:	4618      	mov	r0, r3
  402b8c:	e7d7      	b.n	402b3e <memcmp+0xe>
  402b8e:	bf00      	nop

00402b90 <memcpy>:
  402b90:	4684      	mov	ip, r0
  402b92:	ea41 0300 	orr.w	r3, r1, r0
  402b96:	f013 0303 	ands.w	r3, r3, #3
  402b9a:	d16d      	bne.n	402c78 <memcpy+0xe8>
  402b9c:	3a40      	subs	r2, #64	; 0x40
  402b9e:	d341      	bcc.n	402c24 <memcpy+0x94>
  402ba0:	f851 3b04 	ldr.w	r3, [r1], #4
  402ba4:	f840 3b04 	str.w	r3, [r0], #4
  402ba8:	f851 3b04 	ldr.w	r3, [r1], #4
  402bac:	f840 3b04 	str.w	r3, [r0], #4
  402bb0:	f851 3b04 	ldr.w	r3, [r1], #4
  402bb4:	f840 3b04 	str.w	r3, [r0], #4
  402bb8:	f851 3b04 	ldr.w	r3, [r1], #4
  402bbc:	f840 3b04 	str.w	r3, [r0], #4
  402bc0:	f851 3b04 	ldr.w	r3, [r1], #4
  402bc4:	f840 3b04 	str.w	r3, [r0], #4
  402bc8:	f851 3b04 	ldr.w	r3, [r1], #4
  402bcc:	f840 3b04 	str.w	r3, [r0], #4
  402bd0:	f851 3b04 	ldr.w	r3, [r1], #4
  402bd4:	f840 3b04 	str.w	r3, [r0], #4
  402bd8:	f851 3b04 	ldr.w	r3, [r1], #4
  402bdc:	f840 3b04 	str.w	r3, [r0], #4
  402be0:	f851 3b04 	ldr.w	r3, [r1], #4
  402be4:	f840 3b04 	str.w	r3, [r0], #4
  402be8:	f851 3b04 	ldr.w	r3, [r1], #4
  402bec:	f840 3b04 	str.w	r3, [r0], #4
  402bf0:	f851 3b04 	ldr.w	r3, [r1], #4
  402bf4:	f840 3b04 	str.w	r3, [r0], #4
  402bf8:	f851 3b04 	ldr.w	r3, [r1], #4
  402bfc:	f840 3b04 	str.w	r3, [r0], #4
  402c00:	f851 3b04 	ldr.w	r3, [r1], #4
  402c04:	f840 3b04 	str.w	r3, [r0], #4
  402c08:	f851 3b04 	ldr.w	r3, [r1], #4
  402c0c:	f840 3b04 	str.w	r3, [r0], #4
  402c10:	f851 3b04 	ldr.w	r3, [r1], #4
  402c14:	f840 3b04 	str.w	r3, [r0], #4
  402c18:	f851 3b04 	ldr.w	r3, [r1], #4
  402c1c:	f840 3b04 	str.w	r3, [r0], #4
  402c20:	3a40      	subs	r2, #64	; 0x40
  402c22:	d2bd      	bcs.n	402ba0 <memcpy+0x10>
  402c24:	3230      	adds	r2, #48	; 0x30
  402c26:	d311      	bcc.n	402c4c <memcpy+0xbc>
  402c28:	f851 3b04 	ldr.w	r3, [r1], #4
  402c2c:	f840 3b04 	str.w	r3, [r0], #4
  402c30:	f851 3b04 	ldr.w	r3, [r1], #4
  402c34:	f840 3b04 	str.w	r3, [r0], #4
  402c38:	f851 3b04 	ldr.w	r3, [r1], #4
  402c3c:	f840 3b04 	str.w	r3, [r0], #4
  402c40:	f851 3b04 	ldr.w	r3, [r1], #4
  402c44:	f840 3b04 	str.w	r3, [r0], #4
  402c48:	3a10      	subs	r2, #16
  402c4a:	d2ed      	bcs.n	402c28 <memcpy+0x98>
  402c4c:	320c      	adds	r2, #12
  402c4e:	d305      	bcc.n	402c5c <memcpy+0xcc>
  402c50:	f851 3b04 	ldr.w	r3, [r1], #4
  402c54:	f840 3b04 	str.w	r3, [r0], #4
  402c58:	3a04      	subs	r2, #4
  402c5a:	d2f9      	bcs.n	402c50 <memcpy+0xc0>
  402c5c:	3204      	adds	r2, #4
  402c5e:	d008      	beq.n	402c72 <memcpy+0xe2>
  402c60:	07d2      	lsls	r2, r2, #31
  402c62:	bf1c      	itt	ne
  402c64:	f811 3b01 	ldrbne.w	r3, [r1], #1
  402c68:	f800 3b01 	strbne.w	r3, [r0], #1
  402c6c:	d301      	bcc.n	402c72 <memcpy+0xe2>
  402c6e:	880b      	ldrh	r3, [r1, #0]
  402c70:	8003      	strh	r3, [r0, #0]
  402c72:	4660      	mov	r0, ip
  402c74:	4770      	bx	lr
  402c76:	bf00      	nop
  402c78:	2a08      	cmp	r2, #8
  402c7a:	d313      	bcc.n	402ca4 <memcpy+0x114>
  402c7c:	078b      	lsls	r3, r1, #30
  402c7e:	d08d      	beq.n	402b9c <memcpy+0xc>
  402c80:	f010 0303 	ands.w	r3, r0, #3
  402c84:	d08a      	beq.n	402b9c <memcpy+0xc>
  402c86:	f1c3 0304 	rsb	r3, r3, #4
  402c8a:	1ad2      	subs	r2, r2, r3
  402c8c:	07db      	lsls	r3, r3, #31
  402c8e:	bf1c      	itt	ne
  402c90:	f811 3b01 	ldrbne.w	r3, [r1], #1
  402c94:	f800 3b01 	strbne.w	r3, [r0], #1
  402c98:	d380      	bcc.n	402b9c <memcpy+0xc>
  402c9a:	f831 3b02 	ldrh.w	r3, [r1], #2
  402c9e:	f820 3b02 	strh.w	r3, [r0], #2
  402ca2:	e77b      	b.n	402b9c <memcpy+0xc>
  402ca4:	3a04      	subs	r2, #4
  402ca6:	d3d9      	bcc.n	402c5c <memcpy+0xcc>
  402ca8:	3a01      	subs	r2, #1
  402caa:	f811 3b01 	ldrb.w	r3, [r1], #1
  402cae:	f800 3b01 	strb.w	r3, [r0], #1
  402cb2:	d2f9      	bcs.n	402ca8 <memcpy+0x118>
  402cb4:	780b      	ldrb	r3, [r1, #0]
  402cb6:	7003      	strb	r3, [r0, #0]
  402cb8:	784b      	ldrb	r3, [r1, #1]
  402cba:	7043      	strb	r3, [r0, #1]
  402cbc:	788b      	ldrb	r3, [r1, #2]
  402cbe:	7083      	strb	r3, [r0, #2]
  402cc0:	4660      	mov	r0, ip
  402cc2:	4770      	bx	lr

00402cc4 <memset>:
  402cc4:	b470      	push	{r4, r5, r6}
  402cc6:	0786      	lsls	r6, r0, #30
  402cc8:	d046      	beq.n	402d58 <memset+0x94>
  402cca:	1e54      	subs	r4, r2, #1
  402ccc:	2a00      	cmp	r2, #0
  402cce:	d041      	beq.n	402d54 <memset+0x90>
  402cd0:	b2ca      	uxtb	r2, r1
  402cd2:	4603      	mov	r3, r0
  402cd4:	e002      	b.n	402cdc <memset+0x18>
  402cd6:	f114 34ff 	adds.w	r4, r4, #4294967295
  402cda:	d33b      	bcc.n	402d54 <memset+0x90>
  402cdc:	f803 2b01 	strb.w	r2, [r3], #1
  402ce0:	079d      	lsls	r5, r3, #30
  402ce2:	d1f8      	bne.n	402cd6 <memset+0x12>
  402ce4:	2c03      	cmp	r4, #3
  402ce6:	d92e      	bls.n	402d46 <memset+0x82>
  402ce8:	b2cd      	uxtb	r5, r1
  402cea:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  402cee:	2c0f      	cmp	r4, #15
  402cf0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  402cf4:	d919      	bls.n	402d2a <memset+0x66>
  402cf6:	f103 0210 	add.w	r2, r3, #16
  402cfa:	4626      	mov	r6, r4
  402cfc:	3e10      	subs	r6, #16
  402cfe:	2e0f      	cmp	r6, #15
  402d00:	f842 5c10 	str.w	r5, [r2, #-16]
  402d04:	f842 5c0c 	str.w	r5, [r2, #-12]
  402d08:	f842 5c08 	str.w	r5, [r2, #-8]
  402d0c:	f842 5c04 	str.w	r5, [r2, #-4]
  402d10:	f102 0210 	add.w	r2, r2, #16
  402d14:	d8f2      	bhi.n	402cfc <memset+0x38>
  402d16:	f1a4 0210 	sub.w	r2, r4, #16
  402d1a:	f022 020f 	bic.w	r2, r2, #15
  402d1e:	f004 040f 	and.w	r4, r4, #15
  402d22:	3210      	adds	r2, #16
  402d24:	2c03      	cmp	r4, #3
  402d26:	4413      	add	r3, r2
  402d28:	d90d      	bls.n	402d46 <memset+0x82>
  402d2a:	461e      	mov	r6, r3
  402d2c:	4622      	mov	r2, r4
  402d2e:	3a04      	subs	r2, #4
  402d30:	2a03      	cmp	r2, #3
  402d32:	f846 5b04 	str.w	r5, [r6], #4
  402d36:	d8fa      	bhi.n	402d2e <memset+0x6a>
  402d38:	1f22      	subs	r2, r4, #4
  402d3a:	f022 0203 	bic.w	r2, r2, #3
  402d3e:	3204      	adds	r2, #4
  402d40:	4413      	add	r3, r2
  402d42:	f004 0403 	and.w	r4, r4, #3
  402d46:	b12c      	cbz	r4, 402d54 <memset+0x90>
  402d48:	b2c9      	uxtb	r1, r1
  402d4a:	441c      	add	r4, r3
  402d4c:	f803 1b01 	strb.w	r1, [r3], #1
  402d50:	429c      	cmp	r4, r3
  402d52:	d1fb      	bne.n	402d4c <memset+0x88>
  402d54:	bc70      	pop	{r4, r5, r6}
  402d56:	4770      	bx	lr
  402d58:	4614      	mov	r4, r2
  402d5a:	4603      	mov	r3, r0
  402d5c:	e7c2      	b.n	402ce4 <memset+0x20>
  402d5e:	bf00      	nop

00402d60 <_puts_r>:
  402d60:	b5f0      	push	{r4, r5, r6, r7, lr}
  402d62:	4605      	mov	r5, r0
  402d64:	b089      	sub	sp, #36	; 0x24
  402d66:	4608      	mov	r0, r1
  402d68:	460c      	mov	r4, r1
  402d6a:	f000 f929 	bl	402fc0 <strlen>
  402d6e:	6bab      	ldr	r3, [r5, #56]	; 0x38
  402d70:	4f21      	ldr	r7, [pc, #132]	; (402df8 <_puts_r+0x98>)
  402d72:	9404      	str	r4, [sp, #16]
  402d74:	2601      	movs	r6, #1
  402d76:	1c44      	adds	r4, r0, #1
  402d78:	a904      	add	r1, sp, #16
  402d7a:	2202      	movs	r2, #2
  402d7c:	9403      	str	r4, [sp, #12]
  402d7e:	9005      	str	r0, [sp, #20]
  402d80:	68ac      	ldr	r4, [r5, #8]
  402d82:	9706      	str	r7, [sp, #24]
  402d84:	9607      	str	r6, [sp, #28]
  402d86:	9101      	str	r1, [sp, #4]
  402d88:	9202      	str	r2, [sp, #8]
  402d8a:	b353      	cbz	r3, 402de2 <_puts_r+0x82>
  402d8c:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402d8e:	f013 0f01 	tst.w	r3, #1
  402d92:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402d96:	b29a      	uxth	r2, r3
  402d98:	d101      	bne.n	402d9e <_puts_r+0x3e>
  402d9a:	0590      	lsls	r0, r2, #22
  402d9c:	d525      	bpl.n	402dea <_puts_r+0x8a>
  402d9e:	0491      	lsls	r1, r2, #18
  402da0:	d406      	bmi.n	402db0 <_puts_r+0x50>
  402da2:	6e62      	ldr	r2, [r4, #100]	; 0x64
  402da4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  402da8:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  402dac:	81a3      	strh	r3, [r4, #12]
  402dae:	6662      	str	r2, [r4, #100]	; 0x64
  402db0:	4628      	mov	r0, r5
  402db2:	aa01      	add	r2, sp, #4
  402db4:	4621      	mov	r1, r4
  402db6:	f001 fbb3 	bl	404520 <__sfvwrite_r>
  402dba:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402dbc:	2800      	cmp	r0, #0
  402dbe:	bf0c      	ite	eq
  402dc0:	250a      	moveq	r5, #10
  402dc2:	f04f 35ff 	movne.w	r5, #4294967295
  402dc6:	07da      	lsls	r2, r3, #31
  402dc8:	d402      	bmi.n	402dd0 <_puts_r+0x70>
  402dca:	89a3      	ldrh	r3, [r4, #12]
  402dcc:	059b      	lsls	r3, r3, #22
  402dce:	d502      	bpl.n	402dd6 <_puts_r+0x76>
  402dd0:	4628      	mov	r0, r5
  402dd2:	b009      	add	sp, #36	; 0x24
  402dd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402dd6:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402dd8:	f001 fd58 	bl	40488c <__retarget_lock_release_recursive>
  402ddc:	4628      	mov	r0, r5
  402dde:	b009      	add	sp, #36	; 0x24
  402de0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402de2:	4628      	mov	r0, r5
  402de4:	f001 f990 	bl	404108 <__sinit>
  402de8:	e7d0      	b.n	402d8c <_puts_r+0x2c>
  402dea:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402dec:	f001 fd4c 	bl	404888 <__retarget_lock_acquire_recursive>
  402df0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402df4:	b29a      	uxth	r2, r3
  402df6:	e7d2      	b.n	402d9e <_puts_r+0x3e>
  402df8:	00405b3c 	.word	0x00405b3c

00402dfc <puts>:
  402dfc:	4b02      	ldr	r3, [pc, #8]	; (402e08 <puts+0xc>)
  402dfe:	4601      	mov	r1, r0
  402e00:	6818      	ldr	r0, [r3, #0]
  402e02:	f7ff bfad 	b.w	402d60 <_puts_r>
  402e06:	bf00      	nop
  402e08:	20400024 	.word	0x20400024

00402e0c <setbuf>:
  402e0c:	2900      	cmp	r1, #0
  402e0e:	bf0c      	ite	eq
  402e10:	2202      	moveq	r2, #2
  402e12:	2200      	movne	r2, #0
  402e14:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402e18:	f000 b800 	b.w	402e1c <setvbuf>

00402e1c <setvbuf>:
  402e1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  402e20:	4c61      	ldr	r4, [pc, #388]	; (402fa8 <setvbuf+0x18c>)
  402e22:	6825      	ldr	r5, [r4, #0]
  402e24:	b083      	sub	sp, #12
  402e26:	4604      	mov	r4, r0
  402e28:	460f      	mov	r7, r1
  402e2a:	4690      	mov	r8, r2
  402e2c:	461e      	mov	r6, r3
  402e2e:	b115      	cbz	r5, 402e36 <setvbuf+0x1a>
  402e30:	6bab      	ldr	r3, [r5, #56]	; 0x38
  402e32:	2b00      	cmp	r3, #0
  402e34:	d064      	beq.n	402f00 <setvbuf+0xe4>
  402e36:	f1b8 0f02 	cmp.w	r8, #2
  402e3a:	d006      	beq.n	402e4a <setvbuf+0x2e>
  402e3c:	f1b8 0f01 	cmp.w	r8, #1
  402e40:	f200 809f 	bhi.w	402f82 <setvbuf+0x166>
  402e44:	2e00      	cmp	r6, #0
  402e46:	f2c0 809c 	blt.w	402f82 <setvbuf+0x166>
  402e4a:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402e4c:	07d8      	lsls	r0, r3, #31
  402e4e:	d534      	bpl.n	402eba <setvbuf+0x9e>
  402e50:	4621      	mov	r1, r4
  402e52:	4628      	mov	r0, r5
  402e54:	f001 f900 	bl	404058 <_fflush_r>
  402e58:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402e5a:	b141      	cbz	r1, 402e6e <setvbuf+0x52>
  402e5c:	f104 0340 	add.w	r3, r4, #64	; 0x40
  402e60:	4299      	cmp	r1, r3
  402e62:	d002      	beq.n	402e6a <setvbuf+0x4e>
  402e64:	4628      	mov	r0, r5
  402e66:	f001 fa75 	bl	404354 <_free_r>
  402e6a:	2300      	movs	r3, #0
  402e6c:	6323      	str	r3, [r4, #48]	; 0x30
  402e6e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402e72:	2200      	movs	r2, #0
  402e74:	61a2      	str	r2, [r4, #24]
  402e76:	6062      	str	r2, [r4, #4]
  402e78:	061a      	lsls	r2, r3, #24
  402e7a:	d43a      	bmi.n	402ef2 <setvbuf+0xd6>
  402e7c:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  402e80:	f023 0303 	bic.w	r3, r3, #3
  402e84:	f1b8 0f02 	cmp.w	r8, #2
  402e88:	81a3      	strh	r3, [r4, #12]
  402e8a:	d01d      	beq.n	402ec8 <setvbuf+0xac>
  402e8c:	ab01      	add	r3, sp, #4
  402e8e:	466a      	mov	r2, sp
  402e90:	4621      	mov	r1, r4
  402e92:	4628      	mov	r0, r5
  402e94:	f001 fcfc 	bl	404890 <__swhatbuf_r>
  402e98:	89a3      	ldrh	r3, [r4, #12]
  402e9a:	4318      	orrs	r0, r3
  402e9c:	81a0      	strh	r0, [r4, #12]
  402e9e:	2e00      	cmp	r6, #0
  402ea0:	d132      	bne.n	402f08 <setvbuf+0xec>
  402ea2:	9e00      	ldr	r6, [sp, #0]
  402ea4:	4630      	mov	r0, r6
  402ea6:	f001 fd6b 	bl	404980 <malloc>
  402eaa:	4607      	mov	r7, r0
  402eac:	2800      	cmp	r0, #0
  402eae:	d06b      	beq.n	402f88 <setvbuf+0x16c>
  402eb0:	89a3      	ldrh	r3, [r4, #12]
  402eb2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402eb6:	81a3      	strh	r3, [r4, #12]
  402eb8:	e028      	b.n	402f0c <setvbuf+0xf0>
  402eba:	89a3      	ldrh	r3, [r4, #12]
  402ebc:	0599      	lsls	r1, r3, #22
  402ebe:	d4c7      	bmi.n	402e50 <setvbuf+0x34>
  402ec0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402ec2:	f001 fce1 	bl	404888 <__retarget_lock_acquire_recursive>
  402ec6:	e7c3      	b.n	402e50 <setvbuf+0x34>
  402ec8:	2500      	movs	r5, #0
  402eca:	6e61      	ldr	r1, [r4, #100]	; 0x64
  402ecc:	2600      	movs	r6, #0
  402ece:	f104 0243 	add.w	r2, r4, #67	; 0x43
  402ed2:	f043 0302 	orr.w	r3, r3, #2
  402ed6:	2001      	movs	r0, #1
  402ed8:	60a6      	str	r6, [r4, #8]
  402eda:	07ce      	lsls	r6, r1, #31
  402edc:	81a3      	strh	r3, [r4, #12]
  402ede:	6022      	str	r2, [r4, #0]
  402ee0:	6122      	str	r2, [r4, #16]
  402ee2:	6160      	str	r0, [r4, #20]
  402ee4:	d401      	bmi.n	402eea <setvbuf+0xce>
  402ee6:	0598      	lsls	r0, r3, #22
  402ee8:	d53e      	bpl.n	402f68 <setvbuf+0x14c>
  402eea:	4628      	mov	r0, r5
  402eec:	b003      	add	sp, #12
  402eee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402ef2:	6921      	ldr	r1, [r4, #16]
  402ef4:	4628      	mov	r0, r5
  402ef6:	f001 fa2d 	bl	404354 <_free_r>
  402efa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402efe:	e7bd      	b.n	402e7c <setvbuf+0x60>
  402f00:	4628      	mov	r0, r5
  402f02:	f001 f901 	bl	404108 <__sinit>
  402f06:	e796      	b.n	402e36 <setvbuf+0x1a>
  402f08:	2f00      	cmp	r7, #0
  402f0a:	d0cb      	beq.n	402ea4 <setvbuf+0x88>
  402f0c:	6bab      	ldr	r3, [r5, #56]	; 0x38
  402f0e:	2b00      	cmp	r3, #0
  402f10:	d033      	beq.n	402f7a <setvbuf+0x15e>
  402f12:	9b00      	ldr	r3, [sp, #0]
  402f14:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402f18:	6027      	str	r7, [r4, #0]
  402f1a:	429e      	cmp	r6, r3
  402f1c:	bf1c      	itt	ne
  402f1e:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  402f22:	81a2      	strhne	r2, [r4, #12]
  402f24:	f1b8 0f01 	cmp.w	r8, #1
  402f28:	bf04      	itt	eq
  402f2a:	f042 0201 	orreq.w	r2, r2, #1
  402f2e:	81a2      	strheq	r2, [r4, #12]
  402f30:	b292      	uxth	r2, r2
  402f32:	f012 0308 	ands.w	r3, r2, #8
  402f36:	6127      	str	r7, [r4, #16]
  402f38:	6166      	str	r6, [r4, #20]
  402f3a:	d00e      	beq.n	402f5a <setvbuf+0x13e>
  402f3c:	07d1      	lsls	r1, r2, #31
  402f3e:	d51a      	bpl.n	402f76 <setvbuf+0x15a>
  402f40:	6e65      	ldr	r5, [r4, #100]	; 0x64
  402f42:	4276      	negs	r6, r6
  402f44:	2300      	movs	r3, #0
  402f46:	f015 0501 	ands.w	r5, r5, #1
  402f4a:	61a6      	str	r6, [r4, #24]
  402f4c:	60a3      	str	r3, [r4, #8]
  402f4e:	d009      	beq.n	402f64 <setvbuf+0x148>
  402f50:	2500      	movs	r5, #0
  402f52:	4628      	mov	r0, r5
  402f54:	b003      	add	sp, #12
  402f56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402f5a:	60a3      	str	r3, [r4, #8]
  402f5c:	6e65      	ldr	r5, [r4, #100]	; 0x64
  402f5e:	f015 0501 	ands.w	r5, r5, #1
  402f62:	d1f5      	bne.n	402f50 <setvbuf+0x134>
  402f64:	0593      	lsls	r3, r2, #22
  402f66:	d4c0      	bmi.n	402eea <setvbuf+0xce>
  402f68:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402f6a:	f001 fc8f 	bl	40488c <__retarget_lock_release_recursive>
  402f6e:	4628      	mov	r0, r5
  402f70:	b003      	add	sp, #12
  402f72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402f76:	60a6      	str	r6, [r4, #8]
  402f78:	e7f0      	b.n	402f5c <setvbuf+0x140>
  402f7a:	4628      	mov	r0, r5
  402f7c:	f001 f8c4 	bl	404108 <__sinit>
  402f80:	e7c7      	b.n	402f12 <setvbuf+0xf6>
  402f82:	f04f 35ff 	mov.w	r5, #4294967295
  402f86:	e7b0      	b.n	402eea <setvbuf+0xce>
  402f88:	f8dd 9000 	ldr.w	r9, [sp]
  402f8c:	45b1      	cmp	r9, r6
  402f8e:	d004      	beq.n	402f9a <setvbuf+0x17e>
  402f90:	4648      	mov	r0, r9
  402f92:	f001 fcf5 	bl	404980 <malloc>
  402f96:	4607      	mov	r7, r0
  402f98:	b920      	cbnz	r0, 402fa4 <setvbuf+0x188>
  402f9a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402f9e:	f04f 35ff 	mov.w	r5, #4294967295
  402fa2:	e792      	b.n	402eca <setvbuf+0xae>
  402fa4:	464e      	mov	r6, r9
  402fa6:	e783      	b.n	402eb0 <setvbuf+0x94>
  402fa8:	20400024 	.word	0x20400024
	...

00402fc0 <strlen>:
  402fc0:	f890 f000 	pld	[r0]
  402fc4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  402fc8:	f020 0107 	bic.w	r1, r0, #7
  402fcc:	f06f 0c00 	mvn.w	ip, #0
  402fd0:	f010 0407 	ands.w	r4, r0, #7
  402fd4:	f891 f020 	pld	[r1, #32]
  402fd8:	f040 8049 	bne.w	40306e <strlen+0xae>
  402fdc:	f04f 0400 	mov.w	r4, #0
  402fe0:	f06f 0007 	mvn.w	r0, #7
  402fe4:	e9d1 2300 	ldrd	r2, r3, [r1]
  402fe8:	f891 f040 	pld	[r1, #64]	; 0x40
  402fec:	f100 0008 	add.w	r0, r0, #8
  402ff0:	fa82 f24c 	uadd8	r2, r2, ip
  402ff4:	faa4 f28c 	sel	r2, r4, ip
  402ff8:	fa83 f34c 	uadd8	r3, r3, ip
  402ffc:	faa2 f38c 	sel	r3, r2, ip
  403000:	bb4b      	cbnz	r3, 403056 <strlen+0x96>
  403002:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  403006:	fa82 f24c 	uadd8	r2, r2, ip
  40300a:	f100 0008 	add.w	r0, r0, #8
  40300e:	faa4 f28c 	sel	r2, r4, ip
  403012:	fa83 f34c 	uadd8	r3, r3, ip
  403016:	faa2 f38c 	sel	r3, r2, ip
  40301a:	b9e3      	cbnz	r3, 403056 <strlen+0x96>
  40301c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  403020:	fa82 f24c 	uadd8	r2, r2, ip
  403024:	f100 0008 	add.w	r0, r0, #8
  403028:	faa4 f28c 	sel	r2, r4, ip
  40302c:	fa83 f34c 	uadd8	r3, r3, ip
  403030:	faa2 f38c 	sel	r3, r2, ip
  403034:	b97b      	cbnz	r3, 403056 <strlen+0x96>
  403036:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40303a:	f101 0120 	add.w	r1, r1, #32
  40303e:	fa82 f24c 	uadd8	r2, r2, ip
  403042:	f100 0008 	add.w	r0, r0, #8
  403046:	faa4 f28c 	sel	r2, r4, ip
  40304a:	fa83 f34c 	uadd8	r3, r3, ip
  40304e:	faa2 f38c 	sel	r3, r2, ip
  403052:	2b00      	cmp	r3, #0
  403054:	d0c6      	beq.n	402fe4 <strlen+0x24>
  403056:	2a00      	cmp	r2, #0
  403058:	bf04      	itt	eq
  40305a:	3004      	addeq	r0, #4
  40305c:	461a      	moveq	r2, r3
  40305e:	ba12      	rev	r2, r2
  403060:	fab2 f282 	clz	r2, r2
  403064:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  403068:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40306c:	4770      	bx	lr
  40306e:	e9d1 2300 	ldrd	r2, r3, [r1]
  403072:	f004 0503 	and.w	r5, r4, #3
  403076:	f1c4 0000 	rsb	r0, r4, #0
  40307a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40307e:	f014 0f04 	tst.w	r4, #4
  403082:	f891 f040 	pld	[r1, #64]	; 0x40
  403086:	fa0c f505 	lsl.w	r5, ip, r5
  40308a:	ea62 0205 	orn	r2, r2, r5
  40308e:	bf1c      	itt	ne
  403090:	ea63 0305 	ornne	r3, r3, r5
  403094:	4662      	movne	r2, ip
  403096:	f04f 0400 	mov.w	r4, #0
  40309a:	e7a9      	b.n	402ff0 <strlen+0x30>

0040309c <__sprint_r.part.0>:
  40309c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4030a0:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  4030a2:	049c      	lsls	r4, r3, #18
  4030a4:	4693      	mov	fp, r2
  4030a6:	d52f      	bpl.n	403108 <__sprint_r.part.0+0x6c>
  4030a8:	6893      	ldr	r3, [r2, #8]
  4030aa:	6812      	ldr	r2, [r2, #0]
  4030ac:	b353      	cbz	r3, 403104 <__sprint_r.part.0+0x68>
  4030ae:	460e      	mov	r6, r1
  4030b0:	4607      	mov	r7, r0
  4030b2:	f102 0908 	add.w	r9, r2, #8
  4030b6:	e919 0420 	ldmdb	r9, {r5, sl}
  4030ba:	ea5f 089a 	movs.w	r8, sl, lsr #2
  4030be:	d017      	beq.n	4030f0 <__sprint_r.part.0+0x54>
  4030c0:	3d04      	subs	r5, #4
  4030c2:	2400      	movs	r4, #0
  4030c4:	e001      	b.n	4030ca <__sprint_r.part.0+0x2e>
  4030c6:	45a0      	cmp	r8, r4
  4030c8:	d010      	beq.n	4030ec <__sprint_r.part.0+0x50>
  4030ca:	4632      	mov	r2, r6
  4030cc:	f855 1f04 	ldr.w	r1, [r5, #4]!
  4030d0:	4638      	mov	r0, r7
  4030d2:	f001 f8bb 	bl	40424c <_fputwc_r>
  4030d6:	1c43      	adds	r3, r0, #1
  4030d8:	f104 0401 	add.w	r4, r4, #1
  4030dc:	d1f3      	bne.n	4030c6 <__sprint_r.part.0+0x2a>
  4030de:	2300      	movs	r3, #0
  4030e0:	f8cb 3008 	str.w	r3, [fp, #8]
  4030e4:	f8cb 3004 	str.w	r3, [fp, #4]
  4030e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4030ec:	f8db 3008 	ldr.w	r3, [fp, #8]
  4030f0:	f02a 0a03 	bic.w	sl, sl, #3
  4030f4:	eba3 030a 	sub.w	r3, r3, sl
  4030f8:	f8cb 3008 	str.w	r3, [fp, #8]
  4030fc:	f109 0908 	add.w	r9, r9, #8
  403100:	2b00      	cmp	r3, #0
  403102:	d1d8      	bne.n	4030b6 <__sprint_r.part.0+0x1a>
  403104:	2000      	movs	r0, #0
  403106:	e7ea      	b.n	4030de <__sprint_r.part.0+0x42>
  403108:	f001 fa0a 	bl	404520 <__sfvwrite_r>
  40310c:	2300      	movs	r3, #0
  40310e:	f8cb 3008 	str.w	r3, [fp, #8]
  403112:	f8cb 3004 	str.w	r3, [fp, #4]
  403116:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40311a:	bf00      	nop

0040311c <_vfiprintf_r>:
  40311c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403120:	b0ad      	sub	sp, #180	; 0xb4
  403122:	461d      	mov	r5, r3
  403124:	468b      	mov	fp, r1
  403126:	4690      	mov	r8, r2
  403128:	9307      	str	r3, [sp, #28]
  40312a:	9006      	str	r0, [sp, #24]
  40312c:	b118      	cbz	r0, 403136 <_vfiprintf_r+0x1a>
  40312e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403130:	2b00      	cmp	r3, #0
  403132:	f000 80f3 	beq.w	40331c <_vfiprintf_r+0x200>
  403136:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40313a:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  40313e:	07df      	lsls	r7, r3, #31
  403140:	b281      	uxth	r1, r0
  403142:	d402      	bmi.n	40314a <_vfiprintf_r+0x2e>
  403144:	058e      	lsls	r6, r1, #22
  403146:	f140 80fc 	bpl.w	403342 <_vfiprintf_r+0x226>
  40314a:	048c      	lsls	r4, r1, #18
  40314c:	d40a      	bmi.n	403164 <_vfiprintf_r+0x48>
  40314e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  403152:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  403156:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  40315a:	f8ab 100c 	strh.w	r1, [fp, #12]
  40315e:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  403162:	b289      	uxth	r1, r1
  403164:	0708      	lsls	r0, r1, #28
  403166:	f140 80b3 	bpl.w	4032d0 <_vfiprintf_r+0x1b4>
  40316a:	f8db 3010 	ldr.w	r3, [fp, #16]
  40316e:	2b00      	cmp	r3, #0
  403170:	f000 80ae 	beq.w	4032d0 <_vfiprintf_r+0x1b4>
  403174:	f001 031a 	and.w	r3, r1, #26
  403178:	2b0a      	cmp	r3, #10
  40317a:	f000 80b5 	beq.w	4032e8 <_vfiprintf_r+0x1cc>
  40317e:	2300      	movs	r3, #0
  403180:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  403184:	930b      	str	r3, [sp, #44]	; 0x2c
  403186:	9311      	str	r3, [sp, #68]	; 0x44
  403188:	9310      	str	r3, [sp, #64]	; 0x40
  40318a:	9303      	str	r3, [sp, #12]
  40318c:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  403190:	46ca      	mov	sl, r9
  403192:	f8cd b010 	str.w	fp, [sp, #16]
  403196:	f898 3000 	ldrb.w	r3, [r8]
  40319a:	4644      	mov	r4, r8
  40319c:	b1fb      	cbz	r3, 4031de <_vfiprintf_r+0xc2>
  40319e:	2b25      	cmp	r3, #37	; 0x25
  4031a0:	d102      	bne.n	4031a8 <_vfiprintf_r+0x8c>
  4031a2:	e01c      	b.n	4031de <_vfiprintf_r+0xc2>
  4031a4:	2b25      	cmp	r3, #37	; 0x25
  4031a6:	d003      	beq.n	4031b0 <_vfiprintf_r+0x94>
  4031a8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4031ac:	2b00      	cmp	r3, #0
  4031ae:	d1f9      	bne.n	4031a4 <_vfiprintf_r+0x88>
  4031b0:	eba4 0508 	sub.w	r5, r4, r8
  4031b4:	b19d      	cbz	r5, 4031de <_vfiprintf_r+0xc2>
  4031b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4031b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4031ba:	f8ca 8000 	str.w	r8, [sl]
  4031be:	3301      	adds	r3, #1
  4031c0:	442a      	add	r2, r5
  4031c2:	2b07      	cmp	r3, #7
  4031c4:	f8ca 5004 	str.w	r5, [sl, #4]
  4031c8:	9211      	str	r2, [sp, #68]	; 0x44
  4031ca:	9310      	str	r3, [sp, #64]	; 0x40
  4031cc:	dd7a      	ble.n	4032c4 <_vfiprintf_r+0x1a8>
  4031ce:	2a00      	cmp	r2, #0
  4031d0:	f040 84b0 	bne.w	403b34 <_vfiprintf_r+0xa18>
  4031d4:	9b03      	ldr	r3, [sp, #12]
  4031d6:	9210      	str	r2, [sp, #64]	; 0x40
  4031d8:	442b      	add	r3, r5
  4031da:	46ca      	mov	sl, r9
  4031dc:	9303      	str	r3, [sp, #12]
  4031de:	7823      	ldrb	r3, [r4, #0]
  4031e0:	2b00      	cmp	r3, #0
  4031e2:	f000 83e0 	beq.w	4039a6 <_vfiprintf_r+0x88a>
  4031e6:	2000      	movs	r0, #0
  4031e8:	f04f 0300 	mov.w	r3, #0
  4031ec:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  4031f0:	f104 0801 	add.w	r8, r4, #1
  4031f4:	7862      	ldrb	r2, [r4, #1]
  4031f6:	4605      	mov	r5, r0
  4031f8:	4606      	mov	r6, r0
  4031fa:	4603      	mov	r3, r0
  4031fc:	f04f 34ff 	mov.w	r4, #4294967295
  403200:	f108 0801 	add.w	r8, r8, #1
  403204:	f1a2 0120 	sub.w	r1, r2, #32
  403208:	2958      	cmp	r1, #88	; 0x58
  40320a:	f200 82de 	bhi.w	4037ca <_vfiprintf_r+0x6ae>
  40320e:	e8df f011 	tbh	[pc, r1, lsl #1]
  403212:	0221      	.short	0x0221
  403214:	02dc02dc 	.word	0x02dc02dc
  403218:	02dc0229 	.word	0x02dc0229
  40321c:	02dc02dc 	.word	0x02dc02dc
  403220:	02dc02dc 	.word	0x02dc02dc
  403224:	028902dc 	.word	0x028902dc
  403228:	02dc0295 	.word	0x02dc0295
  40322c:	02bd00a2 	.word	0x02bd00a2
  403230:	019f02dc 	.word	0x019f02dc
  403234:	01a401a4 	.word	0x01a401a4
  403238:	01a401a4 	.word	0x01a401a4
  40323c:	01a401a4 	.word	0x01a401a4
  403240:	01a401a4 	.word	0x01a401a4
  403244:	02dc01a4 	.word	0x02dc01a4
  403248:	02dc02dc 	.word	0x02dc02dc
  40324c:	02dc02dc 	.word	0x02dc02dc
  403250:	02dc02dc 	.word	0x02dc02dc
  403254:	02dc02dc 	.word	0x02dc02dc
  403258:	01b202dc 	.word	0x01b202dc
  40325c:	02dc02dc 	.word	0x02dc02dc
  403260:	02dc02dc 	.word	0x02dc02dc
  403264:	02dc02dc 	.word	0x02dc02dc
  403268:	02dc02dc 	.word	0x02dc02dc
  40326c:	02dc02dc 	.word	0x02dc02dc
  403270:	02dc0197 	.word	0x02dc0197
  403274:	02dc02dc 	.word	0x02dc02dc
  403278:	02dc02dc 	.word	0x02dc02dc
  40327c:	02dc019b 	.word	0x02dc019b
  403280:	025302dc 	.word	0x025302dc
  403284:	02dc02dc 	.word	0x02dc02dc
  403288:	02dc02dc 	.word	0x02dc02dc
  40328c:	02dc02dc 	.word	0x02dc02dc
  403290:	02dc02dc 	.word	0x02dc02dc
  403294:	02dc02dc 	.word	0x02dc02dc
  403298:	021b025a 	.word	0x021b025a
  40329c:	02dc02dc 	.word	0x02dc02dc
  4032a0:	026e02dc 	.word	0x026e02dc
  4032a4:	02dc021b 	.word	0x02dc021b
  4032a8:	027302dc 	.word	0x027302dc
  4032ac:	01f502dc 	.word	0x01f502dc
  4032b0:	02090182 	.word	0x02090182
  4032b4:	02dc02d7 	.word	0x02dc02d7
  4032b8:	02dc029a 	.word	0x02dc029a
  4032bc:	02dc00a7 	.word	0x02dc00a7
  4032c0:	022e02dc 	.word	0x022e02dc
  4032c4:	f10a 0a08 	add.w	sl, sl, #8
  4032c8:	9b03      	ldr	r3, [sp, #12]
  4032ca:	442b      	add	r3, r5
  4032cc:	9303      	str	r3, [sp, #12]
  4032ce:	e786      	b.n	4031de <_vfiprintf_r+0xc2>
  4032d0:	4659      	mov	r1, fp
  4032d2:	9806      	ldr	r0, [sp, #24]
  4032d4:	f000 fdac 	bl	403e30 <__swsetup_r>
  4032d8:	bb18      	cbnz	r0, 403322 <_vfiprintf_r+0x206>
  4032da:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  4032de:	f001 031a 	and.w	r3, r1, #26
  4032e2:	2b0a      	cmp	r3, #10
  4032e4:	f47f af4b 	bne.w	40317e <_vfiprintf_r+0x62>
  4032e8:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  4032ec:	2b00      	cmp	r3, #0
  4032ee:	f6ff af46 	blt.w	40317e <_vfiprintf_r+0x62>
  4032f2:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4032f6:	07db      	lsls	r3, r3, #31
  4032f8:	d405      	bmi.n	403306 <_vfiprintf_r+0x1ea>
  4032fa:	058f      	lsls	r7, r1, #22
  4032fc:	d403      	bmi.n	403306 <_vfiprintf_r+0x1ea>
  4032fe:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  403302:	f001 fac3 	bl	40488c <__retarget_lock_release_recursive>
  403306:	462b      	mov	r3, r5
  403308:	4642      	mov	r2, r8
  40330a:	4659      	mov	r1, fp
  40330c:	9806      	ldr	r0, [sp, #24]
  40330e:	f000 fd4d 	bl	403dac <__sbprintf>
  403312:	9003      	str	r0, [sp, #12]
  403314:	9803      	ldr	r0, [sp, #12]
  403316:	b02d      	add	sp, #180	; 0xb4
  403318:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40331c:	f000 fef4 	bl	404108 <__sinit>
  403320:	e709      	b.n	403136 <_vfiprintf_r+0x1a>
  403322:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  403326:	07d9      	lsls	r1, r3, #31
  403328:	d404      	bmi.n	403334 <_vfiprintf_r+0x218>
  40332a:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  40332e:	059a      	lsls	r2, r3, #22
  403330:	f140 84aa 	bpl.w	403c88 <_vfiprintf_r+0xb6c>
  403334:	f04f 33ff 	mov.w	r3, #4294967295
  403338:	9303      	str	r3, [sp, #12]
  40333a:	9803      	ldr	r0, [sp, #12]
  40333c:	b02d      	add	sp, #180	; 0xb4
  40333e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403342:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  403346:	f001 fa9f 	bl	404888 <__retarget_lock_acquire_recursive>
  40334a:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  40334e:	b281      	uxth	r1, r0
  403350:	e6fb      	b.n	40314a <_vfiprintf_r+0x2e>
  403352:	4276      	negs	r6, r6
  403354:	9207      	str	r2, [sp, #28]
  403356:	f043 0304 	orr.w	r3, r3, #4
  40335a:	f898 2000 	ldrb.w	r2, [r8]
  40335e:	e74f      	b.n	403200 <_vfiprintf_r+0xe4>
  403360:	9608      	str	r6, [sp, #32]
  403362:	069e      	lsls	r6, r3, #26
  403364:	f100 8450 	bmi.w	403c08 <_vfiprintf_r+0xaec>
  403368:	9907      	ldr	r1, [sp, #28]
  40336a:	06dd      	lsls	r5, r3, #27
  40336c:	460a      	mov	r2, r1
  40336e:	f100 83ef 	bmi.w	403b50 <_vfiprintf_r+0xa34>
  403372:	0658      	lsls	r0, r3, #25
  403374:	f140 83ec 	bpl.w	403b50 <_vfiprintf_r+0xa34>
  403378:	880e      	ldrh	r6, [r1, #0]
  40337a:	3104      	adds	r1, #4
  40337c:	2700      	movs	r7, #0
  40337e:	2201      	movs	r2, #1
  403380:	9107      	str	r1, [sp, #28]
  403382:	f04f 0100 	mov.w	r1, #0
  403386:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  40338a:	2500      	movs	r5, #0
  40338c:	1c61      	adds	r1, r4, #1
  40338e:	f000 8116 	beq.w	4035be <_vfiprintf_r+0x4a2>
  403392:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  403396:	9102      	str	r1, [sp, #8]
  403398:	ea56 0107 	orrs.w	r1, r6, r7
  40339c:	f040 8114 	bne.w	4035c8 <_vfiprintf_r+0x4ac>
  4033a0:	2c00      	cmp	r4, #0
  4033a2:	f040 835c 	bne.w	403a5e <_vfiprintf_r+0x942>
  4033a6:	2a00      	cmp	r2, #0
  4033a8:	f040 83b7 	bne.w	403b1a <_vfiprintf_r+0x9fe>
  4033ac:	f013 0301 	ands.w	r3, r3, #1
  4033b0:	9305      	str	r3, [sp, #20]
  4033b2:	f000 8457 	beq.w	403c64 <_vfiprintf_r+0xb48>
  4033b6:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  4033ba:	2330      	movs	r3, #48	; 0x30
  4033bc:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  4033c0:	9b05      	ldr	r3, [sp, #20]
  4033c2:	42a3      	cmp	r3, r4
  4033c4:	bfb8      	it	lt
  4033c6:	4623      	movlt	r3, r4
  4033c8:	9301      	str	r3, [sp, #4]
  4033ca:	b10d      	cbz	r5, 4033d0 <_vfiprintf_r+0x2b4>
  4033cc:	3301      	adds	r3, #1
  4033ce:	9301      	str	r3, [sp, #4]
  4033d0:	9b02      	ldr	r3, [sp, #8]
  4033d2:	f013 0302 	ands.w	r3, r3, #2
  4033d6:	9309      	str	r3, [sp, #36]	; 0x24
  4033d8:	d002      	beq.n	4033e0 <_vfiprintf_r+0x2c4>
  4033da:	9b01      	ldr	r3, [sp, #4]
  4033dc:	3302      	adds	r3, #2
  4033de:	9301      	str	r3, [sp, #4]
  4033e0:	9b02      	ldr	r3, [sp, #8]
  4033e2:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  4033e6:	930a      	str	r3, [sp, #40]	; 0x28
  4033e8:	f040 8217 	bne.w	40381a <_vfiprintf_r+0x6fe>
  4033ec:	9b08      	ldr	r3, [sp, #32]
  4033ee:	9a01      	ldr	r2, [sp, #4]
  4033f0:	1a9d      	subs	r5, r3, r2
  4033f2:	2d00      	cmp	r5, #0
  4033f4:	f340 8211 	ble.w	40381a <_vfiprintf_r+0x6fe>
  4033f8:	2d10      	cmp	r5, #16
  4033fa:	f340 8490 	ble.w	403d1e <_vfiprintf_r+0xc02>
  4033fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403400:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403402:	4ec4      	ldr	r6, [pc, #784]	; (403714 <_vfiprintf_r+0x5f8>)
  403404:	46d6      	mov	lr, sl
  403406:	2710      	movs	r7, #16
  403408:	46a2      	mov	sl, r4
  40340a:	4619      	mov	r1, r3
  40340c:	9c06      	ldr	r4, [sp, #24]
  40340e:	e007      	b.n	403420 <_vfiprintf_r+0x304>
  403410:	f101 0c02 	add.w	ip, r1, #2
  403414:	f10e 0e08 	add.w	lr, lr, #8
  403418:	4601      	mov	r1, r0
  40341a:	3d10      	subs	r5, #16
  40341c:	2d10      	cmp	r5, #16
  40341e:	dd11      	ble.n	403444 <_vfiprintf_r+0x328>
  403420:	1c48      	adds	r0, r1, #1
  403422:	3210      	adds	r2, #16
  403424:	2807      	cmp	r0, #7
  403426:	9211      	str	r2, [sp, #68]	; 0x44
  403428:	e88e 00c0 	stmia.w	lr, {r6, r7}
  40342c:	9010      	str	r0, [sp, #64]	; 0x40
  40342e:	ddef      	ble.n	403410 <_vfiprintf_r+0x2f4>
  403430:	2a00      	cmp	r2, #0
  403432:	f040 81e4 	bne.w	4037fe <_vfiprintf_r+0x6e2>
  403436:	3d10      	subs	r5, #16
  403438:	2d10      	cmp	r5, #16
  40343a:	4611      	mov	r1, r2
  40343c:	f04f 0c01 	mov.w	ip, #1
  403440:	46ce      	mov	lr, r9
  403442:	dced      	bgt.n	403420 <_vfiprintf_r+0x304>
  403444:	4654      	mov	r4, sl
  403446:	4661      	mov	r1, ip
  403448:	46f2      	mov	sl, lr
  40344a:	442a      	add	r2, r5
  40344c:	2907      	cmp	r1, #7
  40344e:	9211      	str	r2, [sp, #68]	; 0x44
  403450:	f8ca 6000 	str.w	r6, [sl]
  403454:	f8ca 5004 	str.w	r5, [sl, #4]
  403458:	9110      	str	r1, [sp, #64]	; 0x40
  40345a:	f300 82ec 	bgt.w	403a36 <_vfiprintf_r+0x91a>
  40345e:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  403462:	f10a 0a08 	add.w	sl, sl, #8
  403466:	1c48      	adds	r0, r1, #1
  403468:	2d00      	cmp	r5, #0
  40346a:	f040 81de 	bne.w	40382a <_vfiprintf_r+0x70e>
  40346e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403470:	2b00      	cmp	r3, #0
  403472:	f000 81f8 	beq.w	403866 <_vfiprintf_r+0x74a>
  403476:	3202      	adds	r2, #2
  403478:	a90e      	add	r1, sp, #56	; 0x38
  40347a:	2302      	movs	r3, #2
  40347c:	2807      	cmp	r0, #7
  40347e:	9211      	str	r2, [sp, #68]	; 0x44
  403480:	9010      	str	r0, [sp, #64]	; 0x40
  403482:	e88a 000a 	stmia.w	sl, {r1, r3}
  403486:	f340 81ea 	ble.w	40385e <_vfiprintf_r+0x742>
  40348a:	2a00      	cmp	r2, #0
  40348c:	f040 838c 	bne.w	403ba8 <_vfiprintf_r+0xa8c>
  403490:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403492:	2b80      	cmp	r3, #128	; 0x80
  403494:	f04f 0001 	mov.w	r0, #1
  403498:	4611      	mov	r1, r2
  40349a:	46ca      	mov	sl, r9
  40349c:	f040 81e7 	bne.w	40386e <_vfiprintf_r+0x752>
  4034a0:	9b08      	ldr	r3, [sp, #32]
  4034a2:	9d01      	ldr	r5, [sp, #4]
  4034a4:	1b5e      	subs	r6, r3, r5
  4034a6:	2e00      	cmp	r6, #0
  4034a8:	f340 81e1 	ble.w	40386e <_vfiprintf_r+0x752>
  4034ac:	2e10      	cmp	r6, #16
  4034ae:	4d9a      	ldr	r5, [pc, #616]	; (403718 <_vfiprintf_r+0x5fc>)
  4034b0:	f340 8450 	ble.w	403d54 <_vfiprintf_r+0xc38>
  4034b4:	46d4      	mov	ip, sl
  4034b6:	2710      	movs	r7, #16
  4034b8:	46a2      	mov	sl, r4
  4034ba:	9c06      	ldr	r4, [sp, #24]
  4034bc:	e007      	b.n	4034ce <_vfiprintf_r+0x3b2>
  4034be:	f101 0e02 	add.w	lr, r1, #2
  4034c2:	f10c 0c08 	add.w	ip, ip, #8
  4034c6:	4601      	mov	r1, r0
  4034c8:	3e10      	subs	r6, #16
  4034ca:	2e10      	cmp	r6, #16
  4034cc:	dd11      	ble.n	4034f2 <_vfiprintf_r+0x3d6>
  4034ce:	1c48      	adds	r0, r1, #1
  4034d0:	3210      	adds	r2, #16
  4034d2:	2807      	cmp	r0, #7
  4034d4:	9211      	str	r2, [sp, #68]	; 0x44
  4034d6:	e88c 00a0 	stmia.w	ip, {r5, r7}
  4034da:	9010      	str	r0, [sp, #64]	; 0x40
  4034dc:	ddef      	ble.n	4034be <_vfiprintf_r+0x3a2>
  4034de:	2a00      	cmp	r2, #0
  4034e0:	f040 829d 	bne.w	403a1e <_vfiprintf_r+0x902>
  4034e4:	3e10      	subs	r6, #16
  4034e6:	2e10      	cmp	r6, #16
  4034e8:	f04f 0e01 	mov.w	lr, #1
  4034ec:	4611      	mov	r1, r2
  4034ee:	46cc      	mov	ip, r9
  4034f0:	dced      	bgt.n	4034ce <_vfiprintf_r+0x3b2>
  4034f2:	4654      	mov	r4, sl
  4034f4:	46e2      	mov	sl, ip
  4034f6:	4432      	add	r2, r6
  4034f8:	f1be 0f07 	cmp.w	lr, #7
  4034fc:	9211      	str	r2, [sp, #68]	; 0x44
  4034fe:	e88a 0060 	stmia.w	sl, {r5, r6}
  403502:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  403506:	f300 8369 	bgt.w	403bdc <_vfiprintf_r+0xac0>
  40350a:	f10a 0a08 	add.w	sl, sl, #8
  40350e:	f10e 0001 	add.w	r0, lr, #1
  403512:	4671      	mov	r1, lr
  403514:	e1ab      	b.n	40386e <_vfiprintf_r+0x752>
  403516:	9608      	str	r6, [sp, #32]
  403518:	f013 0220 	ands.w	r2, r3, #32
  40351c:	f040 838c 	bne.w	403c38 <_vfiprintf_r+0xb1c>
  403520:	f013 0110 	ands.w	r1, r3, #16
  403524:	f040 831a 	bne.w	403b5c <_vfiprintf_r+0xa40>
  403528:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  40352c:	f000 8316 	beq.w	403b5c <_vfiprintf_r+0xa40>
  403530:	9807      	ldr	r0, [sp, #28]
  403532:	460a      	mov	r2, r1
  403534:	4601      	mov	r1, r0
  403536:	3104      	adds	r1, #4
  403538:	8806      	ldrh	r6, [r0, #0]
  40353a:	9107      	str	r1, [sp, #28]
  40353c:	2700      	movs	r7, #0
  40353e:	e720      	b.n	403382 <_vfiprintf_r+0x266>
  403540:	9608      	str	r6, [sp, #32]
  403542:	f043 0310 	orr.w	r3, r3, #16
  403546:	e7e7      	b.n	403518 <_vfiprintf_r+0x3fc>
  403548:	9608      	str	r6, [sp, #32]
  40354a:	f043 0310 	orr.w	r3, r3, #16
  40354e:	e708      	b.n	403362 <_vfiprintf_r+0x246>
  403550:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  403554:	f898 2000 	ldrb.w	r2, [r8]
  403558:	e652      	b.n	403200 <_vfiprintf_r+0xe4>
  40355a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40355e:	2600      	movs	r6, #0
  403560:	f818 2b01 	ldrb.w	r2, [r8], #1
  403564:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  403568:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  40356c:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  403570:	2909      	cmp	r1, #9
  403572:	d9f5      	bls.n	403560 <_vfiprintf_r+0x444>
  403574:	e646      	b.n	403204 <_vfiprintf_r+0xe8>
  403576:	9608      	str	r6, [sp, #32]
  403578:	2800      	cmp	r0, #0
  40357a:	f040 8408 	bne.w	403d8e <_vfiprintf_r+0xc72>
  40357e:	f043 0310 	orr.w	r3, r3, #16
  403582:	069e      	lsls	r6, r3, #26
  403584:	f100 834c 	bmi.w	403c20 <_vfiprintf_r+0xb04>
  403588:	06dd      	lsls	r5, r3, #27
  40358a:	f100 82f3 	bmi.w	403b74 <_vfiprintf_r+0xa58>
  40358e:	0658      	lsls	r0, r3, #25
  403590:	f140 82f0 	bpl.w	403b74 <_vfiprintf_r+0xa58>
  403594:	9d07      	ldr	r5, [sp, #28]
  403596:	f9b5 6000 	ldrsh.w	r6, [r5]
  40359a:	462a      	mov	r2, r5
  40359c:	17f7      	asrs	r7, r6, #31
  40359e:	3204      	adds	r2, #4
  4035a0:	4630      	mov	r0, r6
  4035a2:	4639      	mov	r1, r7
  4035a4:	9207      	str	r2, [sp, #28]
  4035a6:	2800      	cmp	r0, #0
  4035a8:	f171 0200 	sbcs.w	r2, r1, #0
  4035ac:	f2c0 835d 	blt.w	403c6a <_vfiprintf_r+0xb4e>
  4035b0:	1c61      	adds	r1, r4, #1
  4035b2:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4035b6:	f04f 0201 	mov.w	r2, #1
  4035ba:	f47f aeea 	bne.w	403392 <_vfiprintf_r+0x276>
  4035be:	ea56 0107 	orrs.w	r1, r6, r7
  4035c2:	f000 824d 	beq.w	403a60 <_vfiprintf_r+0x944>
  4035c6:	9302      	str	r3, [sp, #8]
  4035c8:	2a01      	cmp	r2, #1
  4035ca:	f000 828c 	beq.w	403ae6 <_vfiprintf_r+0x9ca>
  4035ce:	2a02      	cmp	r2, #2
  4035d0:	f040 825c 	bne.w	403a8c <_vfiprintf_r+0x970>
  4035d4:	980b      	ldr	r0, [sp, #44]	; 0x2c
  4035d6:	46cb      	mov	fp, r9
  4035d8:	0933      	lsrs	r3, r6, #4
  4035da:	f006 010f 	and.w	r1, r6, #15
  4035de:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  4035e2:	093a      	lsrs	r2, r7, #4
  4035e4:	461e      	mov	r6, r3
  4035e6:	4617      	mov	r7, r2
  4035e8:	5c43      	ldrb	r3, [r0, r1]
  4035ea:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  4035ee:	ea56 0307 	orrs.w	r3, r6, r7
  4035f2:	d1f1      	bne.n	4035d8 <_vfiprintf_r+0x4bc>
  4035f4:	eba9 030b 	sub.w	r3, r9, fp
  4035f8:	9305      	str	r3, [sp, #20]
  4035fa:	e6e1      	b.n	4033c0 <_vfiprintf_r+0x2a4>
  4035fc:	2800      	cmp	r0, #0
  4035fe:	f040 83c0 	bne.w	403d82 <_vfiprintf_r+0xc66>
  403602:	0699      	lsls	r1, r3, #26
  403604:	f100 8367 	bmi.w	403cd6 <_vfiprintf_r+0xbba>
  403608:	06da      	lsls	r2, r3, #27
  40360a:	f100 80f1 	bmi.w	4037f0 <_vfiprintf_r+0x6d4>
  40360e:	065b      	lsls	r3, r3, #25
  403610:	f140 80ee 	bpl.w	4037f0 <_vfiprintf_r+0x6d4>
  403614:	9a07      	ldr	r2, [sp, #28]
  403616:	6813      	ldr	r3, [r2, #0]
  403618:	3204      	adds	r2, #4
  40361a:	9207      	str	r2, [sp, #28]
  40361c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  403620:	801a      	strh	r2, [r3, #0]
  403622:	e5b8      	b.n	403196 <_vfiprintf_r+0x7a>
  403624:	9807      	ldr	r0, [sp, #28]
  403626:	4a3d      	ldr	r2, [pc, #244]	; (40371c <_vfiprintf_r+0x600>)
  403628:	9608      	str	r6, [sp, #32]
  40362a:	920b      	str	r2, [sp, #44]	; 0x2c
  40362c:	6806      	ldr	r6, [r0, #0]
  40362e:	2278      	movs	r2, #120	; 0x78
  403630:	2130      	movs	r1, #48	; 0x30
  403632:	3004      	adds	r0, #4
  403634:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  403638:	f043 0302 	orr.w	r3, r3, #2
  40363c:	9007      	str	r0, [sp, #28]
  40363e:	2700      	movs	r7, #0
  403640:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  403644:	2202      	movs	r2, #2
  403646:	e69c      	b.n	403382 <_vfiprintf_r+0x266>
  403648:	9608      	str	r6, [sp, #32]
  40364a:	2800      	cmp	r0, #0
  40364c:	d099      	beq.n	403582 <_vfiprintf_r+0x466>
  40364e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  403652:	e796      	b.n	403582 <_vfiprintf_r+0x466>
  403654:	f898 2000 	ldrb.w	r2, [r8]
  403658:	2d00      	cmp	r5, #0
  40365a:	f47f add1 	bne.w	403200 <_vfiprintf_r+0xe4>
  40365e:	2001      	movs	r0, #1
  403660:	2520      	movs	r5, #32
  403662:	e5cd      	b.n	403200 <_vfiprintf_r+0xe4>
  403664:	f043 0301 	orr.w	r3, r3, #1
  403668:	f898 2000 	ldrb.w	r2, [r8]
  40366c:	e5c8      	b.n	403200 <_vfiprintf_r+0xe4>
  40366e:	9608      	str	r6, [sp, #32]
  403670:	2800      	cmp	r0, #0
  403672:	f040 8393 	bne.w	403d9c <_vfiprintf_r+0xc80>
  403676:	4929      	ldr	r1, [pc, #164]	; (40371c <_vfiprintf_r+0x600>)
  403678:	910b      	str	r1, [sp, #44]	; 0x2c
  40367a:	069f      	lsls	r7, r3, #26
  40367c:	f100 82e8 	bmi.w	403c50 <_vfiprintf_r+0xb34>
  403680:	9807      	ldr	r0, [sp, #28]
  403682:	06de      	lsls	r6, r3, #27
  403684:	4601      	mov	r1, r0
  403686:	f100 8270 	bmi.w	403b6a <_vfiprintf_r+0xa4e>
  40368a:	065d      	lsls	r5, r3, #25
  40368c:	f140 826d 	bpl.w	403b6a <_vfiprintf_r+0xa4e>
  403690:	3104      	adds	r1, #4
  403692:	8806      	ldrh	r6, [r0, #0]
  403694:	9107      	str	r1, [sp, #28]
  403696:	2700      	movs	r7, #0
  403698:	07d8      	lsls	r0, r3, #31
  40369a:	f140 8222 	bpl.w	403ae2 <_vfiprintf_r+0x9c6>
  40369e:	ea56 0107 	orrs.w	r1, r6, r7
  4036a2:	f000 821e 	beq.w	403ae2 <_vfiprintf_r+0x9c6>
  4036a6:	2130      	movs	r1, #48	; 0x30
  4036a8:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  4036ac:	f043 0302 	orr.w	r3, r3, #2
  4036b0:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  4036b4:	2202      	movs	r2, #2
  4036b6:	e664      	b.n	403382 <_vfiprintf_r+0x266>
  4036b8:	9608      	str	r6, [sp, #32]
  4036ba:	2800      	cmp	r0, #0
  4036bc:	f040 836b 	bne.w	403d96 <_vfiprintf_r+0xc7a>
  4036c0:	4917      	ldr	r1, [pc, #92]	; (403720 <_vfiprintf_r+0x604>)
  4036c2:	910b      	str	r1, [sp, #44]	; 0x2c
  4036c4:	e7d9      	b.n	40367a <_vfiprintf_r+0x55e>
  4036c6:	9907      	ldr	r1, [sp, #28]
  4036c8:	9608      	str	r6, [sp, #32]
  4036ca:	680a      	ldr	r2, [r1, #0]
  4036cc:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  4036d0:	f04f 0000 	mov.w	r0, #0
  4036d4:	460a      	mov	r2, r1
  4036d6:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  4036da:	3204      	adds	r2, #4
  4036dc:	2001      	movs	r0, #1
  4036de:	9001      	str	r0, [sp, #4]
  4036e0:	9207      	str	r2, [sp, #28]
  4036e2:	9005      	str	r0, [sp, #20]
  4036e4:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  4036e8:	9302      	str	r3, [sp, #8]
  4036ea:	2400      	movs	r4, #0
  4036ec:	e670      	b.n	4033d0 <_vfiprintf_r+0x2b4>
  4036ee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4036f2:	f898 2000 	ldrb.w	r2, [r8]
  4036f6:	e583      	b.n	403200 <_vfiprintf_r+0xe4>
  4036f8:	f898 2000 	ldrb.w	r2, [r8]
  4036fc:	2a6c      	cmp	r2, #108	; 0x6c
  4036fe:	bf03      	ittte	eq
  403700:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  403704:	f043 0320 	orreq.w	r3, r3, #32
  403708:	f108 0801 	addeq.w	r8, r8, #1
  40370c:	f043 0310 	orrne.w	r3, r3, #16
  403710:	e576      	b.n	403200 <_vfiprintf_r+0xe4>
  403712:	bf00      	nop
  403714:	00405b98 	.word	0x00405b98
  403718:	00405ba8 	.word	0x00405ba8
  40371c:	00405b7c 	.word	0x00405b7c
  403720:	00405b68 	.word	0x00405b68
  403724:	9907      	ldr	r1, [sp, #28]
  403726:	680e      	ldr	r6, [r1, #0]
  403728:	460a      	mov	r2, r1
  40372a:	2e00      	cmp	r6, #0
  40372c:	f102 0204 	add.w	r2, r2, #4
  403730:	f6ff ae0f 	blt.w	403352 <_vfiprintf_r+0x236>
  403734:	9207      	str	r2, [sp, #28]
  403736:	f898 2000 	ldrb.w	r2, [r8]
  40373a:	e561      	b.n	403200 <_vfiprintf_r+0xe4>
  40373c:	f898 2000 	ldrb.w	r2, [r8]
  403740:	2001      	movs	r0, #1
  403742:	252b      	movs	r5, #43	; 0x2b
  403744:	e55c      	b.n	403200 <_vfiprintf_r+0xe4>
  403746:	9907      	ldr	r1, [sp, #28]
  403748:	9608      	str	r6, [sp, #32]
  40374a:	f8d1 b000 	ldr.w	fp, [r1]
  40374e:	f04f 0200 	mov.w	r2, #0
  403752:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  403756:	1d0e      	adds	r6, r1, #4
  403758:	f1bb 0f00 	cmp.w	fp, #0
  40375c:	f000 82e5 	beq.w	403d2a <_vfiprintf_r+0xc0e>
  403760:	1c67      	adds	r7, r4, #1
  403762:	f000 82c4 	beq.w	403cee <_vfiprintf_r+0xbd2>
  403766:	4622      	mov	r2, r4
  403768:	2100      	movs	r1, #0
  40376a:	4658      	mov	r0, fp
  40376c:	9301      	str	r3, [sp, #4]
  40376e:	f001 fbd7 	bl	404f20 <memchr>
  403772:	9b01      	ldr	r3, [sp, #4]
  403774:	2800      	cmp	r0, #0
  403776:	f000 82e5 	beq.w	403d44 <_vfiprintf_r+0xc28>
  40377a:	eba0 020b 	sub.w	r2, r0, fp
  40377e:	9205      	str	r2, [sp, #20]
  403780:	9607      	str	r6, [sp, #28]
  403782:	9302      	str	r3, [sp, #8]
  403784:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  403788:	2400      	movs	r4, #0
  40378a:	e619      	b.n	4033c0 <_vfiprintf_r+0x2a4>
  40378c:	f898 2000 	ldrb.w	r2, [r8]
  403790:	2a2a      	cmp	r2, #42	; 0x2a
  403792:	f108 0701 	add.w	r7, r8, #1
  403796:	f000 82e9 	beq.w	403d6c <_vfiprintf_r+0xc50>
  40379a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40379e:	2909      	cmp	r1, #9
  4037a0:	46b8      	mov	r8, r7
  4037a2:	f04f 0400 	mov.w	r4, #0
  4037a6:	f63f ad2d 	bhi.w	403204 <_vfiprintf_r+0xe8>
  4037aa:	f818 2b01 	ldrb.w	r2, [r8], #1
  4037ae:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4037b2:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  4037b6:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4037ba:	2909      	cmp	r1, #9
  4037bc:	d9f5      	bls.n	4037aa <_vfiprintf_r+0x68e>
  4037be:	e521      	b.n	403204 <_vfiprintf_r+0xe8>
  4037c0:	f043 0320 	orr.w	r3, r3, #32
  4037c4:	f898 2000 	ldrb.w	r2, [r8]
  4037c8:	e51a      	b.n	403200 <_vfiprintf_r+0xe4>
  4037ca:	9608      	str	r6, [sp, #32]
  4037cc:	2800      	cmp	r0, #0
  4037ce:	f040 82db 	bne.w	403d88 <_vfiprintf_r+0xc6c>
  4037d2:	2a00      	cmp	r2, #0
  4037d4:	f000 80e7 	beq.w	4039a6 <_vfiprintf_r+0x88a>
  4037d8:	2101      	movs	r1, #1
  4037da:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  4037de:	f04f 0200 	mov.w	r2, #0
  4037e2:	9101      	str	r1, [sp, #4]
  4037e4:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  4037e8:	9105      	str	r1, [sp, #20]
  4037ea:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  4037ee:	e77b      	b.n	4036e8 <_vfiprintf_r+0x5cc>
  4037f0:	9a07      	ldr	r2, [sp, #28]
  4037f2:	6813      	ldr	r3, [r2, #0]
  4037f4:	3204      	adds	r2, #4
  4037f6:	9207      	str	r2, [sp, #28]
  4037f8:	9a03      	ldr	r2, [sp, #12]
  4037fa:	601a      	str	r2, [r3, #0]
  4037fc:	e4cb      	b.n	403196 <_vfiprintf_r+0x7a>
  4037fe:	aa0f      	add	r2, sp, #60	; 0x3c
  403800:	9904      	ldr	r1, [sp, #16]
  403802:	4620      	mov	r0, r4
  403804:	f7ff fc4a 	bl	40309c <__sprint_r.part.0>
  403808:	2800      	cmp	r0, #0
  40380a:	f040 8139 	bne.w	403a80 <_vfiprintf_r+0x964>
  40380e:	9910      	ldr	r1, [sp, #64]	; 0x40
  403810:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403812:	f101 0c01 	add.w	ip, r1, #1
  403816:	46ce      	mov	lr, r9
  403818:	e5ff      	b.n	40341a <_vfiprintf_r+0x2fe>
  40381a:	9910      	ldr	r1, [sp, #64]	; 0x40
  40381c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40381e:	1c48      	adds	r0, r1, #1
  403820:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  403824:	2d00      	cmp	r5, #0
  403826:	f43f ae22 	beq.w	40346e <_vfiprintf_r+0x352>
  40382a:	3201      	adds	r2, #1
  40382c:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  403830:	2101      	movs	r1, #1
  403832:	2807      	cmp	r0, #7
  403834:	9211      	str	r2, [sp, #68]	; 0x44
  403836:	9010      	str	r0, [sp, #64]	; 0x40
  403838:	f8ca 5000 	str.w	r5, [sl]
  40383c:	f8ca 1004 	str.w	r1, [sl, #4]
  403840:	f340 8108 	ble.w	403a54 <_vfiprintf_r+0x938>
  403844:	2a00      	cmp	r2, #0
  403846:	f040 81bc 	bne.w	403bc2 <_vfiprintf_r+0xaa6>
  40384a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40384c:	2b00      	cmp	r3, #0
  40384e:	f43f ae1f 	beq.w	403490 <_vfiprintf_r+0x374>
  403852:	ab0e      	add	r3, sp, #56	; 0x38
  403854:	2202      	movs	r2, #2
  403856:	4608      	mov	r0, r1
  403858:	931c      	str	r3, [sp, #112]	; 0x70
  40385a:	921d      	str	r2, [sp, #116]	; 0x74
  40385c:	46ca      	mov	sl, r9
  40385e:	4601      	mov	r1, r0
  403860:	f10a 0a08 	add.w	sl, sl, #8
  403864:	3001      	adds	r0, #1
  403866:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403868:	2b80      	cmp	r3, #128	; 0x80
  40386a:	f43f ae19 	beq.w	4034a0 <_vfiprintf_r+0x384>
  40386e:	9b05      	ldr	r3, [sp, #20]
  403870:	1ae4      	subs	r4, r4, r3
  403872:	2c00      	cmp	r4, #0
  403874:	dd2e      	ble.n	4038d4 <_vfiprintf_r+0x7b8>
  403876:	2c10      	cmp	r4, #16
  403878:	4db3      	ldr	r5, [pc, #716]	; (403b48 <_vfiprintf_r+0xa2c>)
  40387a:	dd1e      	ble.n	4038ba <_vfiprintf_r+0x79e>
  40387c:	46d6      	mov	lr, sl
  40387e:	2610      	movs	r6, #16
  403880:	9f06      	ldr	r7, [sp, #24]
  403882:	f8dd a010 	ldr.w	sl, [sp, #16]
  403886:	e006      	b.n	403896 <_vfiprintf_r+0x77a>
  403888:	1c88      	adds	r0, r1, #2
  40388a:	f10e 0e08 	add.w	lr, lr, #8
  40388e:	4619      	mov	r1, r3
  403890:	3c10      	subs	r4, #16
  403892:	2c10      	cmp	r4, #16
  403894:	dd10      	ble.n	4038b8 <_vfiprintf_r+0x79c>
  403896:	1c4b      	adds	r3, r1, #1
  403898:	3210      	adds	r2, #16
  40389a:	2b07      	cmp	r3, #7
  40389c:	9211      	str	r2, [sp, #68]	; 0x44
  40389e:	e88e 0060 	stmia.w	lr, {r5, r6}
  4038a2:	9310      	str	r3, [sp, #64]	; 0x40
  4038a4:	ddf0      	ble.n	403888 <_vfiprintf_r+0x76c>
  4038a6:	2a00      	cmp	r2, #0
  4038a8:	d165      	bne.n	403976 <_vfiprintf_r+0x85a>
  4038aa:	3c10      	subs	r4, #16
  4038ac:	2c10      	cmp	r4, #16
  4038ae:	f04f 0001 	mov.w	r0, #1
  4038b2:	4611      	mov	r1, r2
  4038b4:	46ce      	mov	lr, r9
  4038b6:	dcee      	bgt.n	403896 <_vfiprintf_r+0x77a>
  4038b8:	46f2      	mov	sl, lr
  4038ba:	4422      	add	r2, r4
  4038bc:	2807      	cmp	r0, #7
  4038be:	9211      	str	r2, [sp, #68]	; 0x44
  4038c0:	f8ca 5000 	str.w	r5, [sl]
  4038c4:	f8ca 4004 	str.w	r4, [sl, #4]
  4038c8:	9010      	str	r0, [sp, #64]	; 0x40
  4038ca:	f300 8085 	bgt.w	4039d8 <_vfiprintf_r+0x8bc>
  4038ce:	f10a 0a08 	add.w	sl, sl, #8
  4038d2:	3001      	adds	r0, #1
  4038d4:	9905      	ldr	r1, [sp, #20]
  4038d6:	f8ca b000 	str.w	fp, [sl]
  4038da:	440a      	add	r2, r1
  4038dc:	2807      	cmp	r0, #7
  4038de:	9211      	str	r2, [sp, #68]	; 0x44
  4038e0:	f8ca 1004 	str.w	r1, [sl, #4]
  4038e4:	9010      	str	r0, [sp, #64]	; 0x40
  4038e6:	f340 8082 	ble.w	4039ee <_vfiprintf_r+0x8d2>
  4038ea:	2a00      	cmp	r2, #0
  4038ec:	f040 8118 	bne.w	403b20 <_vfiprintf_r+0xa04>
  4038f0:	9b02      	ldr	r3, [sp, #8]
  4038f2:	9210      	str	r2, [sp, #64]	; 0x40
  4038f4:	0758      	lsls	r0, r3, #29
  4038f6:	d535      	bpl.n	403964 <_vfiprintf_r+0x848>
  4038f8:	9b08      	ldr	r3, [sp, #32]
  4038fa:	9901      	ldr	r1, [sp, #4]
  4038fc:	1a5c      	subs	r4, r3, r1
  4038fe:	2c00      	cmp	r4, #0
  403900:	f340 80e7 	ble.w	403ad2 <_vfiprintf_r+0x9b6>
  403904:	46ca      	mov	sl, r9
  403906:	2c10      	cmp	r4, #16
  403908:	f340 8218 	ble.w	403d3c <_vfiprintf_r+0xc20>
  40390c:	9910      	ldr	r1, [sp, #64]	; 0x40
  40390e:	4e8f      	ldr	r6, [pc, #572]	; (403b4c <_vfiprintf_r+0xa30>)
  403910:	9f06      	ldr	r7, [sp, #24]
  403912:	f8dd b010 	ldr.w	fp, [sp, #16]
  403916:	2510      	movs	r5, #16
  403918:	e006      	b.n	403928 <_vfiprintf_r+0x80c>
  40391a:	1c88      	adds	r0, r1, #2
  40391c:	f10a 0a08 	add.w	sl, sl, #8
  403920:	4619      	mov	r1, r3
  403922:	3c10      	subs	r4, #16
  403924:	2c10      	cmp	r4, #16
  403926:	dd11      	ble.n	40394c <_vfiprintf_r+0x830>
  403928:	1c4b      	adds	r3, r1, #1
  40392a:	3210      	adds	r2, #16
  40392c:	2b07      	cmp	r3, #7
  40392e:	9211      	str	r2, [sp, #68]	; 0x44
  403930:	f8ca 6000 	str.w	r6, [sl]
  403934:	f8ca 5004 	str.w	r5, [sl, #4]
  403938:	9310      	str	r3, [sp, #64]	; 0x40
  40393a:	ddee      	ble.n	40391a <_vfiprintf_r+0x7fe>
  40393c:	bb42      	cbnz	r2, 403990 <_vfiprintf_r+0x874>
  40393e:	3c10      	subs	r4, #16
  403940:	2c10      	cmp	r4, #16
  403942:	f04f 0001 	mov.w	r0, #1
  403946:	4611      	mov	r1, r2
  403948:	46ca      	mov	sl, r9
  40394a:	dced      	bgt.n	403928 <_vfiprintf_r+0x80c>
  40394c:	4422      	add	r2, r4
  40394e:	2807      	cmp	r0, #7
  403950:	9211      	str	r2, [sp, #68]	; 0x44
  403952:	f8ca 6000 	str.w	r6, [sl]
  403956:	f8ca 4004 	str.w	r4, [sl, #4]
  40395a:	9010      	str	r0, [sp, #64]	; 0x40
  40395c:	dd51      	ble.n	403a02 <_vfiprintf_r+0x8e6>
  40395e:	2a00      	cmp	r2, #0
  403960:	f040 819b 	bne.w	403c9a <_vfiprintf_r+0xb7e>
  403964:	9b03      	ldr	r3, [sp, #12]
  403966:	9a08      	ldr	r2, [sp, #32]
  403968:	9901      	ldr	r1, [sp, #4]
  40396a:	428a      	cmp	r2, r1
  40396c:	bfac      	ite	ge
  40396e:	189b      	addge	r3, r3, r2
  403970:	185b      	addlt	r3, r3, r1
  403972:	9303      	str	r3, [sp, #12]
  403974:	e04e      	b.n	403a14 <_vfiprintf_r+0x8f8>
  403976:	aa0f      	add	r2, sp, #60	; 0x3c
  403978:	4651      	mov	r1, sl
  40397a:	4638      	mov	r0, r7
  40397c:	f7ff fb8e 	bl	40309c <__sprint_r.part.0>
  403980:	2800      	cmp	r0, #0
  403982:	f040 813f 	bne.w	403c04 <_vfiprintf_r+0xae8>
  403986:	9910      	ldr	r1, [sp, #64]	; 0x40
  403988:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40398a:	1c48      	adds	r0, r1, #1
  40398c:	46ce      	mov	lr, r9
  40398e:	e77f      	b.n	403890 <_vfiprintf_r+0x774>
  403990:	aa0f      	add	r2, sp, #60	; 0x3c
  403992:	4659      	mov	r1, fp
  403994:	4638      	mov	r0, r7
  403996:	f7ff fb81 	bl	40309c <__sprint_r.part.0>
  40399a:	b960      	cbnz	r0, 4039b6 <_vfiprintf_r+0x89a>
  40399c:	9910      	ldr	r1, [sp, #64]	; 0x40
  40399e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4039a0:	1c48      	adds	r0, r1, #1
  4039a2:	46ca      	mov	sl, r9
  4039a4:	e7bd      	b.n	403922 <_vfiprintf_r+0x806>
  4039a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4039a8:	f8dd b010 	ldr.w	fp, [sp, #16]
  4039ac:	2b00      	cmp	r3, #0
  4039ae:	f040 81d4 	bne.w	403d5a <_vfiprintf_r+0xc3e>
  4039b2:	2300      	movs	r3, #0
  4039b4:	9310      	str	r3, [sp, #64]	; 0x40
  4039b6:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4039ba:	f013 0f01 	tst.w	r3, #1
  4039be:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  4039c2:	d102      	bne.n	4039ca <_vfiprintf_r+0x8ae>
  4039c4:	059a      	lsls	r2, r3, #22
  4039c6:	f140 80de 	bpl.w	403b86 <_vfiprintf_r+0xa6a>
  4039ca:	065b      	lsls	r3, r3, #25
  4039cc:	f53f acb2 	bmi.w	403334 <_vfiprintf_r+0x218>
  4039d0:	9803      	ldr	r0, [sp, #12]
  4039d2:	b02d      	add	sp, #180	; 0xb4
  4039d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4039d8:	2a00      	cmp	r2, #0
  4039da:	f040 8106 	bne.w	403bea <_vfiprintf_r+0xace>
  4039de:	9a05      	ldr	r2, [sp, #20]
  4039e0:	921d      	str	r2, [sp, #116]	; 0x74
  4039e2:	2301      	movs	r3, #1
  4039e4:	9211      	str	r2, [sp, #68]	; 0x44
  4039e6:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  4039ea:	9310      	str	r3, [sp, #64]	; 0x40
  4039ec:	46ca      	mov	sl, r9
  4039ee:	f10a 0a08 	add.w	sl, sl, #8
  4039f2:	9b02      	ldr	r3, [sp, #8]
  4039f4:	0759      	lsls	r1, r3, #29
  4039f6:	d504      	bpl.n	403a02 <_vfiprintf_r+0x8e6>
  4039f8:	9b08      	ldr	r3, [sp, #32]
  4039fa:	9901      	ldr	r1, [sp, #4]
  4039fc:	1a5c      	subs	r4, r3, r1
  4039fe:	2c00      	cmp	r4, #0
  403a00:	dc81      	bgt.n	403906 <_vfiprintf_r+0x7ea>
  403a02:	9b03      	ldr	r3, [sp, #12]
  403a04:	9908      	ldr	r1, [sp, #32]
  403a06:	9801      	ldr	r0, [sp, #4]
  403a08:	4281      	cmp	r1, r0
  403a0a:	bfac      	ite	ge
  403a0c:	185b      	addge	r3, r3, r1
  403a0e:	181b      	addlt	r3, r3, r0
  403a10:	9303      	str	r3, [sp, #12]
  403a12:	bb72      	cbnz	r2, 403a72 <_vfiprintf_r+0x956>
  403a14:	2300      	movs	r3, #0
  403a16:	9310      	str	r3, [sp, #64]	; 0x40
  403a18:	46ca      	mov	sl, r9
  403a1a:	f7ff bbbc 	b.w	403196 <_vfiprintf_r+0x7a>
  403a1e:	aa0f      	add	r2, sp, #60	; 0x3c
  403a20:	9904      	ldr	r1, [sp, #16]
  403a22:	4620      	mov	r0, r4
  403a24:	f7ff fb3a 	bl	40309c <__sprint_r.part.0>
  403a28:	bb50      	cbnz	r0, 403a80 <_vfiprintf_r+0x964>
  403a2a:	9910      	ldr	r1, [sp, #64]	; 0x40
  403a2c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403a2e:	f101 0e01 	add.w	lr, r1, #1
  403a32:	46cc      	mov	ip, r9
  403a34:	e548      	b.n	4034c8 <_vfiprintf_r+0x3ac>
  403a36:	2a00      	cmp	r2, #0
  403a38:	f040 8140 	bne.w	403cbc <_vfiprintf_r+0xba0>
  403a3c:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  403a40:	2900      	cmp	r1, #0
  403a42:	f000 811b 	beq.w	403c7c <_vfiprintf_r+0xb60>
  403a46:	2201      	movs	r2, #1
  403a48:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  403a4c:	4610      	mov	r0, r2
  403a4e:	921d      	str	r2, [sp, #116]	; 0x74
  403a50:	911c      	str	r1, [sp, #112]	; 0x70
  403a52:	46ca      	mov	sl, r9
  403a54:	4601      	mov	r1, r0
  403a56:	f10a 0a08 	add.w	sl, sl, #8
  403a5a:	3001      	adds	r0, #1
  403a5c:	e507      	b.n	40346e <_vfiprintf_r+0x352>
  403a5e:	9b02      	ldr	r3, [sp, #8]
  403a60:	2a01      	cmp	r2, #1
  403a62:	f000 8098 	beq.w	403b96 <_vfiprintf_r+0xa7a>
  403a66:	2a02      	cmp	r2, #2
  403a68:	d10d      	bne.n	403a86 <_vfiprintf_r+0x96a>
  403a6a:	9302      	str	r3, [sp, #8]
  403a6c:	2600      	movs	r6, #0
  403a6e:	2700      	movs	r7, #0
  403a70:	e5b0      	b.n	4035d4 <_vfiprintf_r+0x4b8>
  403a72:	aa0f      	add	r2, sp, #60	; 0x3c
  403a74:	9904      	ldr	r1, [sp, #16]
  403a76:	9806      	ldr	r0, [sp, #24]
  403a78:	f7ff fb10 	bl	40309c <__sprint_r.part.0>
  403a7c:	2800      	cmp	r0, #0
  403a7e:	d0c9      	beq.n	403a14 <_vfiprintf_r+0x8f8>
  403a80:	f8dd b010 	ldr.w	fp, [sp, #16]
  403a84:	e797      	b.n	4039b6 <_vfiprintf_r+0x89a>
  403a86:	9302      	str	r3, [sp, #8]
  403a88:	2600      	movs	r6, #0
  403a8a:	2700      	movs	r7, #0
  403a8c:	4649      	mov	r1, r9
  403a8e:	e000      	b.n	403a92 <_vfiprintf_r+0x976>
  403a90:	4659      	mov	r1, fp
  403a92:	08f2      	lsrs	r2, r6, #3
  403a94:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  403a98:	08f8      	lsrs	r0, r7, #3
  403a9a:	f006 0307 	and.w	r3, r6, #7
  403a9e:	4607      	mov	r7, r0
  403aa0:	4616      	mov	r6, r2
  403aa2:	3330      	adds	r3, #48	; 0x30
  403aa4:	ea56 0207 	orrs.w	r2, r6, r7
  403aa8:	f801 3c01 	strb.w	r3, [r1, #-1]
  403aac:	f101 3bff 	add.w	fp, r1, #4294967295
  403ab0:	d1ee      	bne.n	403a90 <_vfiprintf_r+0x974>
  403ab2:	9a02      	ldr	r2, [sp, #8]
  403ab4:	07d6      	lsls	r6, r2, #31
  403ab6:	f57f ad9d 	bpl.w	4035f4 <_vfiprintf_r+0x4d8>
  403aba:	2b30      	cmp	r3, #48	; 0x30
  403abc:	f43f ad9a 	beq.w	4035f4 <_vfiprintf_r+0x4d8>
  403ac0:	3902      	subs	r1, #2
  403ac2:	2330      	movs	r3, #48	; 0x30
  403ac4:	f80b 3c01 	strb.w	r3, [fp, #-1]
  403ac8:	eba9 0301 	sub.w	r3, r9, r1
  403acc:	9305      	str	r3, [sp, #20]
  403ace:	468b      	mov	fp, r1
  403ad0:	e476      	b.n	4033c0 <_vfiprintf_r+0x2a4>
  403ad2:	9b03      	ldr	r3, [sp, #12]
  403ad4:	9a08      	ldr	r2, [sp, #32]
  403ad6:	428a      	cmp	r2, r1
  403ad8:	bfac      	ite	ge
  403ada:	189b      	addge	r3, r3, r2
  403adc:	185b      	addlt	r3, r3, r1
  403ade:	9303      	str	r3, [sp, #12]
  403ae0:	e798      	b.n	403a14 <_vfiprintf_r+0x8f8>
  403ae2:	2202      	movs	r2, #2
  403ae4:	e44d      	b.n	403382 <_vfiprintf_r+0x266>
  403ae6:	2f00      	cmp	r7, #0
  403ae8:	bf08      	it	eq
  403aea:	2e0a      	cmpeq	r6, #10
  403aec:	d352      	bcc.n	403b94 <_vfiprintf_r+0xa78>
  403aee:	46cb      	mov	fp, r9
  403af0:	4630      	mov	r0, r6
  403af2:	4639      	mov	r1, r7
  403af4:	220a      	movs	r2, #10
  403af6:	2300      	movs	r3, #0
  403af8:	f7fe fe56 	bl	4027a8 <__aeabi_uldivmod>
  403afc:	3230      	adds	r2, #48	; 0x30
  403afe:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  403b02:	4630      	mov	r0, r6
  403b04:	4639      	mov	r1, r7
  403b06:	2300      	movs	r3, #0
  403b08:	220a      	movs	r2, #10
  403b0a:	f7fe fe4d 	bl	4027a8 <__aeabi_uldivmod>
  403b0e:	4606      	mov	r6, r0
  403b10:	460f      	mov	r7, r1
  403b12:	ea56 0307 	orrs.w	r3, r6, r7
  403b16:	d1eb      	bne.n	403af0 <_vfiprintf_r+0x9d4>
  403b18:	e56c      	b.n	4035f4 <_vfiprintf_r+0x4d8>
  403b1a:	9405      	str	r4, [sp, #20]
  403b1c:	46cb      	mov	fp, r9
  403b1e:	e44f      	b.n	4033c0 <_vfiprintf_r+0x2a4>
  403b20:	aa0f      	add	r2, sp, #60	; 0x3c
  403b22:	9904      	ldr	r1, [sp, #16]
  403b24:	9806      	ldr	r0, [sp, #24]
  403b26:	f7ff fab9 	bl	40309c <__sprint_r.part.0>
  403b2a:	2800      	cmp	r0, #0
  403b2c:	d1a8      	bne.n	403a80 <_vfiprintf_r+0x964>
  403b2e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403b30:	46ca      	mov	sl, r9
  403b32:	e75e      	b.n	4039f2 <_vfiprintf_r+0x8d6>
  403b34:	aa0f      	add	r2, sp, #60	; 0x3c
  403b36:	9904      	ldr	r1, [sp, #16]
  403b38:	9806      	ldr	r0, [sp, #24]
  403b3a:	f7ff faaf 	bl	40309c <__sprint_r.part.0>
  403b3e:	2800      	cmp	r0, #0
  403b40:	d19e      	bne.n	403a80 <_vfiprintf_r+0x964>
  403b42:	46ca      	mov	sl, r9
  403b44:	f7ff bbc0 	b.w	4032c8 <_vfiprintf_r+0x1ac>
  403b48:	00405ba8 	.word	0x00405ba8
  403b4c:	00405b98 	.word	0x00405b98
  403b50:	3104      	adds	r1, #4
  403b52:	6816      	ldr	r6, [r2, #0]
  403b54:	9107      	str	r1, [sp, #28]
  403b56:	2201      	movs	r2, #1
  403b58:	2700      	movs	r7, #0
  403b5a:	e412      	b.n	403382 <_vfiprintf_r+0x266>
  403b5c:	9807      	ldr	r0, [sp, #28]
  403b5e:	4601      	mov	r1, r0
  403b60:	3104      	adds	r1, #4
  403b62:	6806      	ldr	r6, [r0, #0]
  403b64:	9107      	str	r1, [sp, #28]
  403b66:	2700      	movs	r7, #0
  403b68:	e40b      	b.n	403382 <_vfiprintf_r+0x266>
  403b6a:	680e      	ldr	r6, [r1, #0]
  403b6c:	3104      	adds	r1, #4
  403b6e:	9107      	str	r1, [sp, #28]
  403b70:	2700      	movs	r7, #0
  403b72:	e591      	b.n	403698 <_vfiprintf_r+0x57c>
  403b74:	9907      	ldr	r1, [sp, #28]
  403b76:	680e      	ldr	r6, [r1, #0]
  403b78:	460a      	mov	r2, r1
  403b7a:	17f7      	asrs	r7, r6, #31
  403b7c:	3204      	adds	r2, #4
  403b7e:	9207      	str	r2, [sp, #28]
  403b80:	4630      	mov	r0, r6
  403b82:	4639      	mov	r1, r7
  403b84:	e50f      	b.n	4035a6 <_vfiprintf_r+0x48a>
  403b86:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  403b8a:	f000 fe7f 	bl	40488c <__retarget_lock_release_recursive>
  403b8e:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  403b92:	e71a      	b.n	4039ca <_vfiprintf_r+0x8ae>
  403b94:	9b02      	ldr	r3, [sp, #8]
  403b96:	9302      	str	r3, [sp, #8]
  403b98:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  403b9c:	3630      	adds	r6, #48	; 0x30
  403b9e:	2301      	movs	r3, #1
  403ba0:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  403ba4:	9305      	str	r3, [sp, #20]
  403ba6:	e40b      	b.n	4033c0 <_vfiprintf_r+0x2a4>
  403ba8:	aa0f      	add	r2, sp, #60	; 0x3c
  403baa:	9904      	ldr	r1, [sp, #16]
  403bac:	9806      	ldr	r0, [sp, #24]
  403bae:	f7ff fa75 	bl	40309c <__sprint_r.part.0>
  403bb2:	2800      	cmp	r0, #0
  403bb4:	f47f af64 	bne.w	403a80 <_vfiprintf_r+0x964>
  403bb8:	9910      	ldr	r1, [sp, #64]	; 0x40
  403bba:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403bbc:	1c48      	adds	r0, r1, #1
  403bbe:	46ca      	mov	sl, r9
  403bc0:	e651      	b.n	403866 <_vfiprintf_r+0x74a>
  403bc2:	aa0f      	add	r2, sp, #60	; 0x3c
  403bc4:	9904      	ldr	r1, [sp, #16]
  403bc6:	9806      	ldr	r0, [sp, #24]
  403bc8:	f7ff fa68 	bl	40309c <__sprint_r.part.0>
  403bcc:	2800      	cmp	r0, #0
  403bce:	f47f af57 	bne.w	403a80 <_vfiprintf_r+0x964>
  403bd2:	9910      	ldr	r1, [sp, #64]	; 0x40
  403bd4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403bd6:	1c48      	adds	r0, r1, #1
  403bd8:	46ca      	mov	sl, r9
  403bda:	e448      	b.n	40346e <_vfiprintf_r+0x352>
  403bdc:	2a00      	cmp	r2, #0
  403bde:	f040 8091 	bne.w	403d04 <_vfiprintf_r+0xbe8>
  403be2:	2001      	movs	r0, #1
  403be4:	4611      	mov	r1, r2
  403be6:	46ca      	mov	sl, r9
  403be8:	e641      	b.n	40386e <_vfiprintf_r+0x752>
  403bea:	aa0f      	add	r2, sp, #60	; 0x3c
  403bec:	9904      	ldr	r1, [sp, #16]
  403bee:	9806      	ldr	r0, [sp, #24]
  403bf0:	f7ff fa54 	bl	40309c <__sprint_r.part.0>
  403bf4:	2800      	cmp	r0, #0
  403bf6:	f47f af43 	bne.w	403a80 <_vfiprintf_r+0x964>
  403bfa:	9810      	ldr	r0, [sp, #64]	; 0x40
  403bfc:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403bfe:	3001      	adds	r0, #1
  403c00:	46ca      	mov	sl, r9
  403c02:	e667      	b.n	4038d4 <_vfiprintf_r+0x7b8>
  403c04:	46d3      	mov	fp, sl
  403c06:	e6d6      	b.n	4039b6 <_vfiprintf_r+0x89a>
  403c08:	9e07      	ldr	r6, [sp, #28]
  403c0a:	3607      	adds	r6, #7
  403c0c:	f026 0207 	bic.w	r2, r6, #7
  403c10:	f102 0108 	add.w	r1, r2, #8
  403c14:	e9d2 6700 	ldrd	r6, r7, [r2]
  403c18:	9107      	str	r1, [sp, #28]
  403c1a:	2201      	movs	r2, #1
  403c1c:	f7ff bbb1 	b.w	403382 <_vfiprintf_r+0x266>
  403c20:	9e07      	ldr	r6, [sp, #28]
  403c22:	3607      	adds	r6, #7
  403c24:	f026 0607 	bic.w	r6, r6, #7
  403c28:	e9d6 0100 	ldrd	r0, r1, [r6]
  403c2c:	f106 0208 	add.w	r2, r6, #8
  403c30:	9207      	str	r2, [sp, #28]
  403c32:	4606      	mov	r6, r0
  403c34:	460f      	mov	r7, r1
  403c36:	e4b6      	b.n	4035a6 <_vfiprintf_r+0x48a>
  403c38:	9e07      	ldr	r6, [sp, #28]
  403c3a:	3607      	adds	r6, #7
  403c3c:	f026 0207 	bic.w	r2, r6, #7
  403c40:	f102 0108 	add.w	r1, r2, #8
  403c44:	e9d2 6700 	ldrd	r6, r7, [r2]
  403c48:	9107      	str	r1, [sp, #28]
  403c4a:	2200      	movs	r2, #0
  403c4c:	f7ff bb99 	b.w	403382 <_vfiprintf_r+0x266>
  403c50:	9e07      	ldr	r6, [sp, #28]
  403c52:	3607      	adds	r6, #7
  403c54:	f026 0107 	bic.w	r1, r6, #7
  403c58:	f101 0008 	add.w	r0, r1, #8
  403c5c:	9007      	str	r0, [sp, #28]
  403c5e:	e9d1 6700 	ldrd	r6, r7, [r1]
  403c62:	e519      	b.n	403698 <_vfiprintf_r+0x57c>
  403c64:	46cb      	mov	fp, r9
  403c66:	f7ff bbab 	b.w	4033c0 <_vfiprintf_r+0x2a4>
  403c6a:	252d      	movs	r5, #45	; 0x2d
  403c6c:	4276      	negs	r6, r6
  403c6e:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  403c72:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  403c76:	2201      	movs	r2, #1
  403c78:	f7ff bb88 	b.w	40338c <_vfiprintf_r+0x270>
  403c7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403c7e:	b9b3      	cbnz	r3, 403cae <_vfiprintf_r+0xb92>
  403c80:	4611      	mov	r1, r2
  403c82:	2001      	movs	r0, #1
  403c84:	46ca      	mov	sl, r9
  403c86:	e5f2      	b.n	40386e <_vfiprintf_r+0x752>
  403c88:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  403c8c:	f000 fdfe 	bl	40488c <__retarget_lock_release_recursive>
  403c90:	f04f 33ff 	mov.w	r3, #4294967295
  403c94:	9303      	str	r3, [sp, #12]
  403c96:	f7ff bb50 	b.w	40333a <_vfiprintf_r+0x21e>
  403c9a:	aa0f      	add	r2, sp, #60	; 0x3c
  403c9c:	9904      	ldr	r1, [sp, #16]
  403c9e:	9806      	ldr	r0, [sp, #24]
  403ca0:	f7ff f9fc 	bl	40309c <__sprint_r.part.0>
  403ca4:	2800      	cmp	r0, #0
  403ca6:	f47f aeeb 	bne.w	403a80 <_vfiprintf_r+0x964>
  403caa:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403cac:	e6a9      	b.n	403a02 <_vfiprintf_r+0x8e6>
  403cae:	ab0e      	add	r3, sp, #56	; 0x38
  403cb0:	2202      	movs	r2, #2
  403cb2:	931c      	str	r3, [sp, #112]	; 0x70
  403cb4:	921d      	str	r2, [sp, #116]	; 0x74
  403cb6:	2001      	movs	r0, #1
  403cb8:	46ca      	mov	sl, r9
  403cba:	e5d0      	b.n	40385e <_vfiprintf_r+0x742>
  403cbc:	aa0f      	add	r2, sp, #60	; 0x3c
  403cbe:	9904      	ldr	r1, [sp, #16]
  403cc0:	9806      	ldr	r0, [sp, #24]
  403cc2:	f7ff f9eb 	bl	40309c <__sprint_r.part.0>
  403cc6:	2800      	cmp	r0, #0
  403cc8:	f47f aeda 	bne.w	403a80 <_vfiprintf_r+0x964>
  403ccc:	9910      	ldr	r1, [sp, #64]	; 0x40
  403cce:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403cd0:	1c48      	adds	r0, r1, #1
  403cd2:	46ca      	mov	sl, r9
  403cd4:	e5a4      	b.n	403820 <_vfiprintf_r+0x704>
  403cd6:	9a07      	ldr	r2, [sp, #28]
  403cd8:	9903      	ldr	r1, [sp, #12]
  403cda:	6813      	ldr	r3, [r2, #0]
  403cdc:	17cd      	asrs	r5, r1, #31
  403cde:	4608      	mov	r0, r1
  403ce0:	3204      	adds	r2, #4
  403ce2:	4629      	mov	r1, r5
  403ce4:	9207      	str	r2, [sp, #28]
  403ce6:	e9c3 0100 	strd	r0, r1, [r3]
  403cea:	f7ff ba54 	b.w	403196 <_vfiprintf_r+0x7a>
  403cee:	4658      	mov	r0, fp
  403cf0:	9607      	str	r6, [sp, #28]
  403cf2:	9302      	str	r3, [sp, #8]
  403cf4:	f7ff f964 	bl	402fc0 <strlen>
  403cf8:	2400      	movs	r4, #0
  403cfa:	9005      	str	r0, [sp, #20]
  403cfc:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  403d00:	f7ff bb5e 	b.w	4033c0 <_vfiprintf_r+0x2a4>
  403d04:	aa0f      	add	r2, sp, #60	; 0x3c
  403d06:	9904      	ldr	r1, [sp, #16]
  403d08:	9806      	ldr	r0, [sp, #24]
  403d0a:	f7ff f9c7 	bl	40309c <__sprint_r.part.0>
  403d0e:	2800      	cmp	r0, #0
  403d10:	f47f aeb6 	bne.w	403a80 <_vfiprintf_r+0x964>
  403d14:	9910      	ldr	r1, [sp, #64]	; 0x40
  403d16:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403d18:	1c48      	adds	r0, r1, #1
  403d1a:	46ca      	mov	sl, r9
  403d1c:	e5a7      	b.n	40386e <_vfiprintf_r+0x752>
  403d1e:	9910      	ldr	r1, [sp, #64]	; 0x40
  403d20:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403d22:	4e20      	ldr	r6, [pc, #128]	; (403da4 <_vfiprintf_r+0xc88>)
  403d24:	3101      	adds	r1, #1
  403d26:	f7ff bb90 	b.w	40344a <_vfiprintf_r+0x32e>
  403d2a:	2c06      	cmp	r4, #6
  403d2c:	bf28      	it	cs
  403d2e:	2406      	movcs	r4, #6
  403d30:	9405      	str	r4, [sp, #20]
  403d32:	9607      	str	r6, [sp, #28]
  403d34:	9401      	str	r4, [sp, #4]
  403d36:	f8df b070 	ldr.w	fp, [pc, #112]	; 403da8 <_vfiprintf_r+0xc8c>
  403d3a:	e4d5      	b.n	4036e8 <_vfiprintf_r+0x5cc>
  403d3c:	9810      	ldr	r0, [sp, #64]	; 0x40
  403d3e:	4e19      	ldr	r6, [pc, #100]	; (403da4 <_vfiprintf_r+0xc88>)
  403d40:	3001      	adds	r0, #1
  403d42:	e603      	b.n	40394c <_vfiprintf_r+0x830>
  403d44:	9405      	str	r4, [sp, #20]
  403d46:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  403d4a:	9607      	str	r6, [sp, #28]
  403d4c:	9302      	str	r3, [sp, #8]
  403d4e:	4604      	mov	r4, r0
  403d50:	f7ff bb36 	b.w	4033c0 <_vfiprintf_r+0x2a4>
  403d54:	4686      	mov	lr, r0
  403d56:	f7ff bbce 	b.w	4034f6 <_vfiprintf_r+0x3da>
  403d5a:	9806      	ldr	r0, [sp, #24]
  403d5c:	aa0f      	add	r2, sp, #60	; 0x3c
  403d5e:	4659      	mov	r1, fp
  403d60:	f7ff f99c 	bl	40309c <__sprint_r.part.0>
  403d64:	2800      	cmp	r0, #0
  403d66:	f43f ae24 	beq.w	4039b2 <_vfiprintf_r+0x896>
  403d6a:	e624      	b.n	4039b6 <_vfiprintf_r+0x89a>
  403d6c:	9907      	ldr	r1, [sp, #28]
  403d6e:	f898 2001 	ldrb.w	r2, [r8, #1]
  403d72:	680c      	ldr	r4, [r1, #0]
  403d74:	3104      	adds	r1, #4
  403d76:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  403d7a:	46b8      	mov	r8, r7
  403d7c:	9107      	str	r1, [sp, #28]
  403d7e:	f7ff ba3f 	b.w	403200 <_vfiprintf_r+0xe4>
  403d82:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  403d86:	e43c      	b.n	403602 <_vfiprintf_r+0x4e6>
  403d88:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  403d8c:	e521      	b.n	4037d2 <_vfiprintf_r+0x6b6>
  403d8e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  403d92:	f7ff bbf4 	b.w	40357e <_vfiprintf_r+0x462>
  403d96:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  403d9a:	e491      	b.n	4036c0 <_vfiprintf_r+0x5a4>
  403d9c:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  403da0:	e469      	b.n	403676 <_vfiprintf_r+0x55a>
  403da2:	bf00      	nop
  403da4:	00405b98 	.word	0x00405b98
  403da8:	00405b90 	.word	0x00405b90

00403dac <__sbprintf>:
  403dac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403db0:	460c      	mov	r4, r1
  403db2:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  403db6:	8989      	ldrh	r1, [r1, #12]
  403db8:	6e66      	ldr	r6, [r4, #100]	; 0x64
  403dba:	89e5      	ldrh	r5, [r4, #14]
  403dbc:	9619      	str	r6, [sp, #100]	; 0x64
  403dbe:	f021 0102 	bic.w	r1, r1, #2
  403dc2:	4606      	mov	r6, r0
  403dc4:	69e0      	ldr	r0, [r4, #28]
  403dc6:	f8ad 100c 	strh.w	r1, [sp, #12]
  403dca:	4617      	mov	r7, r2
  403dcc:	f44f 6180 	mov.w	r1, #1024	; 0x400
  403dd0:	6a62      	ldr	r2, [r4, #36]	; 0x24
  403dd2:	f8ad 500e 	strh.w	r5, [sp, #14]
  403dd6:	4698      	mov	r8, r3
  403dd8:	ad1a      	add	r5, sp, #104	; 0x68
  403dda:	2300      	movs	r3, #0
  403ddc:	9007      	str	r0, [sp, #28]
  403dde:	a816      	add	r0, sp, #88	; 0x58
  403de0:	9209      	str	r2, [sp, #36]	; 0x24
  403de2:	9306      	str	r3, [sp, #24]
  403de4:	9500      	str	r5, [sp, #0]
  403de6:	9504      	str	r5, [sp, #16]
  403de8:	9102      	str	r1, [sp, #8]
  403dea:	9105      	str	r1, [sp, #20]
  403dec:	f000 fd48 	bl	404880 <__retarget_lock_init_recursive>
  403df0:	4643      	mov	r3, r8
  403df2:	463a      	mov	r2, r7
  403df4:	4669      	mov	r1, sp
  403df6:	4630      	mov	r0, r6
  403df8:	f7ff f990 	bl	40311c <_vfiprintf_r>
  403dfc:	1e05      	subs	r5, r0, #0
  403dfe:	db07      	blt.n	403e10 <__sbprintf+0x64>
  403e00:	4630      	mov	r0, r6
  403e02:	4669      	mov	r1, sp
  403e04:	f000 f928 	bl	404058 <_fflush_r>
  403e08:	2800      	cmp	r0, #0
  403e0a:	bf18      	it	ne
  403e0c:	f04f 35ff 	movne.w	r5, #4294967295
  403e10:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  403e14:	065b      	lsls	r3, r3, #25
  403e16:	d503      	bpl.n	403e20 <__sbprintf+0x74>
  403e18:	89a3      	ldrh	r3, [r4, #12]
  403e1a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403e1e:	81a3      	strh	r3, [r4, #12]
  403e20:	9816      	ldr	r0, [sp, #88]	; 0x58
  403e22:	f000 fd2f 	bl	404884 <__retarget_lock_close_recursive>
  403e26:	4628      	mov	r0, r5
  403e28:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  403e2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00403e30 <__swsetup_r>:
  403e30:	b538      	push	{r3, r4, r5, lr}
  403e32:	4b30      	ldr	r3, [pc, #192]	; (403ef4 <__swsetup_r+0xc4>)
  403e34:	681b      	ldr	r3, [r3, #0]
  403e36:	4605      	mov	r5, r0
  403e38:	460c      	mov	r4, r1
  403e3a:	b113      	cbz	r3, 403e42 <__swsetup_r+0x12>
  403e3c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  403e3e:	2a00      	cmp	r2, #0
  403e40:	d038      	beq.n	403eb4 <__swsetup_r+0x84>
  403e42:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403e46:	b293      	uxth	r3, r2
  403e48:	0718      	lsls	r0, r3, #28
  403e4a:	d50c      	bpl.n	403e66 <__swsetup_r+0x36>
  403e4c:	6920      	ldr	r0, [r4, #16]
  403e4e:	b1a8      	cbz	r0, 403e7c <__swsetup_r+0x4c>
  403e50:	f013 0201 	ands.w	r2, r3, #1
  403e54:	d01e      	beq.n	403e94 <__swsetup_r+0x64>
  403e56:	6963      	ldr	r3, [r4, #20]
  403e58:	2200      	movs	r2, #0
  403e5a:	425b      	negs	r3, r3
  403e5c:	61a3      	str	r3, [r4, #24]
  403e5e:	60a2      	str	r2, [r4, #8]
  403e60:	b1f0      	cbz	r0, 403ea0 <__swsetup_r+0x70>
  403e62:	2000      	movs	r0, #0
  403e64:	bd38      	pop	{r3, r4, r5, pc}
  403e66:	06d9      	lsls	r1, r3, #27
  403e68:	d53c      	bpl.n	403ee4 <__swsetup_r+0xb4>
  403e6a:	0758      	lsls	r0, r3, #29
  403e6c:	d426      	bmi.n	403ebc <__swsetup_r+0x8c>
  403e6e:	6920      	ldr	r0, [r4, #16]
  403e70:	f042 0308 	orr.w	r3, r2, #8
  403e74:	81a3      	strh	r3, [r4, #12]
  403e76:	b29b      	uxth	r3, r3
  403e78:	2800      	cmp	r0, #0
  403e7a:	d1e9      	bne.n	403e50 <__swsetup_r+0x20>
  403e7c:	f403 7220 	and.w	r2, r3, #640	; 0x280
  403e80:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  403e84:	d0e4      	beq.n	403e50 <__swsetup_r+0x20>
  403e86:	4628      	mov	r0, r5
  403e88:	4621      	mov	r1, r4
  403e8a:	f000 fd2f 	bl	4048ec <__smakebuf_r>
  403e8e:	89a3      	ldrh	r3, [r4, #12]
  403e90:	6920      	ldr	r0, [r4, #16]
  403e92:	e7dd      	b.n	403e50 <__swsetup_r+0x20>
  403e94:	0799      	lsls	r1, r3, #30
  403e96:	bf58      	it	pl
  403e98:	6962      	ldrpl	r2, [r4, #20]
  403e9a:	60a2      	str	r2, [r4, #8]
  403e9c:	2800      	cmp	r0, #0
  403e9e:	d1e0      	bne.n	403e62 <__swsetup_r+0x32>
  403ea0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403ea4:	061a      	lsls	r2, r3, #24
  403ea6:	d5dd      	bpl.n	403e64 <__swsetup_r+0x34>
  403ea8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403eac:	81a3      	strh	r3, [r4, #12]
  403eae:	f04f 30ff 	mov.w	r0, #4294967295
  403eb2:	bd38      	pop	{r3, r4, r5, pc}
  403eb4:	4618      	mov	r0, r3
  403eb6:	f000 f927 	bl	404108 <__sinit>
  403eba:	e7c2      	b.n	403e42 <__swsetup_r+0x12>
  403ebc:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403ebe:	b151      	cbz	r1, 403ed6 <__swsetup_r+0xa6>
  403ec0:	f104 0340 	add.w	r3, r4, #64	; 0x40
  403ec4:	4299      	cmp	r1, r3
  403ec6:	d004      	beq.n	403ed2 <__swsetup_r+0xa2>
  403ec8:	4628      	mov	r0, r5
  403eca:	f000 fa43 	bl	404354 <_free_r>
  403ece:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403ed2:	2300      	movs	r3, #0
  403ed4:	6323      	str	r3, [r4, #48]	; 0x30
  403ed6:	2300      	movs	r3, #0
  403ed8:	6920      	ldr	r0, [r4, #16]
  403eda:	6063      	str	r3, [r4, #4]
  403edc:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  403ee0:	6020      	str	r0, [r4, #0]
  403ee2:	e7c5      	b.n	403e70 <__swsetup_r+0x40>
  403ee4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  403ee8:	2309      	movs	r3, #9
  403eea:	602b      	str	r3, [r5, #0]
  403eec:	f04f 30ff 	mov.w	r0, #4294967295
  403ef0:	81a2      	strh	r2, [r4, #12]
  403ef2:	bd38      	pop	{r3, r4, r5, pc}
  403ef4:	20400024 	.word	0x20400024

00403ef8 <register_fini>:
  403ef8:	4b02      	ldr	r3, [pc, #8]	; (403f04 <register_fini+0xc>)
  403efa:	b113      	cbz	r3, 403f02 <register_fini+0xa>
  403efc:	4802      	ldr	r0, [pc, #8]	; (403f08 <register_fini+0x10>)
  403efe:	f000 b805 	b.w	403f0c <atexit>
  403f02:	4770      	bx	lr
  403f04:	00000000 	.word	0x00000000
  403f08:	00404179 	.word	0x00404179

00403f0c <atexit>:
  403f0c:	2300      	movs	r3, #0
  403f0e:	4601      	mov	r1, r0
  403f10:	461a      	mov	r2, r3
  403f12:	4618      	mov	r0, r3
  403f14:	f001 bb66 	b.w	4055e4 <__register_exitproc>

00403f18 <__sflush_r>:
  403f18:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  403f1c:	b29a      	uxth	r2, r3
  403f1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403f22:	460d      	mov	r5, r1
  403f24:	0711      	lsls	r1, r2, #28
  403f26:	4680      	mov	r8, r0
  403f28:	d43a      	bmi.n	403fa0 <__sflush_r+0x88>
  403f2a:	686a      	ldr	r2, [r5, #4]
  403f2c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  403f30:	2a00      	cmp	r2, #0
  403f32:	81ab      	strh	r3, [r5, #12]
  403f34:	dd6f      	ble.n	404016 <__sflush_r+0xfe>
  403f36:	6aac      	ldr	r4, [r5, #40]	; 0x28
  403f38:	2c00      	cmp	r4, #0
  403f3a:	d049      	beq.n	403fd0 <__sflush_r+0xb8>
  403f3c:	2200      	movs	r2, #0
  403f3e:	b29b      	uxth	r3, r3
  403f40:	f8d8 6000 	ldr.w	r6, [r8]
  403f44:	f8c8 2000 	str.w	r2, [r8]
  403f48:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  403f4c:	d067      	beq.n	40401e <__sflush_r+0x106>
  403f4e:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  403f50:	075f      	lsls	r7, r3, #29
  403f52:	d505      	bpl.n	403f60 <__sflush_r+0x48>
  403f54:	6869      	ldr	r1, [r5, #4]
  403f56:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  403f58:	1a52      	subs	r2, r2, r1
  403f5a:	b10b      	cbz	r3, 403f60 <__sflush_r+0x48>
  403f5c:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  403f5e:	1ad2      	subs	r2, r2, r3
  403f60:	2300      	movs	r3, #0
  403f62:	69e9      	ldr	r1, [r5, #28]
  403f64:	4640      	mov	r0, r8
  403f66:	47a0      	blx	r4
  403f68:	1c44      	adds	r4, r0, #1
  403f6a:	d03c      	beq.n	403fe6 <__sflush_r+0xce>
  403f6c:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  403f70:	692a      	ldr	r2, [r5, #16]
  403f72:	602a      	str	r2, [r5, #0]
  403f74:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  403f78:	2200      	movs	r2, #0
  403f7a:	81ab      	strh	r3, [r5, #12]
  403f7c:	04db      	lsls	r3, r3, #19
  403f7e:	606a      	str	r2, [r5, #4]
  403f80:	d447      	bmi.n	404012 <__sflush_r+0xfa>
  403f82:	6b29      	ldr	r1, [r5, #48]	; 0x30
  403f84:	f8c8 6000 	str.w	r6, [r8]
  403f88:	b311      	cbz	r1, 403fd0 <__sflush_r+0xb8>
  403f8a:	f105 0340 	add.w	r3, r5, #64	; 0x40
  403f8e:	4299      	cmp	r1, r3
  403f90:	d002      	beq.n	403f98 <__sflush_r+0x80>
  403f92:	4640      	mov	r0, r8
  403f94:	f000 f9de 	bl	404354 <_free_r>
  403f98:	2000      	movs	r0, #0
  403f9a:	6328      	str	r0, [r5, #48]	; 0x30
  403f9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403fa0:	692e      	ldr	r6, [r5, #16]
  403fa2:	b1ae      	cbz	r6, 403fd0 <__sflush_r+0xb8>
  403fa4:	682c      	ldr	r4, [r5, #0]
  403fa6:	602e      	str	r6, [r5, #0]
  403fa8:	0791      	lsls	r1, r2, #30
  403faa:	bf0c      	ite	eq
  403fac:	696b      	ldreq	r3, [r5, #20]
  403fae:	2300      	movne	r3, #0
  403fb0:	1ba4      	subs	r4, r4, r6
  403fb2:	60ab      	str	r3, [r5, #8]
  403fb4:	e00a      	b.n	403fcc <__sflush_r+0xb4>
  403fb6:	4623      	mov	r3, r4
  403fb8:	4632      	mov	r2, r6
  403fba:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  403fbc:	69e9      	ldr	r1, [r5, #28]
  403fbe:	4640      	mov	r0, r8
  403fc0:	47b8      	blx	r7
  403fc2:	2800      	cmp	r0, #0
  403fc4:	eba4 0400 	sub.w	r4, r4, r0
  403fc8:	4406      	add	r6, r0
  403fca:	dd04      	ble.n	403fd6 <__sflush_r+0xbe>
  403fcc:	2c00      	cmp	r4, #0
  403fce:	dcf2      	bgt.n	403fb6 <__sflush_r+0x9e>
  403fd0:	2000      	movs	r0, #0
  403fd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403fd6:	89ab      	ldrh	r3, [r5, #12]
  403fd8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403fdc:	81ab      	strh	r3, [r5, #12]
  403fde:	f04f 30ff 	mov.w	r0, #4294967295
  403fe2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403fe6:	f8d8 4000 	ldr.w	r4, [r8]
  403fea:	2c1d      	cmp	r4, #29
  403fec:	d8f3      	bhi.n	403fd6 <__sflush_r+0xbe>
  403fee:	4b19      	ldr	r3, [pc, #100]	; (404054 <__sflush_r+0x13c>)
  403ff0:	40e3      	lsrs	r3, r4
  403ff2:	43db      	mvns	r3, r3
  403ff4:	f013 0301 	ands.w	r3, r3, #1
  403ff8:	d1ed      	bne.n	403fd6 <__sflush_r+0xbe>
  403ffa:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  403ffe:	606b      	str	r3, [r5, #4]
  404000:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  404004:	6929      	ldr	r1, [r5, #16]
  404006:	81ab      	strh	r3, [r5, #12]
  404008:	04da      	lsls	r2, r3, #19
  40400a:	6029      	str	r1, [r5, #0]
  40400c:	d5b9      	bpl.n	403f82 <__sflush_r+0x6a>
  40400e:	2c00      	cmp	r4, #0
  404010:	d1b7      	bne.n	403f82 <__sflush_r+0x6a>
  404012:	6528      	str	r0, [r5, #80]	; 0x50
  404014:	e7b5      	b.n	403f82 <__sflush_r+0x6a>
  404016:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  404018:	2a00      	cmp	r2, #0
  40401a:	dc8c      	bgt.n	403f36 <__sflush_r+0x1e>
  40401c:	e7d8      	b.n	403fd0 <__sflush_r+0xb8>
  40401e:	2301      	movs	r3, #1
  404020:	69e9      	ldr	r1, [r5, #28]
  404022:	4640      	mov	r0, r8
  404024:	47a0      	blx	r4
  404026:	1c43      	adds	r3, r0, #1
  404028:	4602      	mov	r2, r0
  40402a:	d002      	beq.n	404032 <__sflush_r+0x11a>
  40402c:	89ab      	ldrh	r3, [r5, #12]
  40402e:	6aac      	ldr	r4, [r5, #40]	; 0x28
  404030:	e78e      	b.n	403f50 <__sflush_r+0x38>
  404032:	f8d8 3000 	ldr.w	r3, [r8]
  404036:	2b00      	cmp	r3, #0
  404038:	d0f8      	beq.n	40402c <__sflush_r+0x114>
  40403a:	2b1d      	cmp	r3, #29
  40403c:	d001      	beq.n	404042 <__sflush_r+0x12a>
  40403e:	2b16      	cmp	r3, #22
  404040:	d102      	bne.n	404048 <__sflush_r+0x130>
  404042:	f8c8 6000 	str.w	r6, [r8]
  404046:	e7c3      	b.n	403fd0 <__sflush_r+0xb8>
  404048:	89ab      	ldrh	r3, [r5, #12]
  40404a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40404e:	81ab      	strh	r3, [r5, #12]
  404050:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404054:	20400001 	.word	0x20400001

00404058 <_fflush_r>:
  404058:	b538      	push	{r3, r4, r5, lr}
  40405a:	460d      	mov	r5, r1
  40405c:	4604      	mov	r4, r0
  40405e:	b108      	cbz	r0, 404064 <_fflush_r+0xc>
  404060:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404062:	b1bb      	cbz	r3, 404094 <_fflush_r+0x3c>
  404064:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  404068:	b188      	cbz	r0, 40408e <_fflush_r+0x36>
  40406a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  40406c:	07db      	lsls	r3, r3, #31
  40406e:	d401      	bmi.n	404074 <_fflush_r+0x1c>
  404070:	0581      	lsls	r1, r0, #22
  404072:	d517      	bpl.n	4040a4 <_fflush_r+0x4c>
  404074:	4620      	mov	r0, r4
  404076:	4629      	mov	r1, r5
  404078:	f7ff ff4e 	bl	403f18 <__sflush_r>
  40407c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  40407e:	07da      	lsls	r2, r3, #31
  404080:	4604      	mov	r4, r0
  404082:	d402      	bmi.n	40408a <_fflush_r+0x32>
  404084:	89ab      	ldrh	r3, [r5, #12]
  404086:	059b      	lsls	r3, r3, #22
  404088:	d507      	bpl.n	40409a <_fflush_r+0x42>
  40408a:	4620      	mov	r0, r4
  40408c:	bd38      	pop	{r3, r4, r5, pc}
  40408e:	4604      	mov	r4, r0
  404090:	4620      	mov	r0, r4
  404092:	bd38      	pop	{r3, r4, r5, pc}
  404094:	f000 f838 	bl	404108 <__sinit>
  404098:	e7e4      	b.n	404064 <_fflush_r+0xc>
  40409a:	6da8      	ldr	r0, [r5, #88]	; 0x58
  40409c:	f000 fbf6 	bl	40488c <__retarget_lock_release_recursive>
  4040a0:	4620      	mov	r0, r4
  4040a2:	bd38      	pop	{r3, r4, r5, pc}
  4040a4:	6da8      	ldr	r0, [r5, #88]	; 0x58
  4040a6:	f000 fbef 	bl	404888 <__retarget_lock_acquire_recursive>
  4040aa:	e7e3      	b.n	404074 <_fflush_r+0x1c>

004040ac <_cleanup_r>:
  4040ac:	4901      	ldr	r1, [pc, #4]	; (4040b4 <_cleanup_r+0x8>)
  4040ae:	f000 bbaf 	b.w	404810 <_fwalk_reent>
  4040b2:	bf00      	nop
  4040b4:	004056cd 	.word	0x004056cd

004040b8 <std.isra.0>:
  4040b8:	b510      	push	{r4, lr}
  4040ba:	2300      	movs	r3, #0
  4040bc:	4604      	mov	r4, r0
  4040be:	8181      	strh	r1, [r0, #12]
  4040c0:	81c2      	strh	r2, [r0, #14]
  4040c2:	6003      	str	r3, [r0, #0]
  4040c4:	6043      	str	r3, [r0, #4]
  4040c6:	6083      	str	r3, [r0, #8]
  4040c8:	6643      	str	r3, [r0, #100]	; 0x64
  4040ca:	6103      	str	r3, [r0, #16]
  4040cc:	6143      	str	r3, [r0, #20]
  4040ce:	6183      	str	r3, [r0, #24]
  4040d0:	4619      	mov	r1, r3
  4040d2:	2208      	movs	r2, #8
  4040d4:	305c      	adds	r0, #92	; 0x5c
  4040d6:	f7fe fdf5 	bl	402cc4 <memset>
  4040da:	4807      	ldr	r0, [pc, #28]	; (4040f8 <std.isra.0+0x40>)
  4040dc:	4907      	ldr	r1, [pc, #28]	; (4040fc <std.isra.0+0x44>)
  4040de:	4a08      	ldr	r2, [pc, #32]	; (404100 <std.isra.0+0x48>)
  4040e0:	4b08      	ldr	r3, [pc, #32]	; (404104 <std.isra.0+0x4c>)
  4040e2:	6220      	str	r0, [r4, #32]
  4040e4:	61e4      	str	r4, [r4, #28]
  4040e6:	6261      	str	r1, [r4, #36]	; 0x24
  4040e8:	62a2      	str	r2, [r4, #40]	; 0x28
  4040ea:	62e3      	str	r3, [r4, #44]	; 0x2c
  4040ec:	f104 0058 	add.w	r0, r4, #88	; 0x58
  4040f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4040f4:	f000 bbc4 	b.w	404880 <__retarget_lock_init_recursive>
  4040f8:	00405411 	.word	0x00405411
  4040fc:	00405435 	.word	0x00405435
  404100:	00405471 	.word	0x00405471
  404104:	00405491 	.word	0x00405491

00404108 <__sinit>:
  404108:	b510      	push	{r4, lr}
  40410a:	4604      	mov	r4, r0
  40410c:	4812      	ldr	r0, [pc, #72]	; (404158 <__sinit+0x50>)
  40410e:	f000 fbbb 	bl	404888 <__retarget_lock_acquire_recursive>
  404112:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  404114:	b9d2      	cbnz	r2, 40414c <__sinit+0x44>
  404116:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  40411a:	4810      	ldr	r0, [pc, #64]	; (40415c <__sinit+0x54>)
  40411c:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  404120:	2103      	movs	r1, #3
  404122:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  404126:	63e0      	str	r0, [r4, #60]	; 0x3c
  404128:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  40412c:	6860      	ldr	r0, [r4, #4]
  40412e:	2104      	movs	r1, #4
  404130:	f7ff ffc2 	bl	4040b8 <std.isra.0>
  404134:	2201      	movs	r2, #1
  404136:	2109      	movs	r1, #9
  404138:	68a0      	ldr	r0, [r4, #8]
  40413a:	f7ff ffbd 	bl	4040b8 <std.isra.0>
  40413e:	2202      	movs	r2, #2
  404140:	2112      	movs	r1, #18
  404142:	68e0      	ldr	r0, [r4, #12]
  404144:	f7ff ffb8 	bl	4040b8 <std.isra.0>
  404148:	2301      	movs	r3, #1
  40414a:	63a3      	str	r3, [r4, #56]	; 0x38
  40414c:	4802      	ldr	r0, [pc, #8]	; (404158 <__sinit+0x50>)
  40414e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  404152:	f000 bb9b 	b.w	40488c <__retarget_lock_release_recursive>
  404156:	bf00      	nop
  404158:	204084e0 	.word	0x204084e0
  40415c:	004040ad 	.word	0x004040ad

00404160 <__sfp_lock_acquire>:
  404160:	4801      	ldr	r0, [pc, #4]	; (404168 <__sfp_lock_acquire+0x8>)
  404162:	f000 bb91 	b.w	404888 <__retarget_lock_acquire_recursive>
  404166:	bf00      	nop
  404168:	204084f4 	.word	0x204084f4

0040416c <__sfp_lock_release>:
  40416c:	4801      	ldr	r0, [pc, #4]	; (404174 <__sfp_lock_release+0x8>)
  40416e:	f000 bb8d 	b.w	40488c <__retarget_lock_release_recursive>
  404172:	bf00      	nop
  404174:	204084f4 	.word	0x204084f4

00404178 <__libc_fini_array>:
  404178:	b538      	push	{r3, r4, r5, lr}
  40417a:	4c0a      	ldr	r4, [pc, #40]	; (4041a4 <__libc_fini_array+0x2c>)
  40417c:	4d0a      	ldr	r5, [pc, #40]	; (4041a8 <__libc_fini_array+0x30>)
  40417e:	1b64      	subs	r4, r4, r5
  404180:	10a4      	asrs	r4, r4, #2
  404182:	d00a      	beq.n	40419a <__libc_fini_array+0x22>
  404184:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  404188:	3b01      	subs	r3, #1
  40418a:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40418e:	3c01      	subs	r4, #1
  404190:	f855 3904 	ldr.w	r3, [r5], #-4
  404194:	4798      	blx	r3
  404196:	2c00      	cmp	r4, #0
  404198:	d1f9      	bne.n	40418e <__libc_fini_array+0x16>
  40419a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40419e:	f001 bd9f 	b.w	405ce0 <_fini>
  4041a2:	bf00      	nop
  4041a4:	00405cf0 	.word	0x00405cf0
  4041a8:	00405cec 	.word	0x00405cec

004041ac <__fputwc>:
  4041ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4041b0:	b082      	sub	sp, #8
  4041b2:	4680      	mov	r8, r0
  4041b4:	4689      	mov	r9, r1
  4041b6:	4614      	mov	r4, r2
  4041b8:	f000 fb54 	bl	404864 <__locale_mb_cur_max>
  4041bc:	2801      	cmp	r0, #1
  4041be:	d036      	beq.n	40422e <__fputwc+0x82>
  4041c0:	464a      	mov	r2, r9
  4041c2:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  4041c6:	a901      	add	r1, sp, #4
  4041c8:	4640      	mov	r0, r8
  4041ca:	f001 f9bd 	bl	405548 <_wcrtomb_r>
  4041ce:	1c42      	adds	r2, r0, #1
  4041d0:	4606      	mov	r6, r0
  4041d2:	d025      	beq.n	404220 <__fputwc+0x74>
  4041d4:	b3a8      	cbz	r0, 404242 <__fputwc+0x96>
  4041d6:	f89d e004 	ldrb.w	lr, [sp, #4]
  4041da:	2500      	movs	r5, #0
  4041dc:	f10d 0a04 	add.w	sl, sp, #4
  4041e0:	e009      	b.n	4041f6 <__fputwc+0x4a>
  4041e2:	6823      	ldr	r3, [r4, #0]
  4041e4:	1c5a      	adds	r2, r3, #1
  4041e6:	6022      	str	r2, [r4, #0]
  4041e8:	f883 e000 	strb.w	lr, [r3]
  4041ec:	3501      	adds	r5, #1
  4041ee:	42b5      	cmp	r5, r6
  4041f0:	d227      	bcs.n	404242 <__fputwc+0x96>
  4041f2:	f815 e00a 	ldrb.w	lr, [r5, sl]
  4041f6:	68a3      	ldr	r3, [r4, #8]
  4041f8:	3b01      	subs	r3, #1
  4041fa:	2b00      	cmp	r3, #0
  4041fc:	60a3      	str	r3, [r4, #8]
  4041fe:	daf0      	bge.n	4041e2 <__fputwc+0x36>
  404200:	69a7      	ldr	r7, [r4, #24]
  404202:	42bb      	cmp	r3, r7
  404204:	4671      	mov	r1, lr
  404206:	4622      	mov	r2, r4
  404208:	4640      	mov	r0, r8
  40420a:	db02      	blt.n	404212 <__fputwc+0x66>
  40420c:	f1be 0f0a 	cmp.w	lr, #10
  404210:	d1e7      	bne.n	4041e2 <__fputwc+0x36>
  404212:	f001 f941 	bl	405498 <__swbuf_r>
  404216:	1c43      	adds	r3, r0, #1
  404218:	d1e8      	bne.n	4041ec <__fputwc+0x40>
  40421a:	b002      	add	sp, #8
  40421c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404220:	89a3      	ldrh	r3, [r4, #12]
  404222:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404226:	81a3      	strh	r3, [r4, #12]
  404228:	b002      	add	sp, #8
  40422a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40422e:	f109 33ff 	add.w	r3, r9, #4294967295
  404232:	2bfe      	cmp	r3, #254	; 0xfe
  404234:	d8c4      	bhi.n	4041c0 <__fputwc+0x14>
  404236:	fa5f fe89 	uxtb.w	lr, r9
  40423a:	4606      	mov	r6, r0
  40423c:	f88d e004 	strb.w	lr, [sp, #4]
  404240:	e7cb      	b.n	4041da <__fputwc+0x2e>
  404242:	4648      	mov	r0, r9
  404244:	b002      	add	sp, #8
  404246:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40424a:	bf00      	nop

0040424c <_fputwc_r>:
  40424c:	b530      	push	{r4, r5, lr}
  40424e:	6e53      	ldr	r3, [r2, #100]	; 0x64
  404250:	f013 0f01 	tst.w	r3, #1
  404254:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  404258:	4614      	mov	r4, r2
  40425a:	b083      	sub	sp, #12
  40425c:	4605      	mov	r5, r0
  40425e:	b29a      	uxth	r2, r3
  404260:	d101      	bne.n	404266 <_fputwc_r+0x1a>
  404262:	0590      	lsls	r0, r2, #22
  404264:	d51c      	bpl.n	4042a0 <_fputwc_r+0x54>
  404266:	0490      	lsls	r0, r2, #18
  404268:	d406      	bmi.n	404278 <_fputwc_r+0x2c>
  40426a:	6e62      	ldr	r2, [r4, #100]	; 0x64
  40426c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  404270:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  404274:	81a3      	strh	r3, [r4, #12]
  404276:	6662      	str	r2, [r4, #100]	; 0x64
  404278:	4628      	mov	r0, r5
  40427a:	4622      	mov	r2, r4
  40427c:	f7ff ff96 	bl	4041ac <__fputwc>
  404280:	6e63      	ldr	r3, [r4, #100]	; 0x64
  404282:	07da      	lsls	r2, r3, #31
  404284:	4605      	mov	r5, r0
  404286:	d402      	bmi.n	40428e <_fputwc_r+0x42>
  404288:	89a3      	ldrh	r3, [r4, #12]
  40428a:	059b      	lsls	r3, r3, #22
  40428c:	d502      	bpl.n	404294 <_fputwc_r+0x48>
  40428e:	4628      	mov	r0, r5
  404290:	b003      	add	sp, #12
  404292:	bd30      	pop	{r4, r5, pc}
  404294:	6da0      	ldr	r0, [r4, #88]	; 0x58
  404296:	f000 faf9 	bl	40488c <__retarget_lock_release_recursive>
  40429a:	4628      	mov	r0, r5
  40429c:	b003      	add	sp, #12
  40429e:	bd30      	pop	{r4, r5, pc}
  4042a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4042a2:	9101      	str	r1, [sp, #4]
  4042a4:	f000 faf0 	bl	404888 <__retarget_lock_acquire_recursive>
  4042a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4042ac:	9901      	ldr	r1, [sp, #4]
  4042ae:	b29a      	uxth	r2, r3
  4042b0:	e7d9      	b.n	404266 <_fputwc_r+0x1a>
  4042b2:	bf00      	nop

004042b4 <_malloc_trim_r>:
  4042b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4042b6:	4f24      	ldr	r7, [pc, #144]	; (404348 <_malloc_trim_r+0x94>)
  4042b8:	460c      	mov	r4, r1
  4042ba:	4606      	mov	r6, r0
  4042bc:	f000 fee4 	bl	405088 <__malloc_lock>
  4042c0:	68bb      	ldr	r3, [r7, #8]
  4042c2:	685d      	ldr	r5, [r3, #4]
  4042c4:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  4042c8:	310f      	adds	r1, #15
  4042ca:	f025 0503 	bic.w	r5, r5, #3
  4042ce:	4429      	add	r1, r5
  4042d0:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  4042d4:	f021 010f 	bic.w	r1, r1, #15
  4042d8:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4042dc:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4042e0:	db07      	blt.n	4042f2 <_malloc_trim_r+0x3e>
  4042e2:	2100      	movs	r1, #0
  4042e4:	4630      	mov	r0, r6
  4042e6:	f001 f881 	bl	4053ec <_sbrk_r>
  4042ea:	68bb      	ldr	r3, [r7, #8]
  4042ec:	442b      	add	r3, r5
  4042ee:	4298      	cmp	r0, r3
  4042f0:	d004      	beq.n	4042fc <_malloc_trim_r+0x48>
  4042f2:	4630      	mov	r0, r6
  4042f4:	f000 fece 	bl	405094 <__malloc_unlock>
  4042f8:	2000      	movs	r0, #0
  4042fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4042fc:	4261      	negs	r1, r4
  4042fe:	4630      	mov	r0, r6
  404300:	f001 f874 	bl	4053ec <_sbrk_r>
  404304:	3001      	adds	r0, #1
  404306:	d00d      	beq.n	404324 <_malloc_trim_r+0x70>
  404308:	4b10      	ldr	r3, [pc, #64]	; (40434c <_malloc_trim_r+0x98>)
  40430a:	68ba      	ldr	r2, [r7, #8]
  40430c:	6819      	ldr	r1, [r3, #0]
  40430e:	1b2d      	subs	r5, r5, r4
  404310:	f045 0501 	orr.w	r5, r5, #1
  404314:	4630      	mov	r0, r6
  404316:	1b09      	subs	r1, r1, r4
  404318:	6055      	str	r5, [r2, #4]
  40431a:	6019      	str	r1, [r3, #0]
  40431c:	f000 feba 	bl	405094 <__malloc_unlock>
  404320:	2001      	movs	r0, #1
  404322:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404324:	2100      	movs	r1, #0
  404326:	4630      	mov	r0, r6
  404328:	f001 f860 	bl	4053ec <_sbrk_r>
  40432c:	68ba      	ldr	r2, [r7, #8]
  40432e:	1a83      	subs	r3, r0, r2
  404330:	2b0f      	cmp	r3, #15
  404332:	ddde      	ble.n	4042f2 <_malloc_trim_r+0x3e>
  404334:	4c06      	ldr	r4, [pc, #24]	; (404350 <_malloc_trim_r+0x9c>)
  404336:	4905      	ldr	r1, [pc, #20]	; (40434c <_malloc_trim_r+0x98>)
  404338:	6824      	ldr	r4, [r4, #0]
  40433a:	f043 0301 	orr.w	r3, r3, #1
  40433e:	1b00      	subs	r0, r0, r4
  404340:	6053      	str	r3, [r2, #4]
  404342:	6008      	str	r0, [r1, #0]
  404344:	e7d5      	b.n	4042f2 <_malloc_trim_r+0x3e>
  404346:	bf00      	nop
  404348:	204005c0 	.word	0x204005c0
  40434c:	2040729c 	.word	0x2040729c
  404350:	204009c8 	.word	0x204009c8

00404354 <_free_r>:
  404354:	2900      	cmp	r1, #0
  404356:	d044      	beq.n	4043e2 <_free_r+0x8e>
  404358:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40435c:	460d      	mov	r5, r1
  40435e:	4680      	mov	r8, r0
  404360:	f000 fe92 	bl	405088 <__malloc_lock>
  404364:	f855 7c04 	ldr.w	r7, [r5, #-4]
  404368:	4969      	ldr	r1, [pc, #420]	; (404510 <_free_r+0x1bc>)
  40436a:	f027 0301 	bic.w	r3, r7, #1
  40436e:	f1a5 0408 	sub.w	r4, r5, #8
  404372:	18e2      	adds	r2, r4, r3
  404374:	688e      	ldr	r6, [r1, #8]
  404376:	6850      	ldr	r0, [r2, #4]
  404378:	42b2      	cmp	r2, r6
  40437a:	f020 0003 	bic.w	r0, r0, #3
  40437e:	d05e      	beq.n	40443e <_free_r+0xea>
  404380:	07fe      	lsls	r6, r7, #31
  404382:	6050      	str	r0, [r2, #4]
  404384:	d40b      	bmi.n	40439e <_free_r+0x4a>
  404386:	f855 7c08 	ldr.w	r7, [r5, #-8]
  40438a:	1be4      	subs	r4, r4, r7
  40438c:	f101 0e08 	add.w	lr, r1, #8
  404390:	68a5      	ldr	r5, [r4, #8]
  404392:	4575      	cmp	r5, lr
  404394:	443b      	add	r3, r7
  404396:	d06d      	beq.n	404474 <_free_r+0x120>
  404398:	68e7      	ldr	r7, [r4, #12]
  40439a:	60ef      	str	r7, [r5, #12]
  40439c:	60bd      	str	r5, [r7, #8]
  40439e:	1815      	adds	r5, r2, r0
  4043a0:	686d      	ldr	r5, [r5, #4]
  4043a2:	07ed      	lsls	r5, r5, #31
  4043a4:	d53e      	bpl.n	404424 <_free_r+0xd0>
  4043a6:	f043 0201 	orr.w	r2, r3, #1
  4043aa:	6062      	str	r2, [r4, #4]
  4043ac:	50e3      	str	r3, [r4, r3]
  4043ae:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4043b2:	d217      	bcs.n	4043e4 <_free_r+0x90>
  4043b4:	08db      	lsrs	r3, r3, #3
  4043b6:	1c58      	adds	r0, r3, #1
  4043b8:	109a      	asrs	r2, r3, #2
  4043ba:	684d      	ldr	r5, [r1, #4]
  4043bc:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  4043c0:	60a7      	str	r7, [r4, #8]
  4043c2:	2301      	movs	r3, #1
  4043c4:	4093      	lsls	r3, r2
  4043c6:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  4043ca:	432b      	orrs	r3, r5
  4043cc:	3a08      	subs	r2, #8
  4043ce:	60e2      	str	r2, [r4, #12]
  4043d0:	604b      	str	r3, [r1, #4]
  4043d2:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  4043d6:	60fc      	str	r4, [r7, #12]
  4043d8:	4640      	mov	r0, r8
  4043da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4043de:	f000 be59 	b.w	405094 <__malloc_unlock>
  4043e2:	4770      	bx	lr
  4043e4:	0a5a      	lsrs	r2, r3, #9
  4043e6:	2a04      	cmp	r2, #4
  4043e8:	d852      	bhi.n	404490 <_free_r+0x13c>
  4043ea:	099a      	lsrs	r2, r3, #6
  4043ec:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4043f0:	00ff      	lsls	r7, r7, #3
  4043f2:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4043f6:	19c8      	adds	r0, r1, r7
  4043f8:	59ca      	ldr	r2, [r1, r7]
  4043fa:	3808      	subs	r0, #8
  4043fc:	4290      	cmp	r0, r2
  4043fe:	d04f      	beq.n	4044a0 <_free_r+0x14c>
  404400:	6851      	ldr	r1, [r2, #4]
  404402:	f021 0103 	bic.w	r1, r1, #3
  404406:	428b      	cmp	r3, r1
  404408:	d232      	bcs.n	404470 <_free_r+0x11c>
  40440a:	6892      	ldr	r2, [r2, #8]
  40440c:	4290      	cmp	r0, r2
  40440e:	d1f7      	bne.n	404400 <_free_r+0xac>
  404410:	68c3      	ldr	r3, [r0, #12]
  404412:	60a0      	str	r0, [r4, #8]
  404414:	60e3      	str	r3, [r4, #12]
  404416:	609c      	str	r4, [r3, #8]
  404418:	60c4      	str	r4, [r0, #12]
  40441a:	4640      	mov	r0, r8
  40441c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404420:	f000 be38 	b.w	405094 <__malloc_unlock>
  404424:	6895      	ldr	r5, [r2, #8]
  404426:	4f3b      	ldr	r7, [pc, #236]	; (404514 <_free_r+0x1c0>)
  404428:	42bd      	cmp	r5, r7
  40442a:	4403      	add	r3, r0
  40442c:	d040      	beq.n	4044b0 <_free_r+0x15c>
  40442e:	68d0      	ldr	r0, [r2, #12]
  404430:	60e8      	str	r0, [r5, #12]
  404432:	f043 0201 	orr.w	r2, r3, #1
  404436:	6085      	str	r5, [r0, #8]
  404438:	6062      	str	r2, [r4, #4]
  40443a:	50e3      	str	r3, [r4, r3]
  40443c:	e7b7      	b.n	4043ae <_free_r+0x5a>
  40443e:	07ff      	lsls	r7, r7, #31
  404440:	4403      	add	r3, r0
  404442:	d407      	bmi.n	404454 <_free_r+0x100>
  404444:	f855 2c08 	ldr.w	r2, [r5, #-8]
  404448:	1aa4      	subs	r4, r4, r2
  40444a:	4413      	add	r3, r2
  40444c:	68a0      	ldr	r0, [r4, #8]
  40444e:	68e2      	ldr	r2, [r4, #12]
  404450:	60c2      	str	r2, [r0, #12]
  404452:	6090      	str	r0, [r2, #8]
  404454:	4a30      	ldr	r2, [pc, #192]	; (404518 <_free_r+0x1c4>)
  404456:	6812      	ldr	r2, [r2, #0]
  404458:	f043 0001 	orr.w	r0, r3, #1
  40445c:	4293      	cmp	r3, r2
  40445e:	6060      	str	r0, [r4, #4]
  404460:	608c      	str	r4, [r1, #8]
  404462:	d3b9      	bcc.n	4043d8 <_free_r+0x84>
  404464:	4b2d      	ldr	r3, [pc, #180]	; (40451c <_free_r+0x1c8>)
  404466:	4640      	mov	r0, r8
  404468:	6819      	ldr	r1, [r3, #0]
  40446a:	f7ff ff23 	bl	4042b4 <_malloc_trim_r>
  40446e:	e7b3      	b.n	4043d8 <_free_r+0x84>
  404470:	4610      	mov	r0, r2
  404472:	e7cd      	b.n	404410 <_free_r+0xbc>
  404474:	1811      	adds	r1, r2, r0
  404476:	6849      	ldr	r1, [r1, #4]
  404478:	07c9      	lsls	r1, r1, #31
  40447a:	d444      	bmi.n	404506 <_free_r+0x1b2>
  40447c:	6891      	ldr	r1, [r2, #8]
  40447e:	68d2      	ldr	r2, [r2, #12]
  404480:	60ca      	str	r2, [r1, #12]
  404482:	4403      	add	r3, r0
  404484:	f043 0001 	orr.w	r0, r3, #1
  404488:	6091      	str	r1, [r2, #8]
  40448a:	6060      	str	r0, [r4, #4]
  40448c:	50e3      	str	r3, [r4, r3]
  40448e:	e7a3      	b.n	4043d8 <_free_r+0x84>
  404490:	2a14      	cmp	r2, #20
  404492:	d816      	bhi.n	4044c2 <_free_r+0x16e>
  404494:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  404498:	00ff      	lsls	r7, r7, #3
  40449a:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  40449e:	e7aa      	b.n	4043f6 <_free_r+0xa2>
  4044a0:	10aa      	asrs	r2, r5, #2
  4044a2:	2301      	movs	r3, #1
  4044a4:	684d      	ldr	r5, [r1, #4]
  4044a6:	4093      	lsls	r3, r2
  4044a8:	432b      	orrs	r3, r5
  4044aa:	604b      	str	r3, [r1, #4]
  4044ac:	4603      	mov	r3, r0
  4044ae:	e7b0      	b.n	404412 <_free_r+0xbe>
  4044b0:	f043 0201 	orr.w	r2, r3, #1
  4044b4:	614c      	str	r4, [r1, #20]
  4044b6:	610c      	str	r4, [r1, #16]
  4044b8:	60e5      	str	r5, [r4, #12]
  4044ba:	60a5      	str	r5, [r4, #8]
  4044bc:	6062      	str	r2, [r4, #4]
  4044be:	50e3      	str	r3, [r4, r3]
  4044c0:	e78a      	b.n	4043d8 <_free_r+0x84>
  4044c2:	2a54      	cmp	r2, #84	; 0x54
  4044c4:	d806      	bhi.n	4044d4 <_free_r+0x180>
  4044c6:	0b1a      	lsrs	r2, r3, #12
  4044c8:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  4044cc:	00ff      	lsls	r7, r7, #3
  4044ce:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  4044d2:	e790      	b.n	4043f6 <_free_r+0xa2>
  4044d4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4044d8:	d806      	bhi.n	4044e8 <_free_r+0x194>
  4044da:	0bda      	lsrs	r2, r3, #15
  4044dc:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4044e0:	00ff      	lsls	r7, r7, #3
  4044e2:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4044e6:	e786      	b.n	4043f6 <_free_r+0xa2>
  4044e8:	f240 5054 	movw	r0, #1364	; 0x554
  4044ec:	4282      	cmp	r2, r0
  4044ee:	d806      	bhi.n	4044fe <_free_r+0x1aa>
  4044f0:	0c9a      	lsrs	r2, r3, #18
  4044f2:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4044f6:	00ff      	lsls	r7, r7, #3
  4044f8:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4044fc:	e77b      	b.n	4043f6 <_free_r+0xa2>
  4044fe:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  404502:	257e      	movs	r5, #126	; 0x7e
  404504:	e777      	b.n	4043f6 <_free_r+0xa2>
  404506:	f043 0101 	orr.w	r1, r3, #1
  40450a:	6061      	str	r1, [r4, #4]
  40450c:	6013      	str	r3, [r2, #0]
  40450e:	e763      	b.n	4043d8 <_free_r+0x84>
  404510:	204005c0 	.word	0x204005c0
  404514:	204005c8 	.word	0x204005c8
  404518:	204009cc 	.word	0x204009cc
  40451c:	204072cc 	.word	0x204072cc

00404520 <__sfvwrite_r>:
  404520:	6893      	ldr	r3, [r2, #8]
  404522:	2b00      	cmp	r3, #0
  404524:	d073      	beq.n	40460e <__sfvwrite_r+0xee>
  404526:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40452a:	898b      	ldrh	r3, [r1, #12]
  40452c:	b083      	sub	sp, #12
  40452e:	460c      	mov	r4, r1
  404530:	0719      	lsls	r1, r3, #28
  404532:	9000      	str	r0, [sp, #0]
  404534:	4616      	mov	r6, r2
  404536:	d526      	bpl.n	404586 <__sfvwrite_r+0x66>
  404538:	6922      	ldr	r2, [r4, #16]
  40453a:	b322      	cbz	r2, 404586 <__sfvwrite_r+0x66>
  40453c:	f013 0002 	ands.w	r0, r3, #2
  404540:	6835      	ldr	r5, [r6, #0]
  404542:	d02c      	beq.n	40459e <__sfvwrite_r+0x7e>
  404544:	f04f 0900 	mov.w	r9, #0
  404548:	4fb0      	ldr	r7, [pc, #704]	; (40480c <__sfvwrite_r+0x2ec>)
  40454a:	46c8      	mov	r8, r9
  40454c:	46b2      	mov	sl, r6
  40454e:	45b8      	cmp	r8, r7
  404550:	4643      	mov	r3, r8
  404552:	464a      	mov	r2, r9
  404554:	bf28      	it	cs
  404556:	463b      	movcs	r3, r7
  404558:	9800      	ldr	r0, [sp, #0]
  40455a:	f1b8 0f00 	cmp.w	r8, #0
  40455e:	d050      	beq.n	404602 <__sfvwrite_r+0xe2>
  404560:	69e1      	ldr	r1, [r4, #28]
  404562:	6a66      	ldr	r6, [r4, #36]	; 0x24
  404564:	47b0      	blx	r6
  404566:	2800      	cmp	r0, #0
  404568:	dd58      	ble.n	40461c <__sfvwrite_r+0xfc>
  40456a:	f8da 3008 	ldr.w	r3, [sl, #8]
  40456e:	1a1b      	subs	r3, r3, r0
  404570:	4481      	add	r9, r0
  404572:	eba8 0800 	sub.w	r8, r8, r0
  404576:	f8ca 3008 	str.w	r3, [sl, #8]
  40457a:	2b00      	cmp	r3, #0
  40457c:	d1e7      	bne.n	40454e <__sfvwrite_r+0x2e>
  40457e:	2000      	movs	r0, #0
  404580:	b003      	add	sp, #12
  404582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404586:	4621      	mov	r1, r4
  404588:	9800      	ldr	r0, [sp, #0]
  40458a:	f7ff fc51 	bl	403e30 <__swsetup_r>
  40458e:	2800      	cmp	r0, #0
  404590:	f040 8133 	bne.w	4047fa <__sfvwrite_r+0x2da>
  404594:	89a3      	ldrh	r3, [r4, #12]
  404596:	6835      	ldr	r5, [r6, #0]
  404598:	f013 0002 	ands.w	r0, r3, #2
  40459c:	d1d2      	bne.n	404544 <__sfvwrite_r+0x24>
  40459e:	f013 0901 	ands.w	r9, r3, #1
  4045a2:	d145      	bne.n	404630 <__sfvwrite_r+0x110>
  4045a4:	464f      	mov	r7, r9
  4045a6:	9601      	str	r6, [sp, #4]
  4045a8:	b337      	cbz	r7, 4045f8 <__sfvwrite_r+0xd8>
  4045aa:	059a      	lsls	r2, r3, #22
  4045ac:	f8d4 8008 	ldr.w	r8, [r4, #8]
  4045b0:	f140 8083 	bpl.w	4046ba <__sfvwrite_r+0x19a>
  4045b4:	4547      	cmp	r7, r8
  4045b6:	46c3      	mov	fp, r8
  4045b8:	f0c0 80ab 	bcc.w	404712 <__sfvwrite_r+0x1f2>
  4045bc:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4045c0:	f040 80ac 	bne.w	40471c <__sfvwrite_r+0x1fc>
  4045c4:	6820      	ldr	r0, [r4, #0]
  4045c6:	46ba      	mov	sl, r7
  4045c8:	465a      	mov	r2, fp
  4045ca:	4649      	mov	r1, r9
  4045cc:	f000 fcf8 	bl	404fc0 <memmove>
  4045d0:	68a2      	ldr	r2, [r4, #8]
  4045d2:	6823      	ldr	r3, [r4, #0]
  4045d4:	eba2 0208 	sub.w	r2, r2, r8
  4045d8:	445b      	add	r3, fp
  4045da:	60a2      	str	r2, [r4, #8]
  4045dc:	6023      	str	r3, [r4, #0]
  4045de:	9a01      	ldr	r2, [sp, #4]
  4045e0:	6893      	ldr	r3, [r2, #8]
  4045e2:	eba3 030a 	sub.w	r3, r3, sl
  4045e6:	44d1      	add	r9, sl
  4045e8:	eba7 070a 	sub.w	r7, r7, sl
  4045ec:	6093      	str	r3, [r2, #8]
  4045ee:	2b00      	cmp	r3, #0
  4045f0:	d0c5      	beq.n	40457e <__sfvwrite_r+0x5e>
  4045f2:	89a3      	ldrh	r3, [r4, #12]
  4045f4:	2f00      	cmp	r7, #0
  4045f6:	d1d8      	bne.n	4045aa <__sfvwrite_r+0x8a>
  4045f8:	f8d5 9000 	ldr.w	r9, [r5]
  4045fc:	686f      	ldr	r7, [r5, #4]
  4045fe:	3508      	adds	r5, #8
  404600:	e7d2      	b.n	4045a8 <__sfvwrite_r+0x88>
  404602:	f8d5 9000 	ldr.w	r9, [r5]
  404606:	f8d5 8004 	ldr.w	r8, [r5, #4]
  40460a:	3508      	adds	r5, #8
  40460c:	e79f      	b.n	40454e <__sfvwrite_r+0x2e>
  40460e:	2000      	movs	r0, #0
  404610:	4770      	bx	lr
  404612:	4621      	mov	r1, r4
  404614:	9800      	ldr	r0, [sp, #0]
  404616:	f7ff fd1f 	bl	404058 <_fflush_r>
  40461a:	b370      	cbz	r0, 40467a <__sfvwrite_r+0x15a>
  40461c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404620:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404624:	f04f 30ff 	mov.w	r0, #4294967295
  404628:	81a3      	strh	r3, [r4, #12]
  40462a:	b003      	add	sp, #12
  40462c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404630:	4681      	mov	r9, r0
  404632:	4633      	mov	r3, r6
  404634:	464e      	mov	r6, r9
  404636:	46a8      	mov	r8, r5
  404638:	469a      	mov	sl, r3
  40463a:	464d      	mov	r5, r9
  40463c:	b34e      	cbz	r6, 404692 <__sfvwrite_r+0x172>
  40463e:	b380      	cbz	r0, 4046a2 <__sfvwrite_r+0x182>
  404640:	6820      	ldr	r0, [r4, #0]
  404642:	6923      	ldr	r3, [r4, #16]
  404644:	6962      	ldr	r2, [r4, #20]
  404646:	45b1      	cmp	r9, r6
  404648:	46cb      	mov	fp, r9
  40464a:	bf28      	it	cs
  40464c:	46b3      	movcs	fp, r6
  40464e:	4298      	cmp	r0, r3
  404650:	465f      	mov	r7, fp
  404652:	d904      	bls.n	40465e <__sfvwrite_r+0x13e>
  404654:	68a3      	ldr	r3, [r4, #8]
  404656:	4413      	add	r3, r2
  404658:	459b      	cmp	fp, r3
  40465a:	f300 80a6 	bgt.w	4047aa <__sfvwrite_r+0x28a>
  40465e:	4593      	cmp	fp, r2
  404660:	db4b      	blt.n	4046fa <__sfvwrite_r+0x1da>
  404662:	4613      	mov	r3, r2
  404664:	6a67      	ldr	r7, [r4, #36]	; 0x24
  404666:	69e1      	ldr	r1, [r4, #28]
  404668:	9800      	ldr	r0, [sp, #0]
  40466a:	462a      	mov	r2, r5
  40466c:	47b8      	blx	r7
  40466e:	1e07      	subs	r7, r0, #0
  404670:	ddd4      	ble.n	40461c <__sfvwrite_r+0xfc>
  404672:	ebb9 0907 	subs.w	r9, r9, r7
  404676:	d0cc      	beq.n	404612 <__sfvwrite_r+0xf2>
  404678:	2001      	movs	r0, #1
  40467a:	f8da 3008 	ldr.w	r3, [sl, #8]
  40467e:	1bdb      	subs	r3, r3, r7
  404680:	443d      	add	r5, r7
  404682:	1bf6      	subs	r6, r6, r7
  404684:	f8ca 3008 	str.w	r3, [sl, #8]
  404688:	2b00      	cmp	r3, #0
  40468a:	f43f af78 	beq.w	40457e <__sfvwrite_r+0x5e>
  40468e:	2e00      	cmp	r6, #0
  404690:	d1d5      	bne.n	40463e <__sfvwrite_r+0x11e>
  404692:	f108 0308 	add.w	r3, r8, #8
  404696:	e913 0060 	ldmdb	r3, {r5, r6}
  40469a:	4698      	mov	r8, r3
  40469c:	3308      	adds	r3, #8
  40469e:	2e00      	cmp	r6, #0
  4046a0:	d0f9      	beq.n	404696 <__sfvwrite_r+0x176>
  4046a2:	4632      	mov	r2, r6
  4046a4:	210a      	movs	r1, #10
  4046a6:	4628      	mov	r0, r5
  4046a8:	f000 fc3a 	bl	404f20 <memchr>
  4046ac:	2800      	cmp	r0, #0
  4046ae:	f000 80a1 	beq.w	4047f4 <__sfvwrite_r+0x2d4>
  4046b2:	3001      	adds	r0, #1
  4046b4:	eba0 0905 	sub.w	r9, r0, r5
  4046b8:	e7c2      	b.n	404640 <__sfvwrite_r+0x120>
  4046ba:	6820      	ldr	r0, [r4, #0]
  4046bc:	6923      	ldr	r3, [r4, #16]
  4046be:	4298      	cmp	r0, r3
  4046c0:	d802      	bhi.n	4046c8 <__sfvwrite_r+0x1a8>
  4046c2:	6963      	ldr	r3, [r4, #20]
  4046c4:	429f      	cmp	r7, r3
  4046c6:	d25d      	bcs.n	404784 <__sfvwrite_r+0x264>
  4046c8:	45b8      	cmp	r8, r7
  4046ca:	bf28      	it	cs
  4046cc:	46b8      	movcs	r8, r7
  4046ce:	4642      	mov	r2, r8
  4046d0:	4649      	mov	r1, r9
  4046d2:	f000 fc75 	bl	404fc0 <memmove>
  4046d6:	68a3      	ldr	r3, [r4, #8]
  4046d8:	6822      	ldr	r2, [r4, #0]
  4046da:	eba3 0308 	sub.w	r3, r3, r8
  4046de:	4442      	add	r2, r8
  4046e0:	60a3      	str	r3, [r4, #8]
  4046e2:	6022      	str	r2, [r4, #0]
  4046e4:	b10b      	cbz	r3, 4046ea <__sfvwrite_r+0x1ca>
  4046e6:	46c2      	mov	sl, r8
  4046e8:	e779      	b.n	4045de <__sfvwrite_r+0xbe>
  4046ea:	4621      	mov	r1, r4
  4046ec:	9800      	ldr	r0, [sp, #0]
  4046ee:	f7ff fcb3 	bl	404058 <_fflush_r>
  4046f2:	2800      	cmp	r0, #0
  4046f4:	d192      	bne.n	40461c <__sfvwrite_r+0xfc>
  4046f6:	46c2      	mov	sl, r8
  4046f8:	e771      	b.n	4045de <__sfvwrite_r+0xbe>
  4046fa:	465a      	mov	r2, fp
  4046fc:	4629      	mov	r1, r5
  4046fe:	f000 fc5f 	bl	404fc0 <memmove>
  404702:	68a2      	ldr	r2, [r4, #8]
  404704:	6823      	ldr	r3, [r4, #0]
  404706:	eba2 020b 	sub.w	r2, r2, fp
  40470a:	445b      	add	r3, fp
  40470c:	60a2      	str	r2, [r4, #8]
  40470e:	6023      	str	r3, [r4, #0]
  404710:	e7af      	b.n	404672 <__sfvwrite_r+0x152>
  404712:	6820      	ldr	r0, [r4, #0]
  404714:	46b8      	mov	r8, r7
  404716:	46ba      	mov	sl, r7
  404718:	46bb      	mov	fp, r7
  40471a:	e755      	b.n	4045c8 <__sfvwrite_r+0xa8>
  40471c:	6962      	ldr	r2, [r4, #20]
  40471e:	6820      	ldr	r0, [r4, #0]
  404720:	6921      	ldr	r1, [r4, #16]
  404722:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  404726:	eba0 0a01 	sub.w	sl, r0, r1
  40472a:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  40472e:	f10a 0001 	add.w	r0, sl, #1
  404732:	ea4f 0868 	mov.w	r8, r8, asr #1
  404736:	4438      	add	r0, r7
  404738:	4540      	cmp	r0, r8
  40473a:	4642      	mov	r2, r8
  40473c:	bf84      	itt	hi
  40473e:	4680      	movhi	r8, r0
  404740:	4642      	movhi	r2, r8
  404742:	055b      	lsls	r3, r3, #21
  404744:	d544      	bpl.n	4047d0 <__sfvwrite_r+0x2b0>
  404746:	4611      	mov	r1, r2
  404748:	9800      	ldr	r0, [sp, #0]
  40474a:	f000 f921 	bl	404990 <_malloc_r>
  40474e:	4683      	mov	fp, r0
  404750:	2800      	cmp	r0, #0
  404752:	d055      	beq.n	404800 <__sfvwrite_r+0x2e0>
  404754:	4652      	mov	r2, sl
  404756:	6921      	ldr	r1, [r4, #16]
  404758:	f7fe fa1a 	bl	402b90 <memcpy>
  40475c:	89a3      	ldrh	r3, [r4, #12]
  40475e:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  404762:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  404766:	81a3      	strh	r3, [r4, #12]
  404768:	eb0b 000a 	add.w	r0, fp, sl
  40476c:	eba8 030a 	sub.w	r3, r8, sl
  404770:	f8c4 b010 	str.w	fp, [r4, #16]
  404774:	f8c4 8014 	str.w	r8, [r4, #20]
  404778:	6020      	str	r0, [r4, #0]
  40477a:	60a3      	str	r3, [r4, #8]
  40477c:	46b8      	mov	r8, r7
  40477e:	46ba      	mov	sl, r7
  404780:	46bb      	mov	fp, r7
  404782:	e721      	b.n	4045c8 <__sfvwrite_r+0xa8>
  404784:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  404788:	42b9      	cmp	r1, r7
  40478a:	bf28      	it	cs
  40478c:	4639      	movcs	r1, r7
  40478e:	464a      	mov	r2, r9
  404790:	fb91 f1f3 	sdiv	r1, r1, r3
  404794:	9800      	ldr	r0, [sp, #0]
  404796:	6a66      	ldr	r6, [r4, #36]	; 0x24
  404798:	fb03 f301 	mul.w	r3, r3, r1
  40479c:	69e1      	ldr	r1, [r4, #28]
  40479e:	47b0      	blx	r6
  4047a0:	f1b0 0a00 	subs.w	sl, r0, #0
  4047a4:	f73f af1b 	bgt.w	4045de <__sfvwrite_r+0xbe>
  4047a8:	e738      	b.n	40461c <__sfvwrite_r+0xfc>
  4047aa:	461a      	mov	r2, r3
  4047ac:	4629      	mov	r1, r5
  4047ae:	9301      	str	r3, [sp, #4]
  4047b0:	f000 fc06 	bl	404fc0 <memmove>
  4047b4:	6822      	ldr	r2, [r4, #0]
  4047b6:	9b01      	ldr	r3, [sp, #4]
  4047b8:	9800      	ldr	r0, [sp, #0]
  4047ba:	441a      	add	r2, r3
  4047bc:	6022      	str	r2, [r4, #0]
  4047be:	4621      	mov	r1, r4
  4047c0:	f7ff fc4a 	bl	404058 <_fflush_r>
  4047c4:	9b01      	ldr	r3, [sp, #4]
  4047c6:	2800      	cmp	r0, #0
  4047c8:	f47f af28 	bne.w	40461c <__sfvwrite_r+0xfc>
  4047cc:	461f      	mov	r7, r3
  4047ce:	e750      	b.n	404672 <__sfvwrite_r+0x152>
  4047d0:	9800      	ldr	r0, [sp, #0]
  4047d2:	f000 fc65 	bl	4050a0 <_realloc_r>
  4047d6:	4683      	mov	fp, r0
  4047d8:	2800      	cmp	r0, #0
  4047da:	d1c5      	bne.n	404768 <__sfvwrite_r+0x248>
  4047dc:	9d00      	ldr	r5, [sp, #0]
  4047de:	6921      	ldr	r1, [r4, #16]
  4047e0:	4628      	mov	r0, r5
  4047e2:	f7ff fdb7 	bl	404354 <_free_r>
  4047e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4047ea:	220c      	movs	r2, #12
  4047ec:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4047f0:	602a      	str	r2, [r5, #0]
  4047f2:	e715      	b.n	404620 <__sfvwrite_r+0x100>
  4047f4:	f106 0901 	add.w	r9, r6, #1
  4047f8:	e722      	b.n	404640 <__sfvwrite_r+0x120>
  4047fa:	f04f 30ff 	mov.w	r0, #4294967295
  4047fe:	e6bf      	b.n	404580 <__sfvwrite_r+0x60>
  404800:	9a00      	ldr	r2, [sp, #0]
  404802:	230c      	movs	r3, #12
  404804:	6013      	str	r3, [r2, #0]
  404806:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40480a:	e709      	b.n	404620 <__sfvwrite_r+0x100>
  40480c:	7ffffc00 	.word	0x7ffffc00

00404810 <_fwalk_reent>:
  404810:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404814:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  404818:	d01f      	beq.n	40485a <_fwalk_reent+0x4a>
  40481a:	4688      	mov	r8, r1
  40481c:	4606      	mov	r6, r0
  40481e:	f04f 0900 	mov.w	r9, #0
  404822:	687d      	ldr	r5, [r7, #4]
  404824:	68bc      	ldr	r4, [r7, #8]
  404826:	3d01      	subs	r5, #1
  404828:	d411      	bmi.n	40484e <_fwalk_reent+0x3e>
  40482a:	89a3      	ldrh	r3, [r4, #12]
  40482c:	2b01      	cmp	r3, #1
  40482e:	f105 35ff 	add.w	r5, r5, #4294967295
  404832:	d908      	bls.n	404846 <_fwalk_reent+0x36>
  404834:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  404838:	3301      	adds	r3, #1
  40483a:	4621      	mov	r1, r4
  40483c:	4630      	mov	r0, r6
  40483e:	d002      	beq.n	404846 <_fwalk_reent+0x36>
  404840:	47c0      	blx	r8
  404842:	ea49 0900 	orr.w	r9, r9, r0
  404846:	1c6b      	adds	r3, r5, #1
  404848:	f104 0468 	add.w	r4, r4, #104	; 0x68
  40484c:	d1ed      	bne.n	40482a <_fwalk_reent+0x1a>
  40484e:	683f      	ldr	r7, [r7, #0]
  404850:	2f00      	cmp	r7, #0
  404852:	d1e6      	bne.n	404822 <_fwalk_reent+0x12>
  404854:	4648      	mov	r0, r9
  404856:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40485a:	46b9      	mov	r9, r7
  40485c:	4648      	mov	r0, r9
  40485e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404862:	bf00      	nop

00404864 <__locale_mb_cur_max>:
  404864:	4b04      	ldr	r3, [pc, #16]	; (404878 <__locale_mb_cur_max+0x14>)
  404866:	4a05      	ldr	r2, [pc, #20]	; (40487c <__locale_mb_cur_max+0x18>)
  404868:	681b      	ldr	r3, [r3, #0]
  40486a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  40486c:	2b00      	cmp	r3, #0
  40486e:	bf08      	it	eq
  404870:	4613      	moveq	r3, r2
  404872:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  404876:	4770      	bx	lr
  404878:	20400024 	.word	0x20400024
  40487c:	20400454 	.word	0x20400454

00404880 <__retarget_lock_init_recursive>:
  404880:	4770      	bx	lr
  404882:	bf00      	nop

00404884 <__retarget_lock_close_recursive>:
  404884:	4770      	bx	lr
  404886:	bf00      	nop

00404888 <__retarget_lock_acquire_recursive>:
  404888:	4770      	bx	lr
  40488a:	bf00      	nop

0040488c <__retarget_lock_release_recursive>:
  40488c:	4770      	bx	lr
  40488e:	bf00      	nop

00404890 <__swhatbuf_r>:
  404890:	b570      	push	{r4, r5, r6, lr}
  404892:	460c      	mov	r4, r1
  404894:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404898:	2900      	cmp	r1, #0
  40489a:	b090      	sub	sp, #64	; 0x40
  40489c:	4615      	mov	r5, r2
  40489e:	461e      	mov	r6, r3
  4048a0:	db14      	blt.n	4048cc <__swhatbuf_r+0x3c>
  4048a2:	aa01      	add	r2, sp, #4
  4048a4:	f000 ff74 	bl	405790 <_fstat_r>
  4048a8:	2800      	cmp	r0, #0
  4048aa:	db0f      	blt.n	4048cc <__swhatbuf_r+0x3c>
  4048ac:	9a02      	ldr	r2, [sp, #8]
  4048ae:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  4048b2:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  4048b6:	fab2 f282 	clz	r2, r2
  4048ba:	0952      	lsrs	r2, r2, #5
  4048bc:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4048c0:	f44f 6000 	mov.w	r0, #2048	; 0x800
  4048c4:	6032      	str	r2, [r6, #0]
  4048c6:	602b      	str	r3, [r5, #0]
  4048c8:	b010      	add	sp, #64	; 0x40
  4048ca:	bd70      	pop	{r4, r5, r6, pc}
  4048cc:	89a2      	ldrh	r2, [r4, #12]
  4048ce:	2300      	movs	r3, #0
  4048d0:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  4048d4:	6033      	str	r3, [r6, #0]
  4048d6:	d004      	beq.n	4048e2 <__swhatbuf_r+0x52>
  4048d8:	2240      	movs	r2, #64	; 0x40
  4048da:	4618      	mov	r0, r3
  4048dc:	602a      	str	r2, [r5, #0]
  4048de:	b010      	add	sp, #64	; 0x40
  4048e0:	bd70      	pop	{r4, r5, r6, pc}
  4048e2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4048e6:	602b      	str	r3, [r5, #0]
  4048e8:	b010      	add	sp, #64	; 0x40
  4048ea:	bd70      	pop	{r4, r5, r6, pc}

004048ec <__smakebuf_r>:
  4048ec:	898a      	ldrh	r2, [r1, #12]
  4048ee:	0792      	lsls	r2, r2, #30
  4048f0:	460b      	mov	r3, r1
  4048f2:	d506      	bpl.n	404902 <__smakebuf_r+0x16>
  4048f4:	f101 0243 	add.w	r2, r1, #67	; 0x43
  4048f8:	2101      	movs	r1, #1
  4048fa:	601a      	str	r2, [r3, #0]
  4048fc:	611a      	str	r2, [r3, #16]
  4048fe:	6159      	str	r1, [r3, #20]
  404900:	4770      	bx	lr
  404902:	b5f0      	push	{r4, r5, r6, r7, lr}
  404904:	b083      	sub	sp, #12
  404906:	ab01      	add	r3, sp, #4
  404908:	466a      	mov	r2, sp
  40490a:	460c      	mov	r4, r1
  40490c:	4606      	mov	r6, r0
  40490e:	f7ff ffbf 	bl	404890 <__swhatbuf_r>
  404912:	9900      	ldr	r1, [sp, #0]
  404914:	4605      	mov	r5, r0
  404916:	4630      	mov	r0, r6
  404918:	f000 f83a 	bl	404990 <_malloc_r>
  40491c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404920:	b1d8      	cbz	r0, 40495a <__smakebuf_r+0x6e>
  404922:	9a01      	ldr	r2, [sp, #4]
  404924:	4f15      	ldr	r7, [pc, #84]	; (40497c <__smakebuf_r+0x90>)
  404926:	9900      	ldr	r1, [sp, #0]
  404928:	63f7      	str	r7, [r6, #60]	; 0x3c
  40492a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40492e:	81a3      	strh	r3, [r4, #12]
  404930:	6020      	str	r0, [r4, #0]
  404932:	6120      	str	r0, [r4, #16]
  404934:	6161      	str	r1, [r4, #20]
  404936:	b91a      	cbnz	r2, 404940 <__smakebuf_r+0x54>
  404938:	432b      	orrs	r3, r5
  40493a:	81a3      	strh	r3, [r4, #12]
  40493c:	b003      	add	sp, #12
  40493e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404940:	4630      	mov	r0, r6
  404942:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  404946:	f000 ff37 	bl	4057b8 <_isatty_r>
  40494a:	b1a0      	cbz	r0, 404976 <__smakebuf_r+0x8a>
  40494c:	89a3      	ldrh	r3, [r4, #12]
  40494e:	f023 0303 	bic.w	r3, r3, #3
  404952:	f043 0301 	orr.w	r3, r3, #1
  404956:	b21b      	sxth	r3, r3
  404958:	e7ee      	b.n	404938 <__smakebuf_r+0x4c>
  40495a:	059a      	lsls	r2, r3, #22
  40495c:	d4ee      	bmi.n	40493c <__smakebuf_r+0x50>
  40495e:	f023 0303 	bic.w	r3, r3, #3
  404962:	f104 0243 	add.w	r2, r4, #67	; 0x43
  404966:	f043 0302 	orr.w	r3, r3, #2
  40496a:	2101      	movs	r1, #1
  40496c:	81a3      	strh	r3, [r4, #12]
  40496e:	6022      	str	r2, [r4, #0]
  404970:	6122      	str	r2, [r4, #16]
  404972:	6161      	str	r1, [r4, #20]
  404974:	e7e2      	b.n	40493c <__smakebuf_r+0x50>
  404976:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40497a:	e7dd      	b.n	404938 <__smakebuf_r+0x4c>
  40497c:	004040ad 	.word	0x004040ad

00404980 <malloc>:
  404980:	4b02      	ldr	r3, [pc, #8]	; (40498c <malloc+0xc>)
  404982:	4601      	mov	r1, r0
  404984:	6818      	ldr	r0, [r3, #0]
  404986:	f000 b803 	b.w	404990 <_malloc_r>
  40498a:	bf00      	nop
  40498c:	20400024 	.word	0x20400024

00404990 <_malloc_r>:
  404990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404994:	f101 060b 	add.w	r6, r1, #11
  404998:	2e16      	cmp	r6, #22
  40499a:	b083      	sub	sp, #12
  40499c:	4605      	mov	r5, r0
  40499e:	f240 809e 	bls.w	404ade <_malloc_r+0x14e>
  4049a2:	f036 0607 	bics.w	r6, r6, #7
  4049a6:	f100 80bd 	bmi.w	404b24 <_malloc_r+0x194>
  4049aa:	42b1      	cmp	r1, r6
  4049ac:	f200 80ba 	bhi.w	404b24 <_malloc_r+0x194>
  4049b0:	f000 fb6a 	bl	405088 <__malloc_lock>
  4049b4:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4049b8:	f0c0 8293 	bcc.w	404ee2 <_malloc_r+0x552>
  4049bc:	0a73      	lsrs	r3, r6, #9
  4049be:	f000 80b8 	beq.w	404b32 <_malloc_r+0x1a2>
  4049c2:	2b04      	cmp	r3, #4
  4049c4:	f200 8179 	bhi.w	404cba <_malloc_r+0x32a>
  4049c8:	09b3      	lsrs	r3, r6, #6
  4049ca:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4049ce:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4049d2:	00c3      	lsls	r3, r0, #3
  4049d4:	4fbf      	ldr	r7, [pc, #764]	; (404cd4 <_malloc_r+0x344>)
  4049d6:	443b      	add	r3, r7
  4049d8:	f1a3 0108 	sub.w	r1, r3, #8
  4049dc:	685c      	ldr	r4, [r3, #4]
  4049de:	42a1      	cmp	r1, r4
  4049e0:	d106      	bne.n	4049f0 <_malloc_r+0x60>
  4049e2:	e00c      	b.n	4049fe <_malloc_r+0x6e>
  4049e4:	2a00      	cmp	r2, #0
  4049e6:	f280 80aa 	bge.w	404b3e <_malloc_r+0x1ae>
  4049ea:	68e4      	ldr	r4, [r4, #12]
  4049ec:	42a1      	cmp	r1, r4
  4049ee:	d006      	beq.n	4049fe <_malloc_r+0x6e>
  4049f0:	6863      	ldr	r3, [r4, #4]
  4049f2:	f023 0303 	bic.w	r3, r3, #3
  4049f6:	1b9a      	subs	r2, r3, r6
  4049f8:	2a0f      	cmp	r2, #15
  4049fa:	ddf3      	ble.n	4049e4 <_malloc_r+0x54>
  4049fc:	4670      	mov	r0, lr
  4049fe:	693c      	ldr	r4, [r7, #16]
  404a00:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404ce8 <_malloc_r+0x358>
  404a04:	4574      	cmp	r4, lr
  404a06:	f000 81ab 	beq.w	404d60 <_malloc_r+0x3d0>
  404a0a:	6863      	ldr	r3, [r4, #4]
  404a0c:	f023 0303 	bic.w	r3, r3, #3
  404a10:	1b9a      	subs	r2, r3, r6
  404a12:	2a0f      	cmp	r2, #15
  404a14:	f300 8190 	bgt.w	404d38 <_malloc_r+0x3a8>
  404a18:	2a00      	cmp	r2, #0
  404a1a:	f8c7 e014 	str.w	lr, [r7, #20]
  404a1e:	f8c7 e010 	str.w	lr, [r7, #16]
  404a22:	f280 809d 	bge.w	404b60 <_malloc_r+0x1d0>
  404a26:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404a2a:	f080 8161 	bcs.w	404cf0 <_malloc_r+0x360>
  404a2e:	08db      	lsrs	r3, r3, #3
  404a30:	f103 0c01 	add.w	ip, r3, #1
  404a34:	1099      	asrs	r1, r3, #2
  404a36:	687a      	ldr	r2, [r7, #4]
  404a38:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404a3c:	f8c4 8008 	str.w	r8, [r4, #8]
  404a40:	2301      	movs	r3, #1
  404a42:	408b      	lsls	r3, r1
  404a44:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  404a48:	4313      	orrs	r3, r2
  404a4a:	3908      	subs	r1, #8
  404a4c:	60e1      	str	r1, [r4, #12]
  404a4e:	607b      	str	r3, [r7, #4]
  404a50:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404a54:	f8c8 400c 	str.w	r4, [r8, #12]
  404a58:	1082      	asrs	r2, r0, #2
  404a5a:	2401      	movs	r4, #1
  404a5c:	4094      	lsls	r4, r2
  404a5e:	429c      	cmp	r4, r3
  404a60:	f200 808b 	bhi.w	404b7a <_malloc_r+0x1ea>
  404a64:	421c      	tst	r4, r3
  404a66:	d106      	bne.n	404a76 <_malloc_r+0xe6>
  404a68:	f020 0003 	bic.w	r0, r0, #3
  404a6c:	0064      	lsls	r4, r4, #1
  404a6e:	421c      	tst	r4, r3
  404a70:	f100 0004 	add.w	r0, r0, #4
  404a74:	d0fa      	beq.n	404a6c <_malloc_r+0xdc>
  404a76:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  404a7a:	46cc      	mov	ip, r9
  404a7c:	4680      	mov	r8, r0
  404a7e:	f8dc 300c 	ldr.w	r3, [ip, #12]
  404a82:	459c      	cmp	ip, r3
  404a84:	d107      	bne.n	404a96 <_malloc_r+0x106>
  404a86:	e16d      	b.n	404d64 <_malloc_r+0x3d4>
  404a88:	2a00      	cmp	r2, #0
  404a8a:	f280 817b 	bge.w	404d84 <_malloc_r+0x3f4>
  404a8e:	68db      	ldr	r3, [r3, #12]
  404a90:	459c      	cmp	ip, r3
  404a92:	f000 8167 	beq.w	404d64 <_malloc_r+0x3d4>
  404a96:	6859      	ldr	r1, [r3, #4]
  404a98:	f021 0103 	bic.w	r1, r1, #3
  404a9c:	1b8a      	subs	r2, r1, r6
  404a9e:	2a0f      	cmp	r2, #15
  404aa0:	ddf2      	ble.n	404a88 <_malloc_r+0xf8>
  404aa2:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404aa6:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404aaa:	9300      	str	r3, [sp, #0]
  404aac:	199c      	adds	r4, r3, r6
  404aae:	4628      	mov	r0, r5
  404ab0:	f046 0601 	orr.w	r6, r6, #1
  404ab4:	f042 0501 	orr.w	r5, r2, #1
  404ab8:	605e      	str	r6, [r3, #4]
  404aba:	f8c8 c00c 	str.w	ip, [r8, #12]
  404abe:	f8cc 8008 	str.w	r8, [ip, #8]
  404ac2:	617c      	str	r4, [r7, #20]
  404ac4:	613c      	str	r4, [r7, #16]
  404ac6:	f8c4 e00c 	str.w	lr, [r4, #12]
  404aca:	f8c4 e008 	str.w	lr, [r4, #8]
  404ace:	6065      	str	r5, [r4, #4]
  404ad0:	505a      	str	r2, [r3, r1]
  404ad2:	f000 fadf 	bl	405094 <__malloc_unlock>
  404ad6:	9b00      	ldr	r3, [sp, #0]
  404ad8:	f103 0408 	add.w	r4, r3, #8
  404adc:	e01e      	b.n	404b1c <_malloc_r+0x18c>
  404ade:	2910      	cmp	r1, #16
  404ae0:	d820      	bhi.n	404b24 <_malloc_r+0x194>
  404ae2:	f000 fad1 	bl	405088 <__malloc_lock>
  404ae6:	2610      	movs	r6, #16
  404ae8:	2318      	movs	r3, #24
  404aea:	2002      	movs	r0, #2
  404aec:	4f79      	ldr	r7, [pc, #484]	; (404cd4 <_malloc_r+0x344>)
  404aee:	443b      	add	r3, r7
  404af0:	f1a3 0208 	sub.w	r2, r3, #8
  404af4:	685c      	ldr	r4, [r3, #4]
  404af6:	4294      	cmp	r4, r2
  404af8:	f000 813d 	beq.w	404d76 <_malloc_r+0x3e6>
  404afc:	6863      	ldr	r3, [r4, #4]
  404afe:	68e1      	ldr	r1, [r4, #12]
  404b00:	68a6      	ldr	r6, [r4, #8]
  404b02:	f023 0303 	bic.w	r3, r3, #3
  404b06:	4423      	add	r3, r4
  404b08:	4628      	mov	r0, r5
  404b0a:	685a      	ldr	r2, [r3, #4]
  404b0c:	60f1      	str	r1, [r6, #12]
  404b0e:	f042 0201 	orr.w	r2, r2, #1
  404b12:	608e      	str	r6, [r1, #8]
  404b14:	605a      	str	r2, [r3, #4]
  404b16:	f000 fabd 	bl	405094 <__malloc_unlock>
  404b1a:	3408      	adds	r4, #8
  404b1c:	4620      	mov	r0, r4
  404b1e:	b003      	add	sp, #12
  404b20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b24:	2400      	movs	r4, #0
  404b26:	230c      	movs	r3, #12
  404b28:	4620      	mov	r0, r4
  404b2a:	602b      	str	r3, [r5, #0]
  404b2c:	b003      	add	sp, #12
  404b2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b32:	2040      	movs	r0, #64	; 0x40
  404b34:	f44f 7300 	mov.w	r3, #512	; 0x200
  404b38:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404b3c:	e74a      	b.n	4049d4 <_malloc_r+0x44>
  404b3e:	4423      	add	r3, r4
  404b40:	68e1      	ldr	r1, [r4, #12]
  404b42:	685a      	ldr	r2, [r3, #4]
  404b44:	68a6      	ldr	r6, [r4, #8]
  404b46:	f042 0201 	orr.w	r2, r2, #1
  404b4a:	60f1      	str	r1, [r6, #12]
  404b4c:	4628      	mov	r0, r5
  404b4e:	608e      	str	r6, [r1, #8]
  404b50:	605a      	str	r2, [r3, #4]
  404b52:	f000 fa9f 	bl	405094 <__malloc_unlock>
  404b56:	3408      	adds	r4, #8
  404b58:	4620      	mov	r0, r4
  404b5a:	b003      	add	sp, #12
  404b5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b60:	4423      	add	r3, r4
  404b62:	4628      	mov	r0, r5
  404b64:	685a      	ldr	r2, [r3, #4]
  404b66:	f042 0201 	orr.w	r2, r2, #1
  404b6a:	605a      	str	r2, [r3, #4]
  404b6c:	f000 fa92 	bl	405094 <__malloc_unlock>
  404b70:	3408      	adds	r4, #8
  404b72:	4620      	mov	r0, r4
  404b74:	b003      	add	sp, #12
  404b76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b7a:	68bc      	ldr	r4, [r7, #8]
  404b7c:	6863      	ldr	r3, [r4, #4]
  404b7e:	f023 0803 	bic.w	r8, r3, #3
  404b82:	45b0      	cmp	r8, r6
  404b84:	d304      	bcc.n	404b90 <_malloc_r+0x200>
  404b86:	eba8 0306 	sub.w	r3, r8, r6
  404b8a:	2b0f      	cmp	r3, #15
  404b8c:	f300 8085 	bgt.w	404c9a <_malloc_r+0x30a>
  404b90:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404cec <_malloc_r+0x35c>
  404b94:	4b50      	ldr	r3, [pc, #320]	; (404cd8 <_malloc_r+0x348>)
  404b96:	f8d9 2000 	ldr.w	r2, [r9]
  404b9a:	681b      	ldr	r3, [r3, #0]
  404b9c:	3201      	adds	r2, #1
  404b9e:	4433      	add	r3, r6
  404ba0:	eb04 0a08 	add.w	sl, r4, r8
  404ba4:	f000 8155 	beq.w	404e52 <_malloc_r+0x4c2>
  404ba8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404bac:	330f      	adds	r3, #15
  404bae:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  404bb2:	f02b 0b0f 	bic.w	fp, fp, #15
  404bb6:	4659      	mov	r1, fp
  404bb8:	4628      	mov	r0, r5
  404bba:	f000 fc17 	bl	4053ec <_sbrk_r>
  404bbe:	1c41      	adds	r1, r0, #1
  404bc0:	4602      	mov	r2, r0
  404bc2:	f000 80fc 	beq.w	404dbe <_malloc_r+0x42e>
  404bc6:	4582      	cmp	sl, r0
  404bc8:	f200 80f7 	bhi.w	404dba <_malloc_r+0x42a>
  404bcc:	4b43      	ldr	r3, [pc, #268]	; (404cdc <_malloc_r+0x34c>)
  404bce:	6819      	ldr	r1, [r3, #0]
  404bd0:	4459      	add	r1, fp
  404bd2:	6019      	str	r1, [r3, #0]
  404bd4:	f000 814d 	beq.w	404e72 <_malloc_r+0x4e2>
  404bd8:	f8d9 0000 	ldr.w	r0, [r9]
  404bdc:	3001      	adds	r0, #1
  404bde:	bf1b      	ittet	ne
  404be0:	eba2 0a0a 	subne.w	sl, r2, sl
  404be4:	4451      	addne	r1, sl
  404be6:	f8c9 2000 	streq.w	r2, [r9]
  404bea:	6019      	strne	r1, [r3, #0]
  404bec:	f012 0107 	ands.w	r1, r2, #7
  404bf0:	f000 8115 	beq.w	404e1e <_malloc_r+0x48e>
  404bf4:	f1c1 0008 	rsb	r0, r1, #8
  404bf8:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404bfc:	4402      	add	r2, r0
  404bfe:	3108      	adds	r1, #8
  404c00:	eb02 090b 	add.w	r9, r2, fp
  404c04:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404c08:	eba1 0909 	sub.w	r9, r1, r9
  404c0c:	4649      	mov	r1, r9
  404c0e:	4628      	mov	r0, r5
  404c10:	9301      	str	r3, [sp, #4]
  404c12:	9200      	str	r2, [sp, #0]
  404c14:	f000 fbea 	bl	4053ec <_sbrk_r>
  404c18:	1c43      	adds	r3, r0, #1
  404c1a:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404c1e:	f000 8143 	beq.w	404ea8 <_malloc_r+0x518>
  404c22:	1a80      	subs	r0, r0, r2
  404c24:	4448      	add	r0, r9
  404c26:	f040 0001 	orr.w	r0, r0, #1
  404c2a:	6819      	ldr	r1, [r3, #0]
  404c2c:	60ba      	str	r2, [r7, #8]
  404c2e:	4449      	add	r1, r9
  404c30:	42bc      	cmp	r4, r7
  404c32:	6050      	str	r0, [r2, #4]
  404c34:	6019      	str	r1, [r3, #0]
  404c36:	d017      	beq.n	404c68 <_malloc_r+0x2d8>
  404c38:	f1b8 0f0f 	cmp.w	r8, #15
  404c3c:	f240 80fb 	bls.w	404e36 <_malloc_r+0x4a6>
  404c40:	6860      	ldr	r0, [r4, #4]
  404c42:	f1a8 020c 	sub.w	r2, r8, #12
  404c46:	f022 0207 	bic.w	r2, r2, #7
  404c4a:	eb04 0e02 	add.w	lr, r4, r2
  404c4e:	f000 0001 	and.w	r0, r0, #1
  404c52:	f04f 0c05 	mov.w	ip, #5
  404c56:	4310      	orrs	r0, r2
  404c58:	2a0f      	cmp	r2, #15
  404c5a:	6060      	str	r0, [r4, #4]
  404c5c:	f8ce c004 	str.w	ip, [lr, #4]
  404c60:	f8ce c008 	str.w	ip, [lr, #8]
  404c64:	f200 8117 	bhi.w	404e96 <_malloc_r+0x506>
  404c68:	4b1d      	ldr	r3, [pc, #116]	; (404ce0 <_malloc_r+0x350>)
  404c6a:	68bc      	ldr	r4, [r7, #8]
  404c6c:	681a      	ldr	r2, [r3, #0]
  404c6e:	4291      	cmp	r1, r2
  404c70:	bf88      	it	hi
  404c72:	6019      	strhi	r1, [r3, #0]
  404c74:	4b1b      	ldr	r3, [pc, #108]	; (404ce4 <_malloc_r+0x354>)
  404c76:	681a      	ldr	r2, [r3, #0]
  404c78:	4291      	cmp	r1, r2
  404c7a:	6862      	ldr	r2, [r4, #4]
  404c7c:	bf88      	it	hi
  404c7e:	6019      	strhi	r1, [r3, #0]
  404c80:	f022 0203 	bic.w	r2, r2, #3
  404c84:	4296      	cmp	r6, r2
  404c86:	eba2 0306 	sub.w	r3, r2, r6
  404c8a:	d801      	bhi.n	404c90 <_malloc_r+0x300>
  404c8c:	2b0f      	cmp	r3, #15
  404c8e:	dc04      	bgt.n	404c9a <_malloc_r+0x30a>
  404c90:	4628      	mov	r0, r5
  404c92:	f000 f9ff 	bl	405094 <__malloc_unlock>
  404c96:	2400      	movs	r4, #0
  404c98:	e740      	b.n	404b1c <_malloc_r+0x18c>
  404c9a:	19a2      	adds	r2, r4, r6
  404c9c:	f043 0301 	orr.w	r3, r3, #1
  404ca0:	f046 0601 	orr.w	r6, r6, #1
  404ca4:	6066      	str	r6, [r4, #4]
  404ca6:	4628      	mov	r0, r5
  404ca8:	60ba      	str	r2, [r7, #8]
  404caa:	6053      	str	r3, [r2, #4]
  404cac:	f000 f9f2 	bl	405094 <__malloc_unlock>
  404cb0:	3408      	adds	r4, #8
  404cb2:	4620      	mov	r0, r4
  404cb4:	b003      	add	sp, #12
  404cb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404cba:	2b14      	cmp	r3, #20
  404cbc:	d971      	bls.n	404da2 <_malloc_r+0x412>
  404cbe:	2b54      	cmp	r3, #84	; 0x54
  404cc0:	f200 80a3 	bhi.w	404e0a <_malloc_r+0x47a>
  404cc4:	0b33      	lsrs	r3, r6, #12
  404cc6:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404cca:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404cce:	00c3      	lsls	r3, r0, #3
  404cd0:	e680      	b.n	4049d4 <_malloc_r+0x44>
  404cd2:	bf00      	nop
  404cd4:	204005c0 	.word	0x204005c0
  404cd8:	204072cc 	.word	0x204072cc
  404cdc:	2040729c 	.word	0x2040729c
  404ce0:	204072c4 	.word	0x204072c4
  404ce4:	204072c8 	.word	0x204072c8
  404ce8:	204005c8 	.word	0x204005c8
  404cec:	204009c8 	.word	0x204009c8
  404cf0:	0a5a      	lsrs	r2, r3, #9
  404cf2:	2a04      	cmp	r2, #4
  404cf4:	d95b      	bls.n	404dae <_malloc_r+0x41e>
  404cf6:	2a14      	cmp	r2, #20
  404cf8:	f200 80ae 	bhi.w	404e58 <_malloc_r+0x4c8>
  404cfc:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404d00:	00c9      	lsls	r1, r1, #3
  404d02:	325b      	adds	r2, #91	; 0x5b
  404d04:	eb07 0c01 	add.w	ip, r7, r1
  404d08:	5879      	ldr	r1, [r7, r1]
  404d0a:	f1ac 0c08 	sub.w	ip, ip, #8
  404d0e:	458c      	cmp	ip, r1
  404d10:	f000 8088 	beq.w	404e24 <_malloc_r+0x494>
  404d14:	684a      	ldr	r2, [r1, #4]
  404d16:	f022 0203 	bic.w	r2, r2, #3
  404d1a:	4293      	cmp	r3, r2
  404d1c:	d273      	bcs.n	404e06 <_malloc_r+0x476>
  404d1e:	6889      	ldr	r1, [r1, #8]
  404d20:	458c      	cmp	ip, r1
  404d22:	d1f7      	bne.n	404d14 <_malloc_r+0x384>
  404d24:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404d28:	687b      	ldr	r3, [r7, #4]
  404d2a:	60e2      	str	r2, [r4, #12]
  404d2c:	f8c4 c008 	str.w	ip, [r4, #8]
  404d30:	6094      	str	r4, [r2, #8]
  404d32:	f8cc 400c 	str.w	r4, [ip, #12]
  404d36:	e68f      	b.n	404a58 <_malloc_r+0xc8>
  404d38:	19a1      	adds	r1, r4, r6
  404d3a:	f046 0c01 	orr.w	ip, r6, #1
  404d3e:	f042 0601 	orr.w	r6, r2, #1
  404d42:	f8c4 c004 	str.w	ip, [r4, #4]
  404d46:	4628      	mov	r0, r5
  404d48:	6179      	str	r1, [r7, #20]
  404d4a:	6139      	str	r1, [r7, #16]
  404d4c:	f8c1 e00c 	str.w	lr, [r1, #12]
  404d50:	f8c1 e008 	str.w	lr, [r1, #8]
  404d54:	604e      	str	r6, [r1, #4]
  404d56:	50e2      	str	r2, [r4, r3]
  404d58:	f000 f99c 	bl	405094 <__malloc_unlock>
  404d5c:	3408      	adds	r4, #8
  404d5e:	e6dd      	b.n	404b1c <_malloc_r+0x18c>
  404d60:	687b      	ldr	r3, [r7, #4]
  404d62:	e679      	b.n	404a58 <_malloc_r+0xc8>
  404d64:	f108 0801 	add.w	r8, r8, #1
  404d68:	f018 0f03 	tst.w	r8, #3
  404d6c:	f10c 0c08 	add.w	ip, ip, #8
  404d70:	f47f ae85 	bne.w	404a7e <_malloc_r+0xee>
  404d74:	e02d      	b.n	404dd2 <_malloc_r+0x442>
  404d76:	68dc      	ldr	r4, [r3, #12]
  404d78:	42a3      	cmp	r3, r4
  404d7a:	bf08      	it	eq
  404d7c:	3002      	addeq	r0, #2
  404d7e:	f43f ae3e 	beq.w	4049fe <_malloc_r+0x6e>
  404d82:	e6bb      	b.n	404afc <_malloc_r+0x16c>
  404d84:	4419      	add	r1, r3
  404d86:	461c      	mov	r4, r3
  404d88:	684a      	ldr	r2, [r1, #4]
  404d8a:	68db      	ldr	r3, [r3, #12]
  404d8c:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404d90:	f042 0201 	orr.w	r2, r2, #1
  404d94:	604a      	str	r2, [r1, #4]
  404d96:	4628      	mov	r0, r5
  404d98:	60f3      	str	r3, [r6, #12]
  404d9a:	609e      	str	r6, [r3, #8]
  404d9c:	f000 f97a 	bl	405094 <__malloc_unlock>
  404da0:	e6bc      	b.n	404b1c <_malloc_r+0x18c>
  404da2:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404da6:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404daa:	00c3      	lsls	r3, r0, #3
  404dac:	e612      	b.n	4049d4 <_malloc_r+0x44>
  404dae:	099a      	lsrs	r2, r3, #6
  404db0:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404db4:	00c9      	lsls	r1, r1, #3
  404db6:	3238      	adds	r2, #56	; 0x38
  404db8:	e7a4      	b.n	404d04 <_malloc_r+0x374>
  404dba:	42bc      	cmp	r4, r7
  404dbc:	d054      	beq.n	404e68 <_malloc_r+0x4d8>
  404dbe:	68bc      	ldr	r4, [r7, #8]
  404dc0:	6862      	ldr	r2, [r4, #4]
  404dc2:	f022 0203 	bic.w	r2, r2, #3
  404dc6:	e75d      	b.n	404c84 <_malloc_r+0x2f4>
  404dc8:	f859 3908 	ldr.w	r3, [r9], #-8
  404dcc:	4599      	cmp	r9, r3
  404dce:	f040 8086 	bne.w	404ede <_malloc_r+0x54e>
  404dd2:	f010 0f03 	tst.w	r0, #3
  404dd6:	f100 30ff 	add.w	r0, r0, #4294967295
  404dda:	d1f5      	bne.n	404dc8 <_malloc_r+0x438>
  404ddc:	687b      	ldr	r3, [r7, #4]
  404dde:	ea23 0304 	bic.w	r3, r3, r4
  404de2:	607b      	str	r3, [r7, #4]
  404de4:	0064      	lsls	r4, r4, #1
  404de6:	429c      	cmp	r4, r3
  404de8:	f63f aec7 	bhi.w	404b7a <_malloc_r+0x1ea>
  404dec:	2c00      	cmp	r4, #0
  404dee:	f43f aec4 	beq.w	404b7a <_malloc_r+0x1ea>
  404df2:	421c      	tst	r4, r3
  404df4:	4640      	mov	r0, r8
  404df6:	f47f ae3e 	bne.w	404a76 <_malloc_r+0xe6>
  404dfa:	0064      	lsls	r4, r4, #1
  404dfc:	421c      	tst	r4, r3
  404dfe:	f100 0004 	add.w	r0, r0, #4
  404e02:	d0fa      	beq.n	404dfa <_malloc_r+0x46a>
  404e04:	e637      	b.n	404a76 <_malloc_r+0xe6>
  404e06:	468c      	mov	ip, r1
  404e08:	e78c      	b.n	404d24 <_malloc_r+0x394>
  404e0a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404e0e:	d815      	bhi.n	404e3c <_malloc_r+0x4ac>
  404e10:	0bf3      	lsrs	r3, r6, #15
  404e12:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404e16:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404e1a:	00c3      	lsls	r3, r0, #3
  404e1c:	e5da      	b.n	4049d4 <_malloc_r+0x44>
  404e1e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404e22:	e6ed      	b.n	404c00 <_malloc_r+0x270>
  404e24:	687b      	ldr	r3, [r7, #4]
  404e26:	1092      	asrs	r2, r2, #2
  404e28:	2101      	movs	r1, #1
  404e2a:	fa01 f202 	lsl.w	r2, r1, r2
  404e2e:	4313      	orrs	r3, r2
  404e30:	607b      	str	r3, [r7, #4]
  404e32:	4662      	mov	r2, ip
  404e34:	e779      	b.n	404d2a <_malloc_r+0x39a>
  404e36:	2301      	movs	r3, #1
  404e38:	6053      	str	r3, [r2, #4]
  404e3a:	e729      	b.n	404c90 <_malloc_r+0x300>
  404e3c:	f240 5254 	movw	r2, #1364	; 0x554
  404e40:	4293      	cmp	r3, r2
  404e42:	d822      	bhi.n	404e8a <_malloc_r+0x4fa>
  404e44:	0cb3      	lsrs	r3, r6, #18
  404e46:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404e4a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404e4e:	00c3      	lsls	r3, r0, #3
  404e50:	e5c0      	b.n	4049d4 <_malloc_r+0x44>
  404e52:	f103 0b10 	add.w	fp, r3, #16
  404e56:	e6ae      	b.n	404bb6 <_malloc_r+0x226>
  404e58:	2a54      	cmp	r2, #84	; 0x54
  404e5a:	d829      	bhi.n	404eb0 <_malloc_r+0x520>
  404e5c:	0b1a      	lsrs	r2, r3, #12
  404e5e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404e62:	00c9      	lsls	r1, r1, #3
  404e64:	326e      	adds	r2, #110	; 0x6e
  404e66:	e74d      	b.n	404d04 <_malloc_r+0x374>
  404e68:	4b20      	ldr	r3, [pc, #128]	; (404eec <_malloc_r+0x55c>)
  404e6a:	6819      	ldr	r1, [r3, #0]
  404e6c:	4459      	add	r1, fp
  404e6e:	6019      	str	r1, [r3, #0]
  404e70:	e6b2      	b.n	404bd8 <_malloc_r+0x248>
  404e72:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404e76:	2800      	cmp	r0, #0
  404e78:	f47f aeae 	bne.w	404bd8 <_malloc_r+0x248>
  404e7c:	eb08 030b 	add.w	r3, r8, fp
  404e80:	68ba      	ldr	r2, [r7, #8]
  404e82:	f043 0301 	orr.w	r3, r3, #1
  404e86:	6053      	str	r3, [r2, #4]
  404e88:	e6ee      	b.n	404c68 <_malloc_r+0x2d8>
  404e8a:	207f      	movs	r0, #127	; 0x7f
  404e8c:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404e90:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404e94:	e59e      	b.n	4049d4 <_malloc_r+0x44>
  404e96:	f104 0108 	add.w	r1, r4, #8
  404e9a:	4628      	mov	r0, r5
  404e9c:	9300      	str	r3, [sp, #0]
  404e9e:	f7ff fa59 	bl	404354 <_free_r>
  404ea2:	9b00      	ldr	r3, [sp, #0]
  404ea4:	6819      	ldr	r1, [r3, #0]
  404ea6:	e6df      	b.n	404c68 <_malloc_r+0x2d8>
  404ea8:	2001      	movs	r0, #1
  404eaa:	f04f 0900 	mov.w	r9, #0
  404eae:	e6bc      	b.n	404c2a <_malloc_r+0x29a>
  404eb0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404eb4:	d805      	bhi.n	404ec2 <_malloc_r+0x532>
  404eb6:	0bda      	lsrs	r2, r3, #15
  404eb8:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404ebc:	00c9      	lsls	r1, r1, #3
  404ebe:	3277      	adds	r2, #119	; 0x77
  404ec0:	e720      	b.n	404d04 <_malloc_r+0x374>
  404ec2:	f240 5154 	movw	r1, #1364	; 0x554
  404ec6:	428a      	cmp	r2, r1
  404ec8:	d805      	bhi.n	404ed6 <_malloc_r+0x546>
  404eca:	0c9a      	lsrs	r2, r3, #18
  404ecc:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404ed0:	00c9      	lsls	r1, r1, #3
  404ed2:	327c      	adds	r2, #124	; 0x7c
  404ed4:	e716      	b.n	404d04 <_malloc_r+0x374>
  404ed6:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404eda:	227e      	movs	r2, #126	; 0x7e
  404edc:	e712      	b.n	404d04 <_malloc_r+0x374>
  404ede:	687b      	ldr	r3, [r7, #4]
  404ee0:	e780      	b.n	404de4 <_malloc_r+0x454>
  404ee2:	08f0      	lsrs	r0, r6, #3
  404ee4:	f106 0308 	add.w	r3, r6, #8
  404ee8:	e600      	b.n	404aec <_malloc_r+0x15c>
  404eea:	bf00      	nop
  404eec:	2040729c 	.word	0x2040729c

00404ef0 <__ascii_mbtowc>:
  404ef0:	b082      	sub	sp, #8
  404ef2:	b149      	cbz	r1, 404f08 <__ascii_mbtowc+0x18>
  404ef4:	b15a      	cbz	r2, 404f0e <__ascii_mbtowc+0x1e>
  404ef6:	b16b      	cbz	r3, 404f14 <__ascii_mbtowc+0x24>
  404ef8:	7813      	ldrb	r3, [r2, #0]
  404efa:	600b      	str	r3, [r1, #0]
  404efc:	7812      	ldrb	r2, [r2, #0]
  404efe:	1c10      	adds	r0, r2, #0
  404f00:	bf18      	it	ne
  404f02:	2001      	movne	r0, #1
  404f04:	b002      	add	sp, #8
  404f06:	4770      	bx	lr
  404f08:	a901      	add	r1, sp, #4
  404f0a:	2a00      	cmp	r2, #0
  404f0c:	d1f3      	bne.n	404ef6 <__ascii_mbtowc+0x6>
  404f0e:	4610      	mov	r0, r2
  404f10:	b002      	add	sp, #8
  404f12:	4770      	bx	lr
  404f14:	f06f 0001 	mvn.w	r0, #1
  404f18:	e7f4      	b.n	404f04 <__ascii_mbtowc+0x14>
  404f1a:	bf00      	nop
  404f1c:	0000      	movs	r0, r0
	...

00404f20 <memchr>:
  404f20:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404f24:	2a10      	cmp	r2, #16
  404f26:	db2b      	blt.n	404f80 <memchr+0x60>
  404f28:	f010 0f07 	tst.w	r0, #7
  404f2c:	d008      	beq.n	404f40 <memchr+0x20>
  404f2e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404f32:	3a01      	subs	r2, #1
  404f34:	428b      	cmp	r3, r1
  404f36:	d02d      	beq.n	404f94 <memchr+0x74>
  404f38:	f010 0f07 	tst.w	r0, #7
  404f3c:	b342      	cbz	r2, 404f90 <memchr+0x70>
  404f3e:	d1f6      	bne.n	404f2e <memchr+0xe>
  404f40:	b4f0      	push	{r4, r5, r6, r7}
  404f42:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404f46:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  404f4a:	f022 0407 	bic.w	r4, r2, #7
  404f4e:	f07f 0700 	mvns.w	r7, #0
  404f52:	2300      	movs	r3, #0
  404f54:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404f58:	3c08      	subs	r4, #8
  404f5a:	ea85 0501 	eor.w	r5, r5, r1
  404f5e:	ea86 0601 	eor.w	r6, r6, r1
  404f62:	fa85 f547 	uadd8	r5, r5, r7
  404f66:	faa3 f587 	sel	r5, r3, r7
  404f6a:	fa86 f647 	uadd8	r6, r6, r7
  404f6e:	faa5 f687 	sel	r6, r5, r7
  404f72:	b98e      	cbnz	r6, 404f98 <memchr+0x78>
  404f74:	d1ee      	bne.n	404f54 <memchr+0x34>
  404f76:	bcf0      	pop	{r4, r5, r6, r7}
  404f78:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404f7c:	f002 0207 	and.w	r2, r2, #7
  404f80:	b132      	cbz	r2, 404f90 <memchr+0x70>
  404f82:	f810 3b01 	ldrb.w	r3, [r0], #1
  404f86:	3a01      	subs	r2, #1
  404f88:	ea83 0301 	eor.w	r3, r3, r1
  404f8c:	b113      	cbz	r3, 404f94 <memchr+0x74>
  404f8e:	d1f8      	bne.n	404f82 <memchr+0x62>
  404f90:	2000      	movs	r0, #0
  404f92:	4770      	bx	lr
  404f94:	3801      	subs	r0, #1
  404f96:	4770      	bx	lr
  404f98:	2d00      	cmp	r5, #0
  404f9a:	bf06      	itte	eq
  404f9c:	4635      	moveq	r5, r6
  404f9e:	3803      	subeq	r0, #3
  404fa0:	3807      	subne	r0, #7
  404fa2:	f015 0f01 	tst.w	r5, #1
  404fa6:	d107      	bne.n	404fb8 <memchr+0x98>
  404fa8:	3001      	adds	r0, #1
  404faa:	f415 7f80 	tst.w	r5, #256	; 0x100
  404fae:	bf02      	ittt	eq
  404fb0:	3001      	addeq	r0, #1
  404fb2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404fb6:	3001      	addeq	r0, #1
  404fb8:	bcf0      	pop	{r4, r5, r6, r7}
  404fba:	3801      	subs	r0, #1
  404fbc:	4770      	bx	lr
  404fbe:	bf00      	nop

00404fc0 <memmove>:
  404fc0:	4288      	cmp	r0, r1
  404fc2:	b5f0      	push	{r4, r5, r6, r7, lr}
  404fc4:	d90d      	bls.n	404fe2 <memmove+0x22>
  404fc6:	188b      	adds	r3, r1, r2
  404fc8:	4298      	cmp	r0, r3
  404fca:	d20a      	bcs.n	404fe2 <memmove+0x22>
  404fcc:	1884      	adds	r4, r0, r2
  404fce:	2a00      	cmp	r2, #0
  404fd0:	d051      	beq.n	405076 <memmove+0xb6>
  404fd2:	4622      	mov	r2, r4
  404fd4:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  404fd8:	f802 4d01 	strb.w	r4, [r2, #-1]!
  404fdc:	4299      	cmp	r1, r3
  404fde:	d1f9      	bne.n	404fd4 <memmove+0x14>
  404fe0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404fe2:	2a0f      	cmp	r2, #15
  404fe4:	d948      	bls.n	405078 <memmove+0xb8>
  404fe6:	ea41 0300 	orr.w	r3, r1, r0
  404fea:	079b      	lsls	r3, r3, #30
  404fec:	d146      	bne.n	40507c <memmove+0xbc>
  404fee:	f100 0410 	add.w	r4, r0, #16
  404ff2:	f101 0310 	add.w	r3, r1, #16
  404ff6:	4615      	mov	r5, r2
  404ff8:	f853 6c10 	ldr.w	r6, [r3, #-16]
  404ffc:	f844 6c10 	str.w	r6, [r4, #-16]
  405000:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405004:	f844 6c0c 	str.w	r6, [r4, #-12]
  405008:	f853 6c08 	ldr.w	r6, [r3, #-8]
  40500c:	f844 6c08 	str.w	r6, [r4, #-8]
  405010:	3d10      	subs	r5, #16
  405012:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405016:	f844 6c04 	str.w	r6, [r4, #-4]
  40501a:	2d0f      	cmp	r5, #15
  40501c:	f103 0310 	add.w	r3, r3, #16
  405020:	f104 0410 	add.w	r4, r4, #16
  405024:	d8e8      	bhi.n	404ff8 <memmove+0x38>
  405026:	f1a2 0310 	sub.w	r3, r2, #16
  40502a:	f023 030f 	bic.w	r3, r3, #15
  40502e:	f002 0e0f 	and.w	lr, r2, #15
  405032:	3310      	adds	r3, #16
  405034:	f1be 0f03 	cmp.w	lr, #3
  405038:	4419      	add	r1, r3
  40503a:	4403      	add	r3, r0
  40503c:	d921      	bls.n	405082 <memmove+0xc2>
  40503e:	1f1e      	subs	r6, r3, #4
  405040:	460d      	mov	r5, r1
  405042:	4674      	mov	r4, lr
  405044:	3c04      	subs	r4, #4
  405046:	f855 7b04 	ldr.w	r7, [r5], #4
  40504a:	f846 7f04 	str.w	r7, [r6, #4]!
  40504e:	2c03      	cmp	r4, #3
  405050:	d8f8      	bhi.n	405044 <memmove+0x84>
  405052:	f1ae 0404 	sub.w	r4, lr, #4
  405056:	f024 0403 	bic.w	r4, r4, #3
  40505a:	3404      	adds	r4, #4
  40505c:	4421      	add	r1, r4
  40505e:	4423      	add	r3, r4
  405060:	f002 0203 	and.w	r2, r2, #3
  405064:	b162      	cbz	r2, 405080 <memmove+0xc0>
  405066:	3b01      	subs	r3, #1
  405068:	440a      	add	r2, r1
  40506a:	f811 4b01 	ldrb.w	r4, [r1], #1
  40506e:	f803 4f01 	strb.w	r4, [r3, #1]!
  405072:	428a      	cmp	r2, r1
  405074:	d1f9      	bne.n	40506a <memmove+0xaa>
  405076:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405078:	4603      	mov	r3, r0
  40507a:	e7f3      	b.n	405064 <memmove+0xa4>
  40507c:	4603      	mov	r3, r0
  40507e:	e7f2      	b.n	405066 <memmove+0xa6>
  405080:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405082:	4672      	mov	r2, lr
  405084:	e7ee      	b.n	405064 <memmove+0xa4>
  405086:	bf00      	nop

00405088 <__malloc_lock>:
  405088:	4801      	ldr	r0, [pc, #4]	; (405090 <__malloc_lock+0x8>)
  40508a:	f7ff bbfd 	b.w	404888 <__retarget_lock_acquire_recursive>
  40508e:	bf00      	nop
  405090:	204084e4 	.word	0x204084e4

00405094 <__malloc_unlock>:
  405094:	4801      	ldr	r0, [pc, #4]	; (40509c <__malloc_unlock+0x8>)
  405096:	f7ff bbf9 	b.w	40488c <__retarget_lock_release_recursive>
  40509a:	bf00      	nop
  40509c:	204084e4 	.word	0x204084e4

004050a0 <_realloc_r>:
  4050a0:	2900      	cmp	r1, #0
  4050a2:	f000 8095 	beq.w	4051d0 <_realloc_r+0x130>
  4050a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4050aa:	460d      	mov	r5, r1
  4050ac:	4616      	mov	r6, r2
  4050ae:	b083      	sub	sp, #12
  4050b0:	4680      	mov	r8, r0
  4050b2:	f106 070b 	add.w	r7, r6, #11
  4050b6:	f7ff ffe7 	bl	405088 <__malloc_lock>
  4050ba:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4050be:	2f16      	cmp	r7, #22
  4050c0:	f02e 0403 	bic.w	r4, lr, #3
  4050c4:	f1a5 0908 	sub.w	r9, r5, #8
  4050c8:	d83c      	bhi.n	405144 <_realloc_r+0xa4>
  4050ca:	2210      	movs	r2, #16
  4050cc:	4617      	mov	r7, r2
  4050ce:	42be      	cmp	r6, r7
  4050d0:	d83d      	bhi.n	40514e <_realloc_r+0xae>
  4050d2:	4294      	cmp	r4, r2
  4050d4:	da43      	bge.n	40515e <_realloc_r+0xbe>
  4050d6:	4bc4      	ldr	r3, [pc, #784]	; (4053e8 <_realloc_r+0x348>)
  4050d8:	6899      	ldr	r1, [r3, #8]
  4050da:	eb09 0004 	add.w	r0, r9, r4
  4050de:	4288      	cmp	r0, r1
  4050e0:	f000 80b4 	beq.w	40524c <_realloc_r+0x1ac>
  4050e4:	6843      	ldr	r3, [r0, #4]
  4050e6:	f023 0101 	bic.w	r1, r3, #1
  4050ea:	4401      	add	r1, r0
  4050ec:	6849      	ldr	r1, [r1, #4]
  4050ee:	07c9      	lsls	r1, r1, #31
  4050f0:	d54c      	bpl.n	40518c <_realloc_r+0xec>
  4050f2:	f01e 0f01 	tst.w	lr, #1
  4050f6:	f000 809b 	beq.w	405230 <_realloc_r+0x190>
  4050fa:	4631      	mov	r1, r6
  4050fc:	4640      	mov	r0, r8
  4050fe:	f7ff fc47 	bl	404990 <_malloc_r>
  405102:	4606      	mov	r6, r0
  405104:	2800      	cmp	r0, #0
  405106:	d03a      	beq.n	40517e <_realloc_r+0xde>
  405108:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40510c:	f023 0301 	bic.w	r3, r3, #1
  405110:	444b      	add	r3, r9
  405112:	f1a0 0208 	sub.w	r2, r0, #8
  405116:	429a      	cmp	r2, r3
  405118:	f000 8121 	beq.w	40535e <_realloc_r+0x2be>
  40511c:	1f22      	subs	r2, r4, #4
  40511e:	2a24      	cmp	r2, #36	; 0x24
  405120:	f200 8107 	bhi.w	405332 <_realloc_r+0x292>
  405124:	2a13      	cmp	r2, #19
  405126:	f200 80db 	bhi.w	4052e0 <_realloc_r+0x240>
  40512a:	4603      	mov	r3, r0
  40512c:	462a      	mov	r2, r5
  40512e:	6811      	ldr	r1, [r2, #0]
  405130:	6019      	str	r1, [r3, #0]
  405132:	6851      	ldr	r1, [r2, #4]
  405134:	6059      	str	r1, [r3, #4]
  405136:	6892      	ldr	r2, [r2, #8]
  405138:	609a      	str	r2, [r3, #8]
  40513a:	4629      	mov	r1, r5
  40513c:	4640      	mov	r0, r8
  40513e:	f7ff f909 	bl	404354 <_free_r>
  405142:	e01c      	b.n	40517e <_realloc_r+0xde>
  405144:	f027 0707 	bic.w	r7, r7, #7
  405148:	2f00      	cmp	r7, #0
  40514a:	463a      	mov	r2, r7
  40514c:	dabf      	bge.n	4050ce <_realloc_r+0x2e>
  40514e:	2600      	movs	r6, #0
  405150:	230c      	movs	r3, #12
  405152:	4630      	mov	r0, r6
  405154:	f8c8 3000 	str.w	r3, [r8]
  405158:	b003      	add	sp, #12
  40515a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40515e:	462e      	mov	r6, r5
  405160:	1be3      	subs	r3, r4, r7
  405162:	2b0f      	cmp	r3, #15
  405164:	d81e      	bhi.n	4051a4 <_realloc_r+0x104>
  405166:	f8d9 3004 	ldr.w	r3, [r9, #4]
  40516a:	f003 0301 	and.w	r3, r3, #1
  40516e:	4323      	orrs	r3, r4
  405170:	444c      	add	r4, r9
  405172:	f8c9 3004 	str.w	r3, [r9, #4]
  405176:	6863      	ldr	r3, [r4, #4]
  405178:	f043 0301 	orr.w	r3, r3, #1
  40517c:	6063      	str	r3, [r4, #4]
  40517e:	4640      	mov	r0, r8
  405180:	f7ff ff88 	bl	405094 <__malloc_unlock>
  405184:	4630      	mov	r0, r6
  405186:	b003      	add	sp, #12
  405188:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40518c:	f023 0303 	bic.w	r3, r3, #3
  405190:	18e1      	adds	r1, r4, r3
  405192:	4291      	cmp	r1, r2
  405194:	db1f      	blt.n	4051d6 <_realloc_r+0x136>
  405196:	68c3      	ldr	r3, [r0, #12]
  405198:	6882      	ldr	r2, [r0, #8]
  40519a:	462e      	mov	r6, r5
  40519c:	60d3      	str	r3, [r2, #12]
  40519e:	460c      	mov	r4, r1
  4051a0:	609a      	str	r2, [r3, #8]
  4051a2:	e7dd      	b.n	405160 <_realloc_r+0xc0>
  4051a4:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4051a8:	eb09 0107 	add.w	r1, r9, r7
  4051ac:	f002 0201 	and.w	r2, r2, #1
  4051b0:	444c      	add	r4, r9
  4051b2:	f043 0301 	orr.w	r3, r3, #1
  4051b6:	4317      	orrs	r7, r2
  4051b8:	f8c9 7004 	str.w	r7, [r9, #4]
  4051bc:	604b      	str	r3, [r1, #4]
  4051be:	6863      	ldr	r3, [r4, #4]
  4051c0:	f043 0301 	orr.w	r3, r3, #1
  4051c4:	3108      	adds	r1, #8
  4051c6:	6063      	str	r3, [r4, #4]
  4051c8:	4640      	mov	r0, r8
  4051ca:	f7ff f8c3 	bl	404354 <_free_r>
  4051ce:	e7d6      	b.n	40517e <_realloc_r+0xde>
  4051d0:	4611      	mov	r1, r2
  4051d2:	f7ff bbdd 	b.w	404990 <_malloc_r>
  4051d6:	f01e 0f01 	tst.w	lr, #1
  4051da:	d18e      	bne.n	4050fa <_realloc_r+0x5a>
  4051dc:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4051e0:	eba9 0a01 	sub.w	sl, r9, r1
  4051e4:	f8da 1004 	ldr.w	r1, [sl, #4]
  4051e8:	f021 0103 	bic.w	r1, r1, #3
  4051ec:	440b      	add	r3, r1
  4051ee:	4423      	add	r3, r4
  4051f0:	4293      	cmp	r3, r2
  4051f2:	db25      	blt.n	405240 <_realloc_r+0x1a0>
  4051f4:	68c2      	ldr	r2, [r0, #12]
  4051f6:	6881      	ldr	r1, [r0, #8]
  4051f8:	4656      	mov	r6, sl
  4051fa:	60ca      	str	r2, [r1, #12]
  4051fc:	6091      	str	r1, [r2, #8]
  4051fe:	f8da 100c 	ldr.w	r1, [sl, #12]
  405202:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405206:	1f22      	subs	r2, r4, #4
  405208:	2a24      	cmp	r2, #36	; 0x24
  40520a:	60c1      	str	r1, [r0, #12]
  40520c:	6088      	str	r0, [r1, #8]
  40520e:	f200 8094 	bhi.w	40533a <_realloc_r+0x29a>
  405212:	2a13      	cmp	r2, #19
  405214:	d96f      	bls.n	4052f6 <_realloc_r+0x256>
  405216:	6829      	ldr	r1, [r5, #0]
  405218:	f8ca 1008 	str.w	r1, [sl, #8]
  40521c:	6869      	ldr	r1, [r5, #4]
  40521e:	f8ca 100c 	str.w	r1, [sl, #12]
  405222:	2a1b      	cmp	r2, #27
  405224:	f200 80a2 	bhi.w	40536c <_realloc_r+0x2cc>
  405228:	3508      	adds	r5, #8
  40522a:	f10a 0210 	add.w	r2, sl, #16
  40522e:	e063      	b.n	4052f8 <_realloc_r+0x258>
  405230:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405234:	eba9 0a03 	sub.w	sl, r9, r3
  405238:	f8da 1004 	ldr.w	r1, [sl, #4]
  40523c:	f021 0103 	bic.w	r1, r1, #3
  405240:	1863      	adds	r3, r4, r1
  405242:	4293      	cmp	r3, r2
  405244:	f6ff af59 	blt.w	4050fa <_realloc_r+0x5a>
  405248:	4656      	mov	r6, sl
  40524a:	e7d8      	b.n	4051fe <_realloc_r+0x15e>
  40524c:	6841      	ldr	r1, [r0, #4]
  40524e:	f021 0b03 	bic.w	fp, r1, #3
  405252:	44a3      	add	fp, r4
  405254:	f107 0010 	add.w	r0, r7, #16
  405258:	4583      	cmp	fp, r0
  40525a:	da56      	bge.n	40530a <_realloc_r+0x26a>
  40525c:	f01e 0f01 	tst.w	lr, #1
  405260:	f47f af4b 	bne.w	4050fa <_realloc_r+0x5a>
  405264:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405268:	eba9 0a01 	sub.w	sl, r9, r1
  40526c:	f8da 1004 	ldr.w	r1, [sl, #4]
  405270:	f021 0103 	bic.w	r1, r1, #3
  405274:	448b      	add	fp, r1
  405276:	4558      	cmp	r0, fp
  405278:	dce2      	bgt.n	405240 <_realloc_r+0x1a0>
  40527a:	4656      	mov	r6, sl
  40527c:	f8da 100c 	ldr.w	r1, [sl, #12]
  405280:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405284:	1f22      	subs	r2, r4, #4
  405286:	2a24      	cmp	r2, #36	; 0x24
  405288:	60c1      	str	r1, [r0, #12]
  40528a:	6088      	str	r0, [r1, #8]
  40528c:	f200 808f 	bhi.w	4053ae <_realloc_r+0x30e>
  405290:	2a13      	cmp	r2, #19
  405292:	f240 808a 	bls.w	4053aa <_realloc_r+0x30a>
  405296:	6829      	ldr	r1, [r5, #0]
  405298:	f8ca 1008 	str.w	r1, [sl, #8]
  40529c:	6869      	ldr	r1, [r5, #4]
  40529e:	f8ca 100c 	str.w	r1, [sl, #12]
  4052a2:	2a1b      	cmp	r2, #27
  4052a4:	f200 808a 	bhi.w	4053bc <_realloc_r+0x31c>
  4052a8:	3508      	adds	r5, #8
  4052aa:	f10a 0210 	add.w	r2, sl, #16
  4052ae:	6829      	ldr	r1, [r5, #0]
  4052b0:	6011      	str	r1, [r2, #0]
  4052b2:	6869      	ldr	r1, [r5, #4]
  4052b4:	6051      	str	r1, [r2, #4]
  4052b6:	68a9      	ldr	r1, [r5, #8]
  4052b8:	6091      	str	r1, [r2, #8]
  4052ba:	eb0a 0107 	add.w	r1, sl, r7
  4052be:	ebab 0207 	sub.w	r2, fp, r7
  4052c2:	f042 0201 	orr.w	r2, r2, #1
  4052c6:	6099      	str	r1, [r3, #8]
  4052c8:	604a      	str	r2, [r1, #4]
  4052ca:	f8da 3004 	ldr.w	r3, [sl, #4]
  4052ce:	f003 0301 	and.w	r3, r3, #1
  4052d2:	431f      	orrs	r7, r3
  4052d4:	4640      	mov	r0, r8
  4052d6:	f8ca 7004 	str.w	r7, [sl, #4]
  4052da:	f7ff fedb 	bl	405094 <__malloc_unlock>
  4052de:	e751      	b.n	405184 <_realloc_r+0xe4>
  4052e0:	682b      	ldr	r3, [r5, #0]
  4052e2:	6003      	str	r3, [r0, #0]
  4052e4:	686b      	ldr	r3, [r5, #4]
  4052e6:	6043      	str	r3, [r0, #4]
  4052e8:	2a1b      	cmp	r2, #27
  4052ea:	d82d      	bhi.n	405348 <_realloc_r+0x2a8>
  4052ec:	f100 0308 	add.w	r3, r0, #8
  4052f0:	f105 0208 	add.w	r2, r5, #8
  4052f4:	e71b      	b.n	40512e <_realloc_r+0x8e>
  4052f6:	4632      	mov	r2, r6
  4052f8:	6829      	ldr	r1, [r5, #0]
  4052fa:	6011      	str	r1, [r2, #0]
  4052fc:	6869      	ldr	r1, [r5, #4]
  4052fe:	6051      	str	r1, [r2, #4]
  405300:	68a9      	ldr	r1, [r5, #8]
  405302:	6091      	str	r1, [r2, #8]
  405304:	461c      	mov	r4, r3
  405306:	46d1      	mov	r9, sl
  405308:	e72a      	b.n	405160 <_realloc_r+0xc0>
  40530a:	eb09 0107 	add.w	r1, r9, r7
  40530e:	ebab 0b07 	sub.w	fp, fp, r7
  405312:	f04b 0201 	orr.w	r2, fp, #1
  405316:	6099      	str	r1, [r3, #8]
  405318:	604a      	str	r2, [r1, #4]
  40531a:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40531e:	f003 0301 	and.w	r3, r3, #1
  405322:	431f      	orrs	r7, r3
  405324:	4640      	mov	r0, r8
  405326:	f845 7c04 	str.w	r7, [r5, #-4]
  40532a:	f7ff feb3 	bl	405094 <__malloc_unlock>
  40532e:	462e      	mov	r6, r5
  405330:	e728      	b.n	405184 <_realloc_r+0xe4>
  405332:	4629      	mov	r1, r5
  405334:	f7ff fe44 	bl	404fc0 <memmove>
  405338:	e6ff      	b.n	40513a <_realloc_r+0x9a>
  40533a:	4629      	mov	r1, r5
  40533c:	4630      	mov	r0, r6
  40533e:	461c      	mov	r4, r3
  405340:	46d1      	mov	r9, sl
  405342:	f7ff fe3d 	bl	404fc0 <memmove>
  405346:	e70b      	b.n	405160 <_realloc_r+0xc0>
  405348:	68ab      	ldr	r3, [r5, #8]
  40534a:	6083      	str	r3, [r0, #8]
  40534c:	68eb      	ldr	r3, [r5, #12]
  40534e:	60c3      	str	r3, [r0, #12]
  405350:	2a24      	cmp	r2, #36	; 0x24
  405352:	d017      	beq.n	405384 <_realloc_r+0x2e4>
  405354:	f100 0310 	add.w	r3, r0, #16
  405358:	f105 0210 	add.w	r2, r5, #16
  40535c:	e6e7      	b.n	40512e <_realloc_r+0x8e>
  40535e:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405362:	f023 0303 	bic.w	r3, r3, #3
  405366:	441c      	add	r4, r3
  405368:	462e      	mov	r6, r5
  40536a:	e6f9      	b.n	405160 <_realloc_r+0xc0>
  40536c:	68a9      	ldr	r1, [r5, #8]
  40536e:	f8ca 1010 	str.w	r1, [sl, #16]
  405372:	68e9      	ldr	r1, [r5, #12]
  405374:	f8ca 1014 	str.w	r1, [sl, #20]
  405378:	2a24      	cmp	r2, #36	; 0x24
  40537a:	d00c      	beq.n	405396 <_realloc_r+0x2f6>
  40537c:	3510      	adds	r5, #16
  40537e:	f10a 0218 	add.w	r2, sl, #24
  405382:	e7b9      	b.n	4052f8 <_realloc_r+0x258>
  405384:	692b      	ldr	r3, [r5, #16]
  405386:	6103      	str	r3, [r0, #16]
  405388:	696b      	ldr	r3, [r5, #20]
  40538a:	6143      	str	r3, [r0, #20]
  40538c:	f105 0218 	add.w	r2, r5, #24
  405390:	f100 0318 	add.w	r3, r0, #24
  405394:	e6cb      	b.n	40512e <_realloc_r+0x8e>
  405396:	692a      	ldr	r2, [r5, #16]
  405398:	f8ca 2018 	str.w	r2, [sl, #24]
  40539c:	696a      	ldr	r2, [r5, #20]
  40539e:	f8ca 201c 	str.w	r2, [sl, #28]
  4053a2:	3518      	adds	r5, #24
  4053a4:	f10a 0220 	add.w	r2, sl, #32
  4053a8:	e7a6      	b.n	4052f8 <_realloc_r+0x258>
  4053aa:	4632      	mov	r2, r6
  4053ac:	e77f      	b.n	4052ae <_realloc_r+0x20e>
  4053ae:	4629      	mov	r1, r5
  4053b0:	4630      	mov	r0, r6
  4053b2:	9301      	str	r3, [sp, #4]
  4053b4:	f7ff fe04 	bl	404fc0 <memmove>
  4053b8:	9b01      	ldr	r3, [sp, #4]
  4053ba:	e77e      	b.n	4052ba <_realloc_r+0x21a>
  4053bc:	68a9      	ldr	r1, [r5, #8]
  4053be:	f8ca 1010 	str.w	r1, [sl, #16]
  4053c2:	68e9      	ldr	r1, [r5, #12]
  4053c4:	f8ca 1014 	str.w	r1, [sl, #20]
  4053c8:	2a24      	cmp	r2, #36	; 0x24
  4053ca:	d003      	beq.n	4053d4 <_realloc_r+0x334>
  4053cc:	3510      	adds	r5, #16
  4053ce:	f10a 0218 	add.w	r2, sl, #24
  4053d2:	e76c      	b.n	4052ae <_realloc_r+0x20e>
  4053d4:	692a      	ldr	r2, [r5, #16]
  4053d6:	f8ca 2018 	str.w	r2, [sl, #24]
  4053da:	696a      	ldr	r2, [r5, #20]
  4053dc:	f8ca 201c 	str.w	r2, [sl, #28]
  4053e0:	3518      	adds	r5, #24
  4053e2:	f10a 0220 	add.w	r2, sl, #32
  4053e6:	e762      	b.n	4052ae <_realloc_r+0x20e>
  4053e8:	204005c0 	.word	0x204005c0

004053ec <_sbrk_r>:
  4053ec:	b538      	push	{r3, r4, r5, lr}
  4053ee:	4c07      	ldr	r4, [pc, #28]	; (40540c <_sbrk_r+0x20>)
  4053f0:	2300      	movs	r3, #0
  4053f2:	4605      	mov	r5, r0
  4053f4:	4608      	mov	r0, r1
  4053f6:	6023      	str	r3, [r4, #0]
  4053f8:	f7fc ffa2 	bl	402340 <_sbrk>
  4053fc:	1c43      	adds	r3, r0, #1
  4053fe:	d000      	beq.n	405402 <_sbrk_r+0x16>
  405400:	bd38      	pop	{r3, r4, r5, pc}
  405402:	6823      	ldr	r3, [r4, #0]
  405404:	2b00      	cmp	r3, #0
  405406:	d0fb      	beq.n	405400 <_sbrk_r+0x14>
  405408:	602b      	str	r3, [r5, #0]
  40540a:	bd38      	pop	{r3, r4, r5, pc}
  40540c:	204084f8 	.word	0x204084f8

00405410 <__sread>:
  405410:	b510      	push	{r4, lr}
  405412:	460c      	mov	r4, r1
  405414:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405418:	f000 f9f6 	bl	405808 <_read_r>
  40541c:	2800      	cmp	r0, #0
  40541e:	db03      	blt.n	405428 <__sread+0x18>
  405420:	6d23      	ldr	r3, [r4, #80]	; 0x50
  405422:	4403      	add	r3, r0
  405424:	6523      	str	r3, [r4, #80]	; 0x50
  405426:	bd10      	pop	{r4, pc}
  405428:	89a3      	ldrh	r3, [r4, #12]
  40542a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  40542e:	81a3      	strh	r3, [r4, #12]
  405430:	bd10      	pop	{r4, pc}
  405432:	bf00      	nop

00405434 <__swrite>:
  405434:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405438:	4616      	mov	r6, r2
  40543a:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  40543e:	461f      	mov	r7, r3
  405440:	05d3      	lsls	r3, r2, #23
  405442:	460c      	mov	r4, r1
  405444:	4605      	mov	r5, r0
  405446:	d507      	bpl.n	405458 <__swrite+0x24>
  405448:	2200      	movs	r2, #0
  40544a:	2302      	movs	r3, #2
  40544c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405450:	f000 f9c4 	bl	4057dc <_lseek_r>
  405454:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  405458:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40545c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  405460:	81a2      	strh	r2, [r4, #12]
  405462:	463b      	mov	r3, r7
  405464:	4632      	mov	r2, r6
  405466:	4628      	mov	r0, r5
  405468:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40546c:	f000 b8a4 	b.w	4055b8 <_write_r>

00405470 <__sseek>:
  405470:	b510      	push	{r4, lr}
  405472:	460c      	mov	r4, r1
  405474:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405478:	f000 f9b0 	bl	4057dc <_lseek_r>
  40547c:	89a3      	ldrh	r3, [r4, #12]
  40547e:	1c42      	adds	r2, r0, #1
  405480:	bf0e      	itee	eq
  405482:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  405486:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  40548a:	6520      	strne	r0, [r4, #80]	; 0x50
  40548c:	81a3      	strh	r3, [r4, #12]
  40548e:	bd10      	pop	{r4, pc}

00405490 <__sclose>:
  405490:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405494:	f000 b908 	b.w	4056a8 <_close_r>

00405498 <__swbuf_r>:
  405498:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40549a:	460d      	mov	r5, r1
  40549c:	4614      	mov	r4, r2
  40549e:	4606      	mov	r6, r0
  4054a0:	b110      	cbz	r0, 4054a8 <__swbuf_r+0x10>
  4054a2:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4054a4:	2b00      	cmp	r3, #0
  4054a6:	d04b      	beq.n	405540 <__swbuf_r+0xa8>
  4054a8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4054ac:	69a3      	ldr	r3, [r4, #24]
  4054ae:	60a3      	str	r3, [r4, #8]
  4054b0:	b291      	uxth	r1, r2
  4054b2:	0708      	lsls	r0, r1, #28
  4054b4:	d539      	bpl.n	40552a <__swbuf_r+0x92>
  4054b6:	6923      	ldr	r3, [r4, #16]
  4054b8:	2b00      	cmp	r3, #0
  4054ba:	d036      	beq.n	40552a <__swbuf_r+0x92>
  4054bc:	b2ed      	uxtb	r5, r5
  4054be:	0489      	lsls	r1, r1, #18
  4054c0:	462f      	mov	r7, r5
  4054c2:	d515      	bpl.n	4054f0 <__swbuf_r+0x58>
  4054c4:	6822      	ldr	r2, [r4, #0]
  4054c6:	6961      	ldr	r1, [r4, #20]
  4054c8:	1ad3      	subs	r3, r2, r3
  4054ca:	428b      	cmp	r3, r1
  4054cc:	da1c      	bge.n	405508 <__swbuf_r+0x70>
  4054ce:	3301      	adds	r3, #1
  4054d0:	68a1      	ldr	r1, [r4, #8]
  4054d2:	1c50      	adds	r0, r2, #1
  4054d4:	3901      	subs	r1, #1
  4054d6:	60a1      	str	r1, [r4, #8]
  4054d8:	6020      	str	r0, [r4, #0]
  4054da:	7015      	strb	r5, [r2, #0]
  4054dc:	6962      	ldr	r2, [r4, #20]
  4054de:	429a      	cmp	r2, r3
  4054e0:	d01a      	beq.n	405518 <__swbuf_r+0x80>
  4054e2:	89a3      	ldrh	r3, [r4, #12]
  4054e4:	07db      	lsls	r3, r3, #31
  4054e6:	d501      	bpl.n	4054ec <__swbuf_r+0x54>
  4054e8:	2d0a      	cmp	r5, #10
  4054ea:	d015      	beq.n	405518 <__swbuf_r+0x80>
  4054ec:	4638      	mov	r0, r7
  4054ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4054f0:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4054f2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4054f6:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  4054fa:	81a2      	strh	r2, [r4, #12]
  4054fc:	6822      	ldr	r2, [r4, #0]
  4054fe:	6661      	str	r1, [r4, #100]	; 0x64
  405500:	6961      	ldr	r1, [r4, #20]
  405502:	1ad3      	subs	r3, r2, r3
  405504:	428b      	cmp	r3, r1
  405506:	dbe2      	blt.n	4054ce <__swbuf_r+0x36>
  405508:	4621      	mov	r1, r4
  40550a:	4630      	mov	r0, r6
  40550c:	f7fe fda4 	bl	404058 <_fflush_r>
  405510:	b940      	cbnz	r0, 405524 <__swbuf_r+0x8c>
  405512:	6822      	ldr	r2, [r4, #0]
  405514:	2301      	movs	r3, #1
  405516:	e7db      	b.n	4054d0 <__swbuf_r+0x38>
  405518:	4621      	mov	r1, r4
  40551a:	4630      	mov	r0, r6
  40551c:	f7fe fd9c 	bl	404058 <_fflush_r>
  405520:	2800      	cmp	r0, #0
  405522:	d0e3      	beq.n	4054ec <__swbuf_r+0x54>
  405524:	f04f 37ff 	mov.w	r7, #4294967295
  405528:	e7e0      	b.n	4054ec <__swbuf_r+0x54>
  40552a:	4621      	mov	r1, r4
  40552c:	4630      	mov	r0, r6
  40552e:	f7fe fc7f 	bl	403e30 <__swsetup_r>
  405532:	2800      	cmp	r0, #0
  405534:	d1f6      	bne.n	405524 <__swbuf_r+0x8c>
  405536:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40553a:	6923      	ldr	r3, [r4, #16]
  40553c:	b291      	uxth	r1, r2
  40553e:	e7bd      	b.n	4054bc <__swbuf_r+0x24>
  405540:	f7fe fde2 	bl	404108 <__sinit>
  405544:	e7b0      	b.n	4054a8 <__swbuf_r+0x10>
  405546:	bf00      	nop

00405548 <_wcrtomb_r>:
  405548:	b5f0      	push	{r4, r5, r6, r7, lr}
  40554a:	4606      	mov	r6, r0
  40554c:	b085      	sub	sp, #20
  40554e:	461f      	mov	r7, r3
  405550:	b189      	cbz	r1, 405576 <_wcrtomb_r+0x2e>
  405552:	4c10      	ldr	r4, [pc, #64]	; (405594 <_wcrtomb_r+0x4c>)
  405554:	4d10      	ldr	r5, [pc, #64]	; (405598 <_wcrtomb_r+0x50>)
  405556:	6824      	ldr	r4, [r4, #0]
  405558:	6b64      	ldr	r4, [r4, #52]	; 0x34
  40555a:	2c00      	cmp	r4, #0
  40555c:	bf08      	it	eq
  40555e:	462c      	moveq	r4, r5
  405560:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  405564:	47a0      	blx	r4
  405566:	1c43      	adds	r3, r0, #1
  405568:	d103      	bne.n	405572 <_wcrtomb_r+0x2a>
  40556a:	2200      	movs	r2, #0
  40556c:	238a      	movs	r3, #138	; 0x8a
  40556e:	603a      	str	r2, [r7, #0]
  405570:	6033      	str	r3, [r6, #0]
  405572:	b005      	add	sp, #20
  405574:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405576:	460c      	mov	r4, r1
  405578:	4906      	ldr	r1, [pc, #24]	; (405594 <_wcrtomb_r+0x4c>)
  40557a:	4a07      	ldr	r2, [pc, #28]	; (405598 <_wcrtomb_r+0x50>)
  40557c:	6809      	ldr	r1, [r1, #0]
  40557e:	6b49      	ldr	r1, [r1, #52]	; 0x34
  405580:	2900      	cmp	r1, #0
  405582:	bf08      	it	eq
  405584:	4611      	moveq	r1, r2
  405586:	4622      	mov	r2, r4
  405588:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  40558c:	a901      	add	r1, sp, #4
  40558e:	47a0      	blx	r4
  405590:	e7e9      	b.n	405566 <_wcrtomb_r+0x1e>
  405592:	bf00      	nop
  405594:	20400024 	.word	0x20400024
  405598:	20400454 	.word	0x20400454

0040559c <__ascii_wctomb>:
  40559c:	b121      	cbz	r1, 4055a8 <__ascii_wctomb+0xc>
  40559e:	2aff      	cmp	r2, #255	; 0xff
  4055a0:	d804      	bhi.n	4055ac <__ascii_wctomb+0x10>
  4055a2:	700a      	strb	r2, [r1, #0]
  4055a4:	2001      	movs	r0, #1
  4055a6:	4770      	bx	lr
  4055a8:	4608      	mov	r0, r1
  4055aa:	4770      	bx	lr
  4055ac:	238a      	movs	r3, #138	; 0x8a
  4055ae:	6003      	str	r3, [r0, #0]
  4055b0:	f04f 30ff 	mov.w	r0, #4294967295
  4055b4:	4770      	bx	lr
  4055b6:	bf00      	nop

004055b8 <_write_r>:
  4055b8:	b570      	push	{r4, r5, r6, lr}
  4055ba:	460d      	mov	r5, r1
  4055bc:	4c08      	ldr	r4, [pc, #32]	; (4055e0 <_write_r+0x28>)
  4055be:	4611      	mov	r1, r2
  4055c0:	4606      	mov	r6, r0
  4055c2:	461a      	mov	r2, r3
  4055c4:	4628      	mov	r0, r5
  4055c6:	2300      	movs	r3, #0
  4055c8:	6023      	str	r3, [r4, #0]
  4055ca:	f7fb ff65 	bl	401498 <_write>
  4055ce:	1c43      	adds	r3, r0, #1
  4055d0:	d000      	beq.n	4055d4 <_write_r+0x1c>
  4055d2:	bd70      	pop	{r4, r5, r6, pc}
  4055d4:	6823      	ldr	r3, [r4, #0]
  4055d6:	2b00      	cmp	r3, #0
  4055d8:	d0fb      	beq.n	4055d2 <_write_r+0x1a>
  4055da:	6033      	str	r3, [r6, #0]
  4055dc:	bd70      	pop	{r4, r5, r6, pc}
  4055de:	bf00      	nop
  4055e0:	204084f8 	.word	0x204084f8

004055e4 <__register_exitproc>:
  4055e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4055e8:	4d2c      	ldr	r5, [pc, #176]	; (40569c <__register_exitproc+0xb8>)
  4055ea:	4606      	mov	r6, r0
  4055ec:	6828      	ldr	r0, [r5, #0]
  4055ee:	4698      	mov	r8, r3
  4055f0:	460f      	mov	r7, r1
  4055f2:	4691      	mov	r9, r2
  4055f4:	f7ff f948 	bl	404888 <__retarget_lock_acquire_recursive>
  4055f8:	4b29      	ldr	r3, [pc, #164]	; (4056a0 <__register_exitproc+0xbc>)
  4055fa:	681c      	ldr	r4, [r3, #0]
  4055fc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405600:	2b00      	cmp	r3, #0
  405602:	d03e      	beq.n	405682 <__register_exitproc+0x9e>
  405604:	685a      	ldr	r2, [r3, #4]
  405606:	2a1f      	cmp	r2, #31
  405608:	dc1c      	bgt.n	405644 <__register_exitproc+0x60>
  40560a:	f102 0e01 	add.w	lr, r2, #1
  40560e:	b176      	cbz	r6, 40562e <__register_exitproc+0x4a>
  405610:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405614:	2401      	movs	r4, #1
  405616:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40561a:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  40561e:	4094      	lsls	r4, r2
  405620:	4320      	orrs	r0, r4
  405622:	2e02      	cmp	r6, #2
  405624:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  405628:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  40562c:	d023      	beq.n	405676 <__register_exitproc+0x92>
  40562e:	3202      	adds	r2, #2
  405630:	f8c3 e004 	str.w	lr, [r3, #4]
  405634:	6828      	ldr	r0, [r5, #0]
  405636:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40563a:	f7ff f927 	bl	40488c <__retarget_lock_release_recursive>
  40563e:	2000      	movs	r0, #0
  405640:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405644:	4b17      	ldr	r3, [pc, #92]	; (4056a4 <__register_exitproc+0xc0>)
  405646:	b30b      	cbz	r3, 40568c <__register_exitproc+0xa8>
  405648:	f44f 70c8 	mov.w	r0, #400	; 0x190
  40564c:	f7ff f998 	bl	404980 <malloc>
  405650:	4603      	mov	r3, r0
  405652:	b1d8      	cbz	r0, 40568c <__register_exitproc+0xa8>
  405654:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  405658:	6002      	str	r2, [r0, #0]
  40565a:	2100      	movs	r1, #0
  40565c:	6041      	str	r1, [r0, #4]
  40565e:	460a      	mov	r2, r1
  405660:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405664:	f04f 0e01 	mov.w	lr, #1
  405668:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  40566c:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405670:	2e00      	cmp	r6, #0
  405672:	d0dc      	beq.n	40562e <__register_exitproc+0x4a>
  405674:	e7cc      	b.n	405610 <__register_exitproc+0x2c>
  405676:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40567a:	430c      	orrs	r4, r1
  40567c:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405680:	e7d5      	b.n	40562e <__register_exitproc+0x4a>
  405682:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  405686:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40568a:	e7bb      	b.n	405604 <__register_exitproc+0x20>
  40568c:	6828      	ldr	r0, [r5, #0]
  40568e:	f7ff f8fd 	bl	40488c <__retarget_lock_release_recursive>
  405692:	f04f 30ff 	mov.w	r0, #4294967295
  405696:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40569a:	bf00      	nop
  40569c:	20400450 	.word	0x20400450
  4056a0:	00405b64 	.word	0x00405b64
  4056a4:	00404981 	.word	0x00404981

004056a8 <_close_r>:
  4056a8:	b538      	push	{r3, r4, r5, lr}
  4056aa:	4c07      	ldr	r4, [pc, #28]	; (4056c8 <_close_r+0x20>)
  4056ac:	2300      	movs	r3, #0
  4056ae:	4605      	mov	r5, r0
  4056b0:	4608      	mov	r0, r1
  4056b2:	6023      	str	r3, [r4, #0]
  4056b4:	f7fc fe60 	bl	402378 <_close>
  4056b8:	1c43      	adds	r3, r0, #1
  4056ba:	d000      	beq.n	4056be <_close_r+0x16>
  4056bc:	bd38      	pop	{r3, r4, r5, pc}
  4056be:	6823      	ldr	r3, [r4, #0]
  4056c0:	2b00      	cmp	r3, #0
  4056c2:	d0fb      	beq.n	4056bc <_close_r+0x14>
  4056c4:	602b      	str	r3, [r5, #0]
  4056c6:	bd38      	pop	{r3, r4, r5, pc}
  4056c8:	204084f8 	.word	0x204084f8

004056cc <_fclose_r>:
  4056cc:	b570      	push	{r4, r5, r6, lr}
  4056ce:	b159      	cbz	r1, 4056e8 <_fclose_r+0x1c>
  4056d0:	4605      	mov	r5, r0
  4056d2:	460c      	mov	r4, r1
  4056d4:	b110      	cbz	r0, 4056dc <_fclose_r+0x10>
  4056d6:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4056d8:	2b00      	cmp	r3, #0
  4056da:	d03c      	beq.n	405756 <_fclose_r+0x8a>
  4056dc:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4056de:	07d8      	lsls	r0, r3, #31
  4056e0:	d505      	bpl.n	4056ee <_fclose_r+0x22>
  4056e2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4056e6:	b92b      	cbnz	r3, 4056f4 <_fclose_r+0x28>
  4056e8:	2600      	movs	r6, #0
  4056ea:	4630      	mov	r0, r6
  4056ec:	bd70      	pop	{r4, r5, r6, pc}
  4056ee:	89a3      	ldrh	r3, [r4, #12]
  4056f0:	0599      	lsls	r1, r3, #22
  4056f2:	d53c      	bpl.n	40576e <_fclose_r+0xa2>
  4056f4:	4621      	mov	r1, r4
  4056f6:	4628      	mov	r0, r5
  4056f8:	f7fe fc0e 	bl	403f18 <__sflush_r>
  4056fc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  4056fe:	4606      	mov	r6, r0
  405700:	b133      	cbz	r3, 405710 <_fclose_r+0x44>
  405702:	69e1      	ldr	r1, [r4, #28]
  405704:	4628      	mov	r0, r5
  405706:	4798      	blx	r3
  405708:	2800      	cmp	r0, #0
  40570a:	bfb8      	it	lt
  40570c:	f04f 36ff 	movlt.w	r6, #4294967295
  405710:	89a3      	ldrh	r3, [r4, #12]
  405712:	061a      	lsls	r2, r3, #24
  405714:	d422      	bmi.n	40575c <_fclose_r+0x90>
  405716:	6b21      	ldr	r1, [r4, #48]	; 0x30
  405718:	b141      	cbz	r1, 40572c <_fclose_r+0x60>
  40571a:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40571e:	4299      	cmp	r1, r3
  405720:	d002      	beq.n	405728 <_fclose_r+0x5c>
  405722:	4628      	mov	r0, r5
  405724:	f7fe fe16 	bl	404354 <_free_r>
  405728:	2300      	movs	r3, #0
  40572a:	6323      	str	r3, [r4, #48]	; 0x30
  40572c:	6c61      	ldr	r1, [r4, #68]	; 0x44
  40572e:	b121      	cbz	r1, 40573a <_fclose_r+0x6e>
  405730:	4628      	mov	r0, r5
  405732:	f7fe fe0f 	bl	404354 <_free_r>
  405736:	2300      	movs	r3, #0
  405738:	6463      	str	r3, [r4, #68]	; 0x44
  40573a:	f7fe fd11 	bl	404160 <__sfp_lock_acquire>
  40573e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  405740:	2200      	movs	r2, #0
  405742:	07db      	lsls	r3, r3, #31
  405744:	81a2      	strh	r2, [r4, #12]
  405746:	d50e      	bpl.n	405766 <_fclose_r+0x9a>
  405748:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40574a:	f7ff f89b 	bl	404884 <__retarget_lock_close_recursive>
  40574e:	f7fe fd0d 	bl	40416c <__sfp_lock_release>
  405752:	4630      	mov	r0, r6
  405754:	bd70      	pop	{r4, r5, r6, pc}
  405756:	f7fe fcd7 	bl	404108 <__sinit>
  40575a:	e7bf      	b.n	4056dc <_fclose_r+0x10>
  40575c:	6921      	ldr	r1, [r4, #16]
  40575e:	4628      	mov	r0, r5
  405760:	f7fe fdf8 	bl	404354 <_free_r>
  405764:	e7d7      	b.n	405716 <_fclose_r+0x4a>
  405766:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405768:	f7ff f890 	bl	40488c <__retarget_lock_release_recursive>
  40576c:	e7ec      	b.n	405748 <_fclose_r+0x7c>
  40576e:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405770:	f7ff f88a 	bl	404888 <__retarget_lock_acquire_recursive>
  405774:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405778:	2b00      	cmp	r3, #0
  40577a:	d1bb      	bne.n	4056f4 <_fclose_r+0x28>
  40577c:	6e66      	ldr	r6, [r4, #100]	; 0x64
  40577e:	f016 0601 	ands.w	r6, r6, #1
  405782:	d1b1      	bne.n	4056e8 <_fclose_r+0x1c>
  405784:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405786:	f7ff f881 	bl	40488c <__retarget_lock_release_recursive>
  40578a:	4630      	mov	r0, r6
  40578c:	bd70      	pop	{r4, r5, r6, pc}
  40578e:	bf00      	nop

00405790 <_fstat_r>:
  405790:	b538      	push	{r3, r4, r5, lr}
  405792:	460b      	mov	r3, r1
  405794:	4c07      	ldr	r4, [pc, #28]	; (4057b4 <_fstat_r+0x24>)
  405796:	4605      	mov	r5, r0
  405798:	4611      	mov	r1, r2
  40579a:	4618      	mov	r0, r3
  40579c:	2300      	movs	r3, #0
  40579e:	6023      	str	r3, [r4, #0]
  4057a0:	f7fc fded 	bl	40237e <_fstat>
  4057a4:	1c43      	adds	r3, r0, #1
  4057a6:	d000      	beq.n	4057aa <_fstat_r+0x1a>
  4057a8:	bd38      	pop	{r3, r4, r5, pc}
  4057aa:	6823      	ldr	r3, [r4, #0]
  4057ac:	2b00      	cmp	r3, #0
  4057ae:	d0fb      	beq.n	4057a8 <_fstat_r+0x18>
  4057b0:	602b      	str	r3, [r5, #0]
  4057b2:	bd38      	pop	{r3, r4, r5, pc}
  4057b4:	204084f8 	.word	0x204084f8

004057b8 <_isatty_r>:
  4057b8:	b538      	push	{r3, r4, r5, lr}
  4057ba:	4c07      	ldr	r4, [pc, #28]	; (4057d8 <_isatty_r+0x20>)
  4057bc:	2300      	movs	r3, #0
  4057be:	4605      	mov	r5, r0
  4057c0:	4608      	mov	r0, r1
  4057c2:	6023      	str	r3, [r4, #0]
  4057c4:	f7fc fde0 	bl	402388 <_isatty>
  4057c8:	1c43      	adds	r3, r0, #1
  4057ca:	d000      	beq.n	4057ce <_isatty_r+0x16>
  4057cc:	bd38      	pop	{r3, r4, r5, pc}
  4057ce:	6823      	ldr	r3, [r4, #0]
  4057d0:	2b00      	cmp	r3, #0
  4057d2:	d0fb      	beq.n	4057cc <_isatty_r+0x14>
  4057d4:	602b      	str	r3, [r5, #0]
  4057d6:	bd38      	pop	{r3, r4, r5, pc}
  4057d8:	204084f8 	.word	0x204084f8

004057dc <_lseek_r>:
  4057dc:	b570      	push	{r4, r5, r6, lr}
  4057de:	460d      	mov	r5, r1
  4057e0:	4c08      	ldr	r4, [pc, #32]	; (405804 <_lseek_r+0x28>)
  4057e2:	4611      	mov	r1, r2
  4057e4:	4606      	mov	r6, r0
  4057e6:	461a      	mov	r2, r3
  4057e8:	4628      	mov	r0, r5
  4057ea:	2300      	movs	r3, #0
  4057ec:	6023      	str	r3, [r4, #0]
  4057ee:	f7fc fdcd 	bl	40238c <_lseek>
  4057f2:	1c43      	adds	r3, r0, #1
  4057f4:	d000      	beq.n	4057f8 <_lseek_r+0x1c>
  4057f6:	bd70      	pop	{r4, r5, r6, pc}
  4057f8:	6823      	ldr	r3, [r4, #0]
  4057fa:	2b00      	cmp	r3, #0
  4057fc:	d0fb      	beq.n	4057f6 <_lseek_r+0x1a>
  4057fe:	6033      	str	r3, [r6, #0]
  405800:	bd70      	pop	{r4, r5, r6, pc}
  405802:	bf00      	nop
  405804:	204084f8 	.word	0x204084f8

00405808 <_read_r>:
  405808:	b570      	push	{r4, r5, r6, lr}
  40580a:	460d      	mov	r5, r1
  40580c:	4c08      	ldr	r4, [pc, #32]	; (405830 <_read_r+0x28>)
  40580e:	4611      	mov	r1, r2
  405810:	4606      	mov	r6, r0
  405812:	461a      	mov	r2, r3
  405814:	4628      	mov	r0, r5
  405816:	2300      	movs	r3, #0
  405818:	6023      	str	r3, [r4, #0]
  40581a:	f7fa fcdb 	bl	4001d4 <_read>
  40581e:	1c43      	adds	r3, r0, #1
  405820:	d000      	beq.n	405824 <_read_r+0x1c>
  405822:	bd70      	pop	{r4, r5, r6, pc}
  405824:	6823      	ldr	r3, [r4, #0]
  405826:	2b00      	cmp	r3, #0
  405828:	d0fb      	beq.n	405822 <_read_r+0x1a>
  40582a:	6033      	str	r3, [r6, #0]
  40582c:	bd70      	pop	{r4, r5, r6, pc}
  40582e:	bf00      	nop
  405830:	204084f8 	.word	0x204084f8
  405834:	20594850 	.word	0x20594850
  405838:	74696e49 	.word	0x74696e49
  40583c:	696c6169 	.word	0x696c6169
  405840:	4520657a 	.word	0x4520657a
  405844:	524f5252 	.word	0x524f5252
  405848:	00000d21 	.word	0x00000d21
  40584c:	6f747541 	.word	0x6f747541
  405850:	67654e20 	.word	0x67654e20
  405854:	6169746f 	.word	0x6169746f
  405858:	45206574 	.word	0x45206574
  40585c:	524f5252 	.word	0x524f5252
  405860:	00000d21 	.word	0x00000d21
  405864:	20746553 	.word	0x20746553
  405868:	6b6e696c 	.word	0x6b6e696c
  40586c:	52524520 	.word	0x52524520
  405870:	0d21524f 	.word	0x0d21524f
  405874:	00000000 	.word	0x00000000
  405878:	00007350 	.word	0x00007350
  40587c:	20495053 	.word	0x20495053
  405880:	65657053 	.word	0x65657053
  405884:	3d200964 	.word	0x3d200964
  405888:	646c2520 	.word	0x646c2520
  40588c:	7a484d20 	.word	0x7a484d20
  405890:	00000a0d 	.word	0x00000a0d
  405894:	54415453 	.word	0x54415453
  405898:	09095355 	.word	0x09095355
  40589c:	30203d20 	.word	0x30203d20
  4058a0:	32302578 	.word	0x32302578
  4058a4:	58522078 	.word	0x58522078
  4058a8:	3d52445f 	.word	0x3d52445f
  4058ac:	54207825 	.word	0x54207825
  4058b0:	53445f58 	.word	0x53445f58
  4058b4:	2078253d 	.word	0x2078253d
  4058b8:	5f58414d 	.word	0x5f58414d
  4058bc:	253d5452 	.word	0x253d5452
  4058c0:	58522078 	.word	0x58522078
  4058c4:	4e5f505f 	.word	0x4e5f505f
  4058c8:	78253d4f 	.word	0x78253d4f
  4058cc:	5f585420 	.word	0x5f585420
  4058d0:	4c4c5546 	.word	0x4c4c5546
  4058d4:	0d78253d 	.word	0x0d78253d
  4058d8:	0000000a 	.word	0x0000000a
  4058dc:	415f5852 	.word	0x415f5852
  4058e0:	5f524444 	.word	0x5f524444
  4058e4:	312d3050 	.word	0x312d3050
  4058e8:	00000000 	.word	0x00000000
  4058ec:	415f5852 	.word	0x415f5852
  4058f0:	5f524444 	.word	0x5f524444
  4058f4:	352d3250 	.word	0x352d3250
  4058f8:	00000000 	.word	0x00000000
  4058fc:	415f5854 	.word	0x415f5854
  405900:	09524444 	.word	0x09524444
  405904:	00000000 	.word	0x00000000
  405908:	505f5852 	.word	0x505f5852
  40590c:	30505f57 	.word	0x30505f57
  405910:	0000352d 	.word	0x0000352d
  405914:	55544553 	.word	0x55544553
  405918:	57415f50 	.word	0x57415f50
  40591c:	00000000 	.word	0x00000000
  405920:	415f4e45 	.word	0x415f4e45
  405924:	00000941 	.word	0x00000941
  405928:	525f4e45 	.word	0x525f4e45
  40592c:	44444158 	.word	0x44444158
  405930:	00000052 	.word	0x00000052
  405934:	435f4652 	.word	0x435f4652
  405938:	00000948 	.word	0x00000948
  40593c:	535f4652 	.word	0x535f4652
  405940:	50555445 	.word	0x50555445
  405944:	00000000 	.word	0x00000000
  405948:	464e4f43 	.word	0x464e4f43
  40594c:	00094749 	.word	0x00094749
  405950:	504e5944 	.word	0x504e5944
  405954:	45462f44 	.word	0x45462f44
  405958:	52555441 	.word	0x52555441
  40595c:	00000045 	.word	0x00000045
  405960:	61746144 	.word	0x61746144
  405964:	74615220 	.word	0x74615220
  405968:	3d200965 	.word	0x3d200965
  40596c:	0d732520 	.word	0x0d732520
  405970:	0000000a 	.word	0x0000000a
  405974:	65646f4d 	.word	0x65646f4d
  405978:	2009096c 	.word	0x2009096c
  40597c:	7325203d 	.word	0x7325203d
  405980:	00000a0d 	.word	0x00000a0d
  405984:	20435243 	.word	0x20435243
  405988:	676e654c 	.word	0x676e654c
  40598c:	20096874 	.word	0x20096874
  405990:	7325203d 	.word	0x7325203d
  405994:	00000a0d 	.word	0x00000a0d
  405998:	50204150 	.word	0x50204150
  40599c:	7265776f 	.word	0x7265776f
  4059a0:	203d2009 	.word	0x203d2009
  4059a4:	0a0d7325 	.word	0x0a0d7325
  4059a8:	00000000 	.word	0x00000000
  4059ac:	00097325 	.word	0x00097325
  4059b0:	00783020 	.word	0x00783020
  4059b4:	78323025 	.word	0x78323025
  4059b8:	00000000 	.word	0x00000000
  4059bc:	25783020 	.word	0x25783020
  4059c0:	00783230 	.word	0x00783230

004059c4 <rf24_crclength_e_str_0>:
  4059c4:	61736944 64656c62 00000000              Disabled....

004059d0 <rf24_crclength_e_str_1>:
  4059d0:	69622038 00007374                       8 bits..

004059d8 <rf24_crclength_e_str_2>:
  4059d8:	62203631 00737469                       16 bits.

004059e0 <rf24_crclength_e_str_P>:
  4059e0:	004059c4 004059d0 004059d8              .Y@..Y@..Y@.

004059ec <rf24_datarate_e_str_0>:
  4059ec:	50424d31 00000053                       1MBPS...

004059f4 <rf24_datarate_e_str_1>:
  4059f4:	50424d32 00000053                       2MBPS...

004059fc <rf24_datarate_e_str_2>:
  4059fc:	4b303532 00535042                       250KBPS.

00405a04 <rf24_datarate_e_str_P>:
  405a04:	004059ec 004059f4 004059fc              .Y@..Y@..Y@.

00405a10 <rf24_model_e_str_1>:
  405a10:	3246526e 31304c34 0000002b              nRF24L01+...

00405a1c <rf24_pa_dbm_e_str_0>:
  405a1c:	4d5f4150 00004e49                       PA_MIN..

00405a24 <rf24_pa_dbm_e_str_1>:
  405a24:	4c5f4150 0000574f                       PA_LOW..

00405a2c <rf24_pa_dbm_e_str_2>:
  405a2c:	485f4150 00484749                       PA_HIGH.

00405a34 <rf24_pa_dbm_e_str_3>:
  405a34:	4d5f4150 00005841                       PA_MAX..

00405a3c <rf24_pa_dbm_e_str_P>:
  405a3c:	00405a1c 00405a24 00405a2c 00405a34     .Z@.$Z@.,Z@.4Z@.
  405a4c:	74746553 20676e69 20495053 636f6c63     Setting SPI cloc
  405a5c:	2523206b 2e20756c 0a202e2e 0000000d     k #%lu ... .....
  405a6c:	202d492d 74696e49 696c6169 5320657a     -I- Initialize S
  405a7c:	61204950 616d2073 72657473 0000000d     PI as master....
  405a8c:	4d202d2d 65747361 646f4e72 65525f65     -- MasterNode_Re
  405a9c:	312d3076 0d2d2d20 202d2d0a 454d4153     v0-1 --..-- SAME
  405aac:	582d3037 20444c50 0a0d2d2d 43202d2d     70-XPLD --..-- C
  405abc:	69706d6f 3a64656c 72614d20 20303320     ompiled: Mar 30 
  405acc:	31323032 3a313220 323a3231 2d2d2035     2021 21:12:25 --
  405adc:	0000000d 4d202d2d 25204341 78253a78     ....-- MAC %x:%x
  405aec:	3a78253a 253a7825 78253a78 00000d0a     :%x:%x:%x:%x....
  405afc:	49202d2d 25202050 64252e64 2e64252e     -- IP  %d.%d.%d.
  405b0c:	0d0a6425 00000000 6b6e696c 74656420     %d......link det
  405b1c:	65746365 00000d64 65646f4e 20642520     ected...Node %d 
  405b2c:	64616572 6e776f20 6e657320 0d726f73     read own sensor.
  405b3c:	0000000a 6e6e6f63 20746365 6b736564     ....connect desk
  405b4c:	206f7420 65646f6e 20642520 20726f66      to node %d for 
  405b5c:	0a0d6425 00000000                       %d......

00405b64 <_global_impure_ptr>:
  405b64:	20400028 33323130 37363534 42413938     (.@ 0123456789AB
  405b74:	46454443 00000000 33323130 37363534     CDEF....01234567
  405b84:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  405b94:	0000296c                                l)..

00405b98 <blanks.7217>:
  405b98:	20202020 20202020 20202020 20202020                     

00405ba8 <zeroes.7218>:
  405ba8:	30303030 30303030 30303030 30303030     0000000000000000
  405bb8:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00405bc8 <_ctype_>:
  405bc8:	20202000 20202020 28282020 20282828     .         ((((( 
  405bd8:	20202020 20202020 20202020 20202020                     
  405be8:	10108820 10101010 10101010 10101010      ...............
  405bf8:	04040410 04040404 10040404 10101010     ................
  405c08:	41411010 41414141 01010101 01010101     ..AAAAAA........
  405c18:	01010101 01010101 01010101 10101010     ................
  405c28:	42421010 42424242 02020202 02020202     ..BBBBBB........
  405c38:	02020202 02020202 02020202 10101010     ................
  405c48:	00000020 00000000 00000000 00000000      ...............
	...

00405ccc <_init>:
  405ccc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405cce:	bf00      	nop
  405cd0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  405cd2:	bc08      	pop	{r3}
  405cd4:	469e      	mov	lr, r3
  405cd6:	4770      	bx	lr

00405cd8 <__init_array_start>:
  405cd8:	00403ef9 	.word	0x00403ef9

00405cdc <__frame_dummy_init_array_entry>:
  405cdc:	0040018d                                ..@.

00405ce0 <_fini>:
  405ce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405ce2:	bf00      	nop
  405ce4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  405ce6:	bc08      	pop	{r3}
  405ce8:	469e      	mov	lr, r3
  405cea:	4770      	bx	lr

00405cec <__fini_array_start>:
  405cec:	00400169 	.word	0x00400169

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <gs_uc_ip_address>:
2040000c:	0202 0b02                                   ....

20400010 <gs_uc_mac_address>:
20400010:	0400 1c25 02a0                              ..%...

20400016 <payload_size>:
20400016:	0020                                         .

20400018 <gs_ul_spi_clock>:
20400018:	4b40 004c                                   @KL.

2040001c <g_interrupt_enabled>:
2040001c:	0001 0000                                   ....

20400020 <SystemCoreClock>:
20400020:	0900 003d                                   ..=.

20400024 <_impure_ptr>:
20400024:	0028 2040                                   (.@ 

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	84d4 2040                                   ..@ 

20400454 <__global_locale>:
20400454:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400474:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400494:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204004b4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204004d4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204004f4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400514:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400534:	559d 0040 4ef1 0040 0000 0000 5bc8 0040     .U@..N@......[@.
20400544:	5bc4 0040 5904 0040 5904 0040 5904 0040     .[@..Y@..Y@..Y@.
20400554:	5904 0040 5904 0040 5904 0040 5904 0040     .Y@..Y@..Y@..Y@.
20400564:	5904 0040 5904 0040 ffff ffff ffff ffff     .Y@..Y@.........
20400574:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
2040059c:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...

204005c0 <__malloc_av_>:
	...
204005c8:	05c0 2040 05c0 2040 05c8 2040 05c8 2040     ..@ ..@ ..@ ..@ 
204005d8:	05d0 2040 05d0 2040 05d8 2040 05d8 2040     ..@ ..@ ..@ ..@ 
204005e8:	05e0 2040 05e0 2040 05e8 2040 05e8 2040     ..@ ..@ ..@ ..@ 
204005f8:	05f0 2040 05f0 2040 05f8 2040 05f8 2040     ..@ ..@ ..@ ..@ 
20400608:	0600 2040 0600 2040 0608 2040 0608 2040     ..@ ..@ ..@ ..@ 
20400618:	0610 2040 0610 2040 0618 2040 0618 2040     ..@ ..@ ..@ ..@ 
20400628:	0620 2040 0620 2040 0628 2040 0628 2040      .@  .@ (.@ (.@ 
20400638:	0630 2040 0630 2040 0638 2040 0638 2040     0.@ 0.@ 8.@ 8.@ 
20400648:	0640 2040 0640 2040 0648 2040 0648 2040     @.@ @.@ H.@ H.@ 
20400658:	0650 2040 0650 2040 0658 2040 0658 2040     P.@ P.@ X.@ X.@ 
20400668:	0660 2040 0660 2040 0668 2040 0668 2040     `.@ `.@ h.@ h.@ 
20400678:	0670 2040 0670 2040 0678 2040 0678 2040     p.@ p.@ x.@ x.@ 
20400688:	0680 2040 0680 2040 0688 2040 0688 2040     ..@ ..@ ..@ ..@ 
20400698:	0690 2040 0690 2040 0698 2040 0698 2040     ..@ ..@ ..@ ..@ 
204006a8:	06a0 2040 06a0 2040 06a8 2040 06a8 2040     ..@ ..@ ..@ ..@ 
204006b8:	06b0 2040 06b0 2040 06b8 2040 06b8 2040     ..@ ..@ ..@ ..@ 
204006c8:	06c0 2040 06c0 2040 06c8 2040 06c8 2040     ..@ ..@ ..@ ..@ 
204006d8:	06d0 2040 06d0 2040 06d8 2040 06d8 2040     ..@ ..@ ..@ ..@ 
204006e8:	06e0 2040 06e0 2040 06e8 2040 06e8 2040     ..@ ..@ ..@ ..@ 
204006f8:	06f0 2040 06f0 2040 06f8 2040 06f8 2040     ..@ ..@ ..@ ..@ 
20400708:	0700 2040 0700 2040 0708 2040 0708 2040     ..@ ..@ ..@ ..@ 
20400718:	0710 2040 0710 2040 0718 2040 0718 2040     ..@ ..@ ..@ ..@ 
20400728:	0720 2040 0720 2040 0728 2040 0728 2040      .@  .@ (.@ (.@ 
20400738:	0730 2040 0730 2040 0738 2040 0738 2040     0.@ 0.@ 8.@ 8.@ 
20400748:	0740 2040 0740 2040 0748 2040 0748 2040     @.@ @.@ H.@ H.@ 
20400758:	0750 2040 0750 2040 0758 2040 0758 2040     P.@ P.@ X.@ X.@ 
20400768:	0760 2040 0760 2040 0768 2040 0768 2040     `.@ `.@ h.@ h.@ 
20400778:	0770 2040 0770 2040 0778 2040 0778 2040     p.@ p.@ x.@ x.@ 
20400788:	0780 2040 0780 2040 0788 2040 0788 2040     ..@ ..@ ..@ ..@ 
20400798:	0790 2040 0790 2040 0798 2040 0798 2040     ..@ ..@ ..@ ..@ 
204007a8:	07a0 2040 07a0 2040 07a8 2040 07a8 2040     ..@ ..@ ..@ ..@ 
204007b8:	07b0 2040 07b0 2040 07b8 2040 07b8 2040     ..@ ..@ ..@ ..@ 
204007c8:	07c0 2040 07c0 2040 07c8 2040 07c8 2040     ..@ ..@ ..@ ..@ 
204007d8:	07d0 2040 07d0 2040 07d8 2040 07d8 2040     ..@ ..@ ..@ ..@ 
204007e8:	07e0 2040 07e0 2040 07e8 2040 07e8 2040     ..@ ..@ ..@ ..@ 
204007f8:	07f0 2040 07f0 2040 07f8 2040 07f8 2040     ..@ ..@ ..@ ..@ 
20400808:	0800 2040 0800 2040 0808 2040 0808 2040     ..@ ..@ ..@ ..@ 
20400818:	0810 2040 0810 2040 0818 2040 0818 2040     ..@ ..@ ..@ ..@ 
20400828:	0820 2040 0820 2040 0828 2040 0828 2040      .@  .@ (.@ (.@ 
20400838:	0830 2040 0830 2040 0838 2040 0838 2040     0.@ 0.@ 8.@ 8.@ 
20400848:	0840 2040 0840 2040 0848 2040 0848 2040     @.@ @.@ H.@ H.@ 
20400858:	0850 2040 0850 2040 0858 2040 0858 2040     P.@ P.@ X.@ X.@ 
20400868:	0860 2040 0860 2040 0868 2040 0868 2040     `.@ `.@ h.@ h.@ 
20400878:	0870 2040 0870 2040 0878 2040 0878 2040     p.@ p.@ x.@ x.@ 
20400888:	0880 2040 0880 2040 0888 2040 0888 2040     ..@ ..@ ..@ ..@ 
20400898:	0890 2040 0890 2040 0898 2040 0898 2040     ..@ ..@ ..@ ..@ 
204008a8:	08a0 2040 08a0 2040 08a8 2040 08a8 2040     ..@ ..@ ..@ ..@ 
204008b8:	08b0 2040 08b0 2040 08b8 2040 08b8 2040     ..@ ..@ ..@ ..@ 
204008c8:	08c0 2040 08c0 2040 08c8 2040 08c8 2040     ..@ ..@ ..@ ..@ 
204008d8:	08d0 2040 08d0 2040 08d8 2040 08d8 2040     ..@ ..@ ..@ ..@ 
204008e8:	08e0 2040 08e0 2040 08e8 2040 08e8 2040     ..@ ..@ ..@ ..@ 
204008f8:	08f0 2040 08f0 2040 08f8 2040 08f8 2040     ..@ ..@ ..@ ..@ 
20400908:	0900 2040 0900 2040 0908 2040 0908 2040     ..@ ..@ ..@ ..@ 
20400918:	0910 2040 0910 2040 0918 2040 0918 2040     ..@ ..@ ..@ ..@ 
20400928:	0920 2040 0920 2040 0928 2040 0928 2040      .@  .@ (.@ (.@ 
20400938:	0930 2040 0930 2040 0938 2040 0938 2040     0.@ 0.@ 8.@ 8.@ 
20400948:	0940 2040 0940 2040 0948 2040 0948 2040     @.@ @.@ H.@ H.@ 
20400958:	0950 2040 0950 2040 0958 2040 0958 2040     P.@ P.@ X.@ X.@ 
20400968:	0960 2040 0960 2040 0968 2040 0968 2040     `.@ `.@ h.@ h.@ 
20400978:	0970 2040 0970 2040 0978 2040 0978 2040     p.@ p.@ x.@ x.@ 
20400988:	0980 2040 0980 2040 0988 2040 0988 2040     ..@ ..@ ..@ ..@ 
20400998:	0990 2040 0990 2040 0998 2040 0998 2040     ..@ ..@ ..@ ..@ 
204009a8:	09a0 2040 09a0 2040 09a8 2040 09a8 2040     ..@ ..@ ..@ ..@ 
204009b8:	09b0 2040 09b0 2040 09b8 2040 09b8 2040     ..@ ..@ ..@ ..@ 

204009c8 <__malloc_sbrk_base>:
204009c8:	ffff ffff                                   ....

204009cc <__malloc_trim_threshold>:
204009cc:	0000 0002                                   ....
